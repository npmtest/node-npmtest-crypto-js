{"/home/travis/build/npmtest/node-npmtest-crypto-js/test.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/test.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":1,"12":1,"13":1,"14":1,"15":2,"16":2,"17":2,"18":2,"19":1,"20":1,"21":2,"22":2,"23":2,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"34":1,"35":1,"36":2,"37":2,"38":1,"39":2,"40":2,"41":1,"42":2,"43":2,"44":1,"45":1,"46":1,"47":1,"48":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[1,1],"5":[1,1],"6":[1,1],"7":[1,1],"8":[1,1],"9":[1,1,1],"10":[1,1],"11":[1,1],"12":[1,1],"13":[1,1],"14":[1,1],"15":[1,1]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":1,"7":1,"8":2,"9":2,"10":2,"11":1},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}},"4":{"name":"(anonymous_4)","line":61,"loc":{"start":{"line":61,"column":5},"end":{"line":61,"column":17}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":5},"end":{"line":82,"column":17}}},"6":{"name":"(anonymous_6)","line":102,"loc":{"start":{"line":102,"column":83},"end":{"line":105,"column":10}},"skip":true},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":77},"end":{"line":116,"column":10}},"skip":true},"8":{"name":"(anonymous_8)","line":127,"loc":{"start":{"line":127,"column":77},"end":{"line":130,"column":10}},"skip":true},"9":{"name":"(anonymous_9)","line":138,"loc":{"start":{"line":138,"column":83},"end":{"line":141,"column":10}},"skip":true},"10":{"name":"(anonymous_10)","line":149,"loc":{"start":{"line":149,"column":79},"end":{"line":152,"column":10}},"skip":true},"11":{"name":"(anonymous_11)","line":160,"loc":{"start":{"line":160,"column":75},"end":{"line":163,"column":10}},"skip":true}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":175,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":56,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":40,"column":8},"end":{"line":53,"column":9}},"11":{"start":{"line":43,"column":12},"end":{"line":46,"column":14}},"12":{"start":{"line":47,"column":12},"end":{"line":47,"column":18}},"13":{"start":{"line":50,"column":12},"end":{"line":51,"column":46}},"14":{"start":{"line":52,"column":12},"end":{"line":52,"column":18}},"15":{"start":{"line":55,"column":8},"end":{"line":55,"column":35}},"16":{"start":{"line":61,"column":4},"end":{"line":63,"column":9}},"17":{"start":{"line":62,"column":8},"end":{"line":62,"column":15}},"18":{"start":{"line":64,"column":4},"end":{"line":77,"column":5}},"19":{"start":{"line":70,"column":8},"end":{"line":70,"column":14}},"20":{"start":{"line":76,"column":8},"end":{"line":76,"column":14}},"21":{"start":{"line":82,"column":4},"end":{"line":84,"column":9}},"22":{"start":{"line":83,"column":8},"end":{"line":83,"column":15}},"23":{"start":{"line":85,"column":4},"end":{"line":174,"column":5}},"24":{"start":{"line":92,"column":8},"end":{"line":94,"column":63}},"25":{"start":{"line":95,"column":8},"end":{"line":95,"column":14}},"26":{"start":{"line":102,"column":8},"end":{"line":111,"column":10},"skip":true},"27":{"start":{"line":109,"column":12},"end":{"line":109,"column":55},"skip":true},"28":{"start":{"line":110,"column":12},"end":{"line":110,"column":48},"skip":true},"29":{"start":{"line":113,"column":8},"end":{"line":125,"column":10},"skip":true},"30":{"start":{"line":120,"column":12},"end":{"line":120,"column":76},"skip":true},"31":{"start":{"line":121,"column":12},"end":{"line":121,"column":73},"skip":true},"32":{"start":{"line":122,"column":12},"end":{"line":122,"column":74},"skip":true},"33":{"start":{"line":123,"column":12},"end":{"line":123,"column":25},"skip":true},"34":{"start":{"line":124,"column":12},"end":{"line":124,"column":45},"skip":true},"35":{"start":{"line":127,"column":8},"end":{"line":136,"column":10},"skip":true},"36":{"start":{"line":134,"column":12},"end":{"line":134,"column":25},"skip":true},"37":{"start":{"line":135,"column":12},"end":{"line":135,"column":45},"skip":true},"38":{"start":{"line":138,"column":8},"end":{"line":147,"column":10},"skip":true},"39":{"start":{"line":145,"column":12},"end":{"line":145,"column":25},"skip":true},"40":{"start":{"line":146,"column":12},"end":{"line":146,"column":48},"skip":true},"41":{"start":{"line":149,"column":8},"end":{"line":158,"column":10},"skip":true},"42":{"start":{"line":156,"column":12},"end":{"line":156,"column":25},"skip":true},"43":{"start":{"line":157,"column":12},"end":{"line":157,"column":46},"skip":true},"44":{"start":{"line":160,"column":8},"end":{"line":169,"column":10},"skip":true},"45":{"start":{"line":167,"column":12},"end":{"line":167,"column":94},"skip":true},"46":{"start":{"line":168,"column":12},"end":{"line":168,"column":48},"skip":true},"47":{"start":{"line":172,"column":8},"end":{"line":172,"column":35},"skip":true},"48":{"start":{"line":173,"column":8},"end":{"line":173,"column":14},"skip":true}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":40,"type":"switch","locations":[{"start":{"line":42,"column":8},"end":{"line":47,"column":18}},{"start":{"line":49,"column":8},"end":{"line":52,"column":18}}]},"5":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":16},"end":{"line":44,"column":44}},{"start":{"line":44,"column":48},"end":{"line":44,"column":66}}]},"6":{"line":50,"type":"binary-expr","locations":[{"start":{"line":50,"column":21},"end":{"line":50,"column":49}},{"start":{"line":50,"column":53},"end":{"line":50,"column":72}}]},"7":{"line":64,"type":"switch","locations":[{"start":{"line":69,"column":4},"end":{"line":70,"column":14}},{"start":{"line":75,"column":4},"end":{"line":76,"column":14}}]},"8":{"line":85,"type":"switch","locations":[{"start":{"line":90,"column":4},"end":{"line":95,"column":14}},{"start":{"line":101,"column":4},"end":{"line":173,"column":14},"skip":true}]},"9":{"line":92,"type":"binary-expr","locations":[{"start":{"line":92,"column":18},"end":{"line":92,"column":32}},{"start":{"line":93,"column":12},"end":{"line":93,"column":53}},{"start":{"line":94,"column":12},"end":{"line":94,"column":61}}]},"10":{"line":102,"type":"binary-expr","locations":[{"start":{"line":102,"column":45},"end":{"line":102,"column":79},"skip":true},{"start":{"line":102,"column":83},"end":{"line":111,"column":9},"skip":true}]},"11":{"line":113,"type":"binary-expr","locations":[{"start":{"line":113,"column":42},"end":{"line":113,"column":73},"skip":true},{"start":{"line":113,"column":77},"end":{"line":125,"column":9},"skip":true}]},"12":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":42},"end":{"line":127,"column":73},"skip":true},{"start":{"line":127,"column":77},"end":{"line":136,"column":9},"skip":true}]},"13":{"line":138,"type":"binary-expr","locations":[{"start":{"line":138,"column":45},"end":{"line":138,"column":79},"skip":true},{"start":{"line":138,"column":83},"end":{"line":147,"column":9},"skip":true}]},"14":{"line":149,"type":"binary-expr","locations":[{"start":{"line":149,"column":43},"end":{"line":149,"column":75},"skip":true},{"start":{"line":149,"column":79},"end":{"line":158,"column":9},"skip":true}]},"15":{"line":160,"type":"binary-expr","locations":[{"start":{"line":160,"column":41},"end":{"line":160,"column":71},"skip":true},{"start":{"line":160,"column":75},"end":{"line":169,"column":9},"skip":true}]}},"code":["/* istanbul instrument in package npmtest_crypto_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        switch (local.modeJs) {","        // re-init local from window.local","        case 'browser':","            local = local.global.utility2.objectSetDefault(","                local.global.utility2_rollup || local.global.local,","                local.global.utility2","            );","            break;","        // re-init local from example.js","        case 'node':","            local = (local.global.utility2_rollup || require('utility2'))","                .requireExampleJsFromReadme();","            break;","        }","        // export local","        local.global.local = local;","    }());","","","","    // run shared js-env code - function","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - function","    case 'browser':","        break;","","","","    // run node js-env code - function","    case 'node':","        break;","    }","","","","    // run shared js-env code - post-init","    (function () {","        return;","    }());","    switch (local.modeJs) {","","","","    // run browser js-env code - post-init","    case 'browser':","        // run tests","        local.nop(local.modeTest &&","            document.querySelector('#testRunButton1') &&","            document.querySelector('#testRunButton1').click());","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApidoc's default handling-behavior-behavior","         */","            options = { modulePathList: module.paths };","            local.buildApidoc(options, onError);","        };","","        local.testCase_buildApp_default = local.testCase_buildApp_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildApp's default handling-behavior-behavior","         */","            local.testCase_buildReadme_default(options, local.onErrorThrow);","            local.testCase_buildLib_default(options, local.onErrorThrow);","            local.testCase_buildTest_default(options, local.onErrorThrow);","            options = [];","            local.buildApp(options, onError);","        };","","        local.testCase_buildLib_default = local.testCase_buildLib_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildLib's default handling-behavior","         */","            options = {};","            local.buildLib(options, onError);","        };","","        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildReadme's default handling-behavior-behavior","         */","            options = {};","            local.buildReadme(options, onError);","        };","","        local.testCase_buildTest_default = local.testCase_buildTest_default || function (","            options,","            onError","        ) {","        /*","         * this function will test buildTest's default handling-behavior","         */","            options = {};","            local.buildTest(options, onError);","        };","","        local.testCase_webpage_default = local.testCase_webpage_default || function (","            options,","            onError","        ) {","        /*","         * this function will test webpage's default handling-behavior","         */","            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };","            local.browserTest(options, onError);","        };","","        // run test-server","        local.testRunServer(local);","        break;","    }","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"40":2,"43":1,"47":1,"50":1,"52":1,"55":2,"61":2,"62":2,"64":2,"70":1,"76":1,"82":2,"83":2,"85":2,"92":1,"95":1,"102":1,"109":1,"110":1,"113":1,"120":1,"121":1,"122":1,"123":1,"124":1,"127":1,"134":2,"135":2,"138":1,"145":2,"146":2,"149":1,"156":2,"157":2,"160":1,"167":1,"168":1,"172":1,"173":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/lib.npmtest_crypto_js.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/lib.npmtest_crypto_js.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":1,"15":1,"16":1},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1]},"f":{"1":2,"2":2,"3":2},"fnMap":{"1":{"name":"(anonymous_1)","line":12,"loc":{"start":{"line":12,"column":1},"end":{"line":12,"column":13}}},"2":{"name":"(anonymous_2)","line":19,"loc":{"start":{"line":19,"column":5},"end":{"line":19,"column":17}}},"3":{"name":"(anonymous_3)","line":23,"loc":{"start":{"line":23,"column":24},"end":{"line":23,"column":36}}}},"statementMap":{"1":{"start":{"line":12,"column":0},"end":{"line":53,"column":5}},"2":{"start":{"line":14,"column":4},"end":{"line":14,"column":14}},"3":{"start":{"line":19,"column":4},"end":{"line":52,"column":9}},"4":{"start":{"line":21,"column":8},"end":{"line":21,"column":19}},"5":{"start":{"line":23,"column":8},"end":{"line":35,"column":13}},"6":{"start":{"line":24,"column":12},"end":{"line":34,"column":13}},"7":{"start":{"line":25,"column":16},"end":{"line":28,"column":30}},"8":{"start":{"line":30,"column":16},"end":{"line":33,"column":27}},"9":{"start":{"line":37,"column":8},"end":{"line":39,"column":21}},"10":{"start":{"line":41,"column":8},"end":{"line":41,"column":54}},"11":{"start":{"line":43,"column":8},"end":{"line":43,"column":54}},"12":{"start":{"line":45,"column":8},"end":{"line":51,"column":9}},"13":{"start":{"line":46,"column":12},"end":{"line":46,"column":60}},"14":{"start":{"line":48,"column":12},"end":{"line":48,"column":35}},"15":{"start":{"line":49,"column":12},"end":{"line":49,"column":49}},"16":{"start":{"line":50,"column":12},"end":{"line":50,"column":43}}},"branchMap":{"1":{"line":25,"type":"binary-expr","locations":[{"start":{"line":25,"column":23},"end":{"line":25,"column":62}},{"start":{"line":26,"column":20},"end":{"line":26,"column":70}},{"start":{"line":27,"column":20},"end":{"line":27,"column":71}},{"start":{"line":28,"column":20},"end":{"line":28,"column":29}}]},"2":{"line":30,"type":"binary-expr","locations":[{"start":{"line":30,"column":23},"end":{"line":30,"column":37}},{"start":{"line":31,"column":20},"end":{"line":31,"column":61}},{"start":{"line":32,"column":20},"end":{"line":32,"column":70}},{"start":{"line":33,"column":20},"end":{"line":33,"column":26}}]},"3":{"line":37,"type":"cond-expr","locations":[{"start":{"line":38,"column":14},"end":{"line":38,"column":20}},{"start":{"line":39,"column":14},"end":{"line":39,"column":20}}]},"4":{"line":41,"type":"binary-expr","locations":[{"start":{"line":41,"column":16},"end":{"line":41,"column":44}},{"start":{"line":41,"column":48},"end":{"line":41,"column":53}}]},"5":{"line":45,"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":45,"column":8}},{"start":{"line":45,"column":8},"end":{"line":45,"column":8}}]}},"code":["/* istanbul instrument in package npmtest_crypto_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || local;","        // init lib","        local.local = local.npmtest_crypto_js = local;","        // init exports","        if (local.modeJs === 'browser') {","            local.global.utility2_npmtest_crypto_js = local;","        } else {","            module.exports = local;","            module.exports.__dirname = __dirname;","            module.exports.module = module;","        }","    }());","}());",""],"l":{"12":2,"14":2,"19":2,"21":2,"23":2,"24":2,"25":2,"30":1,"37":2,"41":2,"43":2,"45":2,"46":1,"48":1,"49":1,"50":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/example.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/example.js","s":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":1,"9":2,"10":2,"11":2,"12":2,"13":1,"14":2,"15":2,"16":2,"17":2,"18":2,"19":0,"20":2,"21":1,"22":1,"23":1,"24":1,"25":1,"26":0,"27":0,"28":1,"29":1,"30":2,"31":0,"32":0,"33":0,"34":1,"35":2,"36":2,"37":2,"38":2,"39":2,"40":2,"41":0,"42":2,"43":2,"44":2,"45":1,"46":3,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":1,"55":1,"56":1,"57":0,"58":1,"59":6,"60":6,"61":1,"62":2,"63":0,"64":2,"65":1,"66":1,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0},"b":{"1":[2,1,1,1],"2":[1,1,1,1],"3":[1,1],"4":[2,2],"5":[1,1],"6":[1,1],"7":[2,0],"8":[2,1,1,1,1,1],"9":[0,2,0],"10":[1,1],"11":[2,1,1],"12":[1,0],"13":[0,2],"14":[2,0,0,0,0,0,0],"15":[0,2],"16":[2,0],"17":[1,1],"18":[0,1],"19":[1,2,0,2],"20":[1,0],"21":[1,1],"22":[0,0],"23":[0,0],"24":[0,0],"25":[0,0],"26":[0,0],"27":[0,0],"28":[0,0]},"f":{"1":2,"2":2,"3":2,"4":2,"5":2,"6":2,"7":2,"8":2,"9":3,"10":1,"11":6,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":26,"loc":{"start":{"line":26,"column":1},"end":{"line":26,"column":13}}},"2":{"name":"(anonymous_2)","line":33,"loc":{"start":{"line":33,"column":5},"end":{"line":33,"column":17}}},"3":{"name":"(anonymous_3)","line":37,"loc":{"start":{"line":37,"column":24},"end":{"line":37,"column":36}}},"4":{"name":"(anonymous_4)","line":69,"loc":{"start":{"line":69,"column":31},"end":{"line":69,"column":48}},"skip":true},"5":{"name":"(anonymous_5)","line":78,"loc":{"start":{"line":78,"column":26},"end":{"line":78,"column":45}},"skip":true},"6":{"name":"(anonymous_6)","line":123,"loc":{"start":{"line":123,"column":33},"end":{"line":123,"column":48}},"skip":true},"7":{"name":"(anonymous_7)","line":125,"loc":{"start":{"line":125,"column":27},"end":{"line":125,"column":39}},"skip":true},"8":{"name":"(anonymous_8)","line":133,"loc":{"start":{"line":133,"column":59},"end":{"line":133,"column":74}},"skip":true},"9":{"name":"(anonymous_9)","line":143,"loc":{"start":{"line":143,"column":45},"end":{"line":143,"column":62}},"skip":true},"10":{"name":"(anonymous_10)","line":144,"loc":{"start":{"line":144,"column":73},"end":{"line":144,"column":92}},"skip":true},"11":{"name":"(anonymous_11)","line":272,"loc":{"start":{"line":272,"column":51},"end":{"line":272,"column":77}},"skip":true},"12":{"name":"(anonymous_12)","line":314,"loc":{"start":{"line":314,"column":32},"end":{"line":314,"column":61}},"skip":true}},"statementMap":{"1":{"start":{"line":26,"column":0},"end":{"line":325,"column":5}},"2":{"start":{"line":28,"column":4},"end":{"line":28,"column":14}},"3":{"start":{"line":33,"column":4},"end":{"line":60,"column":9}},"4":{"start":{"line":35,"column":8},"end":{"line":35,"column":19}},"5":{"start":{"line":37,"column":8},"end":{"line":49,"column":13}},"6":{"start":{"line":38,"column":12},"end":{"line":48,"column":13}},"7":{"start":{"line":39,"column":16},"end":{"line":42,"column":30}},"8":{"start":{"line":44,"column":16},"end":{"line":47,"column":27}},"9":{"start":{"line":51,"column":8},"end":{"line":53,"column":21}},"10":{"start":{"line":55,"column":8},"end":{"line":57,"column":45}},"11":{"start":{"line":59,"column":8},"end":{"line":59,"column":35}},"12":{"start":{"line":61,"column":4},"end":{"line":324,"column":5}},"13":{"start":{"line":69,"column":8},"end":{"line":121,"column":10},"skip":true},"14":{"start":{"line":70,"column":12},"end":{"line":88,"column":13},"skip":true},"15":{"start":{"line":76,"column":16},"end":{"line":87,"column":19},"skip":true},"16":{"start":{"line":79,"column":20},"end":{"line":86,"column":21},"skip":true},"17":{"start":{"line":82,"column":24},"end":{"line":82,"column":43},"skip":true},"18":{"start":{"line":83,"column":24},"end":{"line":83,"column":30},"skip":true},"19":{"start":{"line":85,"column":24},"end":{"line":85,"column":49},"skip":true},"20":{"start":{"line":89,"column":12},"end":{"line":107,"column":13},"skip":true},"21":{"start":{"line":92,"column":16},"end":{"line":102,"column":17},"skip":true},"22":{"start":{"line":93,"column":20},"end":{"line":93,"column":86},"skip":true},"23":{"start":{"line":94,"column":20},"end":{"line":95,"column":45},"skip":true},"24":{"start":{"line":96,"column":20},"end":{"line":96,"column":42},"skip":true},"25":{"start":{"line":97,"column":20},"end":{"line":97,"column":48},"skip":true},"26":{"start":{"line":100,"column":20},"end":{"line":100,"column":85},"skip":true},"27":{"start":{"line":101,"column":20},"end":{"line":101,"column":96},"skip":true},"28":{"start":{"line":103,"column":16},"end":{"line":103,"column":22},"skip":true},"29":{"start":{"line":106,"column":16},"end":{"line":106,"column":22},"skip":true},"30":{"start":{"line":108,"column":12},"end":{"line":120,"column":13},"skip":true},"31":{"start":{"line":114,"column":16},"end":{"line":119,"column":17},"skip":true},"32":{"start":{"line":116,"column":20},"end":{"line":116,"column":78},"skip":true},"33":{"start":{"line":118,"column":20},"end":{"line":118,"column":53},"skip":true},"34":{"start":{"line":123,"column":8},"end":{"line":141,"column":11},"skip":true},"35":{"start":{"line":124,"column":12},"end":{"line":124,"column":54},"skip":true},"36":{"start":{"line":125,"column":12},"end":{"line":140,"column":14},"skip":true},"37":{"start":{"line":126,"column":16},"end":{"line":126,"column":28},"skip":true},"38":{"start":{"line":127,"column":16},"end":{"line":127,"column":69},"skip":true},"39":{"start":{"line":128,"column":16},"end":{"line":128,"column":75},"skip":true},"40":{"start":{"line":129,"column":16},"end":{"line":131,"column":17},"skip":true},"41":{"start":{"line":130,"column":20},"end":{"line":130,"column":27},"skip":true},"42":{"start":{"line":133,"column":16},"end":{"line":137,"column":36},"skip":true},"43":{"start":{"line":134,"column":20},"end":{"line":136,"column":55},"skip":true},"44":{"start":{"line":139,"column":16},"end":{"line":139,"column":57},"skip":true},"45":{"start":{"line":143,"column":8},"end":{"line":147,"column":11},"skip":true},"46":{"start":{"line":144,"column":12},"end":{"line":146,"column":15},"skip":true},"47":{"start":{"line":145,"column":16},"end":{"line":145,"column":70},"skip":true},"48":{"start":{"line":149,"column":8},"end":{"line":149,"column":31},"skip":true},"49":{"start":{"line":150,"column":8},"end":{"line":150,"column":14},"skip":true},"50":{"start":{"line":158,"column":8},"end":{"line":158,"column":31},"skip":true},"51":{"start":{"line":160,"column":8},"end":{"line":160,"column":33},"skip":true},"52":{"start":{"line":161,"column":8},"end":{"line":161,"column":37},"skip":true},"53":{"start":{"line":162,"column":8},"end":{"line":162,"column":35},"skip":true},"54":{"start":{"line":164,"column":8},"end":{"line":164,"column":50},"skip":true},"55":{"start":{"line":166,"column":8},"end":{"line":256,"column":2},"skip":true},"56":{"start":{"line":258,"column":8},"end":{"line":286,"column":9},"skip":true},"57":{"start":{"line":259,"column":12},"end":{"line":269,"column":14},"skip":true},"58":{"start":{"line":271,"column":12},"end":{"line":285,"column":19},"skip":true},"59":{"start":{"line":274,"column":20},"end":{"line":274,"column":35},"skip":true},"60":{"start":{"line":275,"column":20},"end":{"line":284,"column":21},"skip":true},"61":{"start":{"line":277,"column":24},"end":{"line":277,"column":64},"skip":true},"62":{"start":{"line":279,"column":24},"end":{"line":279,"column":40},"skip":true},"63":{"start":{"line":281,"column":24},"end":{"line":281,"column":40},"skip":true},"64":{"start":{"line":283,"column":24},"end":{"line":283,"column":39},"skip":true},"65":{"start":{"line":288,"column":8},"end":{"line":290,"column":9},"skip":true},"66":{"start":{"line":289,"column":12},"end":{"line":289,"column":18},"skip":true},"67":{"start":{"line":291,"column":8},"end":{"line":293,"column":54},"skip":true},"68":{"start":{"line":294,"column":8},"end":{"line":301,"column":37},"skip":true},"69":{"start":{"line":302,"column":8},"end":{"line":302,"column":82},"skip":true},"70":{"start":{"line":305,"column":8},"end":{"line":307,"column":9},"skip":true},"71":{"start":{"line":306,"column":12},"end":{"line":306,"column":82},"skip":true},"72":{"start":{"line":309,"column":8},"end":{"line":311,"column":9},"skip":true},"73":{"start":{"line":310,"column":12},"end":{"line":310,"column":18},"skip":true},"74":{"start":{"line":312,"column":8},"end":{"line":312,"column":54},"skip":true},"75":{"start":{"line":313,"column":8},"end":{"line":313,"column":69},"skip":true},"76":{"start":{"line":314,"column":8},"end":{"line":322,"column":36},"skip":true},"77":{"start":{"line":315,"column":12},"end":{"line":315,"column":61},"skip":true},"78":{"start":{"line":316,"column":12},"end":{"line":319,"column":13},"skip":true},"79":{"start":{"line":317,"column":16},"end":{"line":317,"column":75},"skip":true},"80":{"start":{"line":318,"column":16},"end":{"line":318,"column":23},"skip":true},"81":{"start":{"line":320,"column":12},"end":{"line":320,"column":38},"skip":true},"82":{"start":{"line":321,"column":12},"end":{"line":321,"column":27},"skip":true},"83":{"start":{"line":323,"column":8},"end":{"line":323,"column":14},"skip":true}},"branchMap":{"1":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":23},"end":{"line":39,"column":62}},{"start":{"line":40,"column":20},"end":{"line":40,"column":70}},{"start":{"line":41,"column":20},"end":{"line":41,"column":71}},{"start":{"line":42,"column":20},"end":{"line":42,"column":29}}]},"2":{"line":44,"type":"binary-expr","locations":[{"start":{"line":44,"column":23},"end":{"line":44,"column":37}},{"start":{"line":45,"column":20},"end":{"line":45,"column":61}},{"start":{"line":46,"column":20},"end":{"line":46,"column":70}},{"start":{"line":47,"column":20},"end":{"line":47,"column":26}}]},"3":{"line":51,"type":"cond-expr","locations":[{"start":{"line":52,"column":14},"end":{"line":52,"column":20}},{"start":{"line":53,"column":14},"end":{"line":53,"column":20}}]},"4":{"line":55,"type":"binary-expr","locations":[{"start":{"line":55,"column":16},"end":{"line":55,"column":44}},{"start":{"line":55,"column":49},"end":{"line":57,"column":43}}]},"5":{"line":55,"type":"cond-expr","locations":[{"start":{"line":56,"column":14},"end":{"line":56,"column":53}},{"start":{"line":57,"column":14},"end":{"line":57,"column":43}}]},"6":{"line":61,"type":"switch","locations":[{"start":{"line":68,"column":4},"end":{"line":150,"column":14},"skip":true},{"start":{"line":156,"column":4},"end":{"line":323,"column":14},"skip":true}]},"7":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true},{"start":{"line":70,"column":12},"end":{"line":70,"column":12},"skip":true}]},"8":{"line":70,"type":"binary-expr","locations":[{"start":{"line":70,"column":16},"end":{"line":70,"column":22},"skip":true},{"start":{"line":70,"column":27},"end":{"line":70,"column":32},"skip":true},{"start":{"line":71,"column":20},"end":{"line":71,"column":39},"skip":true},{"start":{"line":72,"column":20},"end":{"line":72,"column":49},"skip":true},{"start":{"line":73,"column":20},"end":{"line":73,"column":58},"skip":true},{"start":{"line":74,"column":20},"end":{"line":74,"column":69},"skip":true}]},"9":{"line":79,"type":"switch","locations":[{"start":{"line":80,"column":20},"end":{"line":80,"column":33},"skip":true},{"start":{"line":81,"column":20},"end":{"line":83,"column":30},"skip":true},{"start":{"line":84,"column":20},"end":{"line":85,"column":49},"skip":true}]},"10":{"line":89,"type":"switch","locations":[{"start":{"line":90,"column":12},"end":{"line":103,"column":22},"skip":true},{"start":{"line":105,"column":12},"end":{"line":106,"column":22},"skip":true}]},"11":{"line":89,"type":"binary-expr","locations":[{"start":{"line":89,"column":20},"end":{"line":89,"column":25},"skip":true},{"start":{"line":89,"column":29},"end":{"line":89,"column":48},"skip":true},{"start":{"line":89,"column":52},"end":{"line":89,"column":74},"skip":true}]},"12":{"line":92,"type":"if","locations":[{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true},{"start":{"line":92,"column":16},"end":{"line":92,"column":16},"skip":true}]},"13":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true},{"start":{"line":108,"column":12},"end":{"line":108,"column":12},"skip":true}]},"14":{"line":108,"type":"binary-expr","locations":[{"start":{"line":108,"column":16},"end":{"line":108,"column":61},"skip":true},{"start":{"line":108,"column":66},"end":{"line":108,"column":72},"skip":true},{"start":{"line":108,"column":77},"end":{"line":108,"column":82},"skip":true},{"start":{"line":109,"column":20},"end":{"line":109,"column":39},"skip":true},{"start":{"line":110,"column":20},"end":{"line":110,"column":49},"skip":true},{"start":{"line":111,"column":20},"end":{"line":111,"column":58},"skip":true},{"start":{"line":112,"column":20},"end":{"line":112,"column":68},"skip":true}]},"15":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true},{"start":{"line":129,"column":16},"end":{"line":129,"column":16},"skip":true}]},"16":{"line":134,"type":"cond-expr","locations":[{"start":{"line":135,"column":26},"end":{"line":135,"column":29},"skip":true},{"start":{"line":136,"column":26},"end":{"line":136,"column":54},"skip":true}]},"17":{"line":164,"type":"binary-expr","locations":[{"start":{"line":164,"column":27},"end":{"line":164,"column":43},"skip":true},{"start":{"line":164,"column":47},"end":{"line":164,"column":49},"skip":true}]},"18":{"line":258,"type":"if","locations":[{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true},{"start":{"line":258,"column":8},"end":{"line":258,"column":8},"skip":true}]},"19":{"line":275,"type":"switch","locations":[{"start":{"line":276,"column":20},"end":{"line":277,"column":64},"skip":true},{"start":{"line":278,"column":20},"end":{"line":279,"column":40},"skip":true},{"start":{"line":280,"column":20},"end":{"line":281,"column":40},"skip":true},{"start":{"line":282,"column":20},"end":{"line":283,"column":39},"skip":true}]},"20":{"line":288,"type":"if","locations":[{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true},{"start":{"line":288,"column":8},"end":{"line":288,"column":8},"skip":true}]},"21":{"line":288,"type":"binary-expr","locations":[{"start":{"line":288,"column":12},"end":{"line":288,"column":40},"skip":true},{"start":{"line":288,"column":44},"end":{"line":288,"column":67},"skip":true}]},"22":{"line":292,"type":"binary-expr","locations":[{"start":{"line":292,"column":12},"end":{"line":292,"column":50},"skip":true},{"start":{"line":293,"column":12},"end":{"line":293,"column":53},"skip":true}]},"23":{"line":295,"type":"binary-expr","locations":[{"start":{"line":295,"column":12},"end":{"line":295,"column":67},"skip":true},{"start":{"line":296,"column":12},"end":{"line":301,"column":36},"skip":true}]},"24":{"line":302,"type":"binary-expr","locations":[{"start":{"line":302,"column":43},"end":{"line":302,"column":75},"skip":true},{"start":{"line":302,"column":79},"end":{"line":302,"column":81},"skip":true}]},"25":{"line":305,"type":"if","locations":[{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true},{"start":{"line":305,"column":8},"end":{"line":305,"column":8},"skip":true}]},"26":{"line":309,"type":"if","locations":[{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true},{"start":{"line":309,"column":8},"end":{"line":309,"column":8},"skip":true}]},"27":{"line":312,"type":"binary-expr","locations":[{"start":{"line":312,"column":27},"end":{"line":312,"column":43},"skip":true},{"start":{"line":312,"column":47},"end":{"line":312,"column":53},"skip":true}]},"28":{"line":316,"type":"if","locations":[{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true},{"start":{"line":316,"column":12},"end":{"line":316,"column":12},"skip":true}]}},"code":["/*","example.js","","quickstart example","","instruction","    1. save this script as example.js","    2. run the shell command:","        $ npm install npmtest-crypto-js && PORT=8081 node example.js","    3. play with the browser-demo on http://127.0.0.1:8081","*/","","","","/* istanbul instrument in package npmtest_crypto_js */","/*jslint","    bitwise: true,","    browser: true,","    maxerr: 8,","    maxlen: 96,","    node: true,","    nomen: true,","    regexp: true,","    stupid: true","*/","(function () {","    'use strict';","    var local;","","","","    // run shared js-env code - pre-init","    (function () {","        // init local","        local = {};","        // init modeJs","        local.modeJs = (function () {","            try {","                return typeof navigator.userAgent === 'string' &&","                    typeof document.querySelector('body') === 'object' &&","                    typeof XMLHttpRequest.prototype.open === 'function' &&","                    'browser';","            } catch (errorCaughtBrowser) {","                return module.exports &&","                    typeof process.versions.node === 'string' &&","                    typeof require('http').createServer === 'function' &&","                    'node';","            }","        }());","        // init global","        local.global = local.modeJs === 'browser'","            ? window","            : global;","        // init utility2_rollup","        local = local.global.utility2_rollup || (local.modeJs === 'browser'","            ? local.global.utility2_npmtest_crypto_js","            : global.utility2_moduleExports);","        // export local","        local.global.local = local;","    }());","    switch (local.modeJs) {","","","","    // post-init","    // run browser js-env code - post-init","    /* istanbul ignore next */","    case 'browser':","        local.testRunBrowser = function (event) {","            if (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('onreset'))) {","                // reset output","                Array.from(","                    document.querySelectorAll('body > .resettable')","                ).forEach(function (element) {","                    switch (element.tagName) {","                    case 'INPUT':","                    case 'TEXTAREA':","                        element.value = '';","                        break;","                    default:","                        element.textContent = '';","                    }","                });","            }","            switch (event && event.currentTarget && event.currentTarget.id) {","            case 'testRunButton1':","                // show tests","                if (document.querySelector('#testReportDiv1').style.display === 'none') {","                    document.querySelector('#testReportDiv1').style.display = 'block';","                    document.querySelector('#testRunButton1').textContent =","                        'hide internal test';","                    local.modeTest = true;","                    local.testRunDefault(local);","                // hide tests","                } else {","                    document.querySelector('#testReportDiv1').style.display = 'none';","                    document.querySelector('#testRunButton1').textContent = 'run internal test';","                }","                break;","            // custom-case","            default:","                break;","            }","            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&","                    event.currentTarget &&","                    event.currentTarget.className &&","                    event.currentTarget.className.includes &&","                    event.currentTarget.className.includes('oneval')))) {","                // try to eval input-code","                try {","                    /*jslint evil: true*/","                    eval(document.querySelector('#inputTextareaEval1').value);","                } catch (errorCaught) {","                    console.error(errorCaught.stack);","                }","            }","        };","        // log stderr and stdout to #outputTextareaStdout1","        ['error', 'log'].forEach(function (key) {","            console[key + '_original'] = console[key];","            console[key] = function () {","                var element;","                console[key + '_original'].apply(console, arguments);","                element = document.querySelector('#outputTextareaStdout1');","                if (!element) {","                    return;","                }","                // append text to #outputTextareaStdout1","                element.value += Array.from(arguments).map(function (arg) {","                    return typeof arg === 'string'","                        ? arg","                        : JSON.stringify(arg, null, 4);","                }).join(' ') + '\\n';","                // scroll textarea to bottom","                element.scrollTop = element.scrollHeight;","            };","        });","        // init event-handling","        ['change', 'click', 'keyup'].forEach(function (event) {","            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {","                element.addEventListener(event, local.testRunBrowser);","            });","        });","        // run tests","        local.testRunBrowser();","        break;","","","","    // run node js-env code - post-init","    /* istanbul ignore next */","    case 'node':","        // export local","        module.exports = local;","        // require modules","        local.fs = require('fs');","        local.http = require('http');","        local.url = require('url');","        // init assets","        local.assetsDict = local.assetsDict || {};","        /* jslint-ignore-begin */","        local.assetsDict['/assets.index.template.html'] = '\\","<!doctype html>\\n\\","<html lang=\"en\">\\n\\","<head>\\n\\","<meta charset=\"UTF-8\">\\n\\","<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\","<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\","<style>\\n\\","/*csslint\\n\\","    box-sizing: false,\\n\\","    universal-selector: false\\n\\","*/\\n\\","* {\\n\\","    box-sizing: border-box;\\n\\","}\\n\\","body {\\n\\","    background: #dde;\\n\\","    font-family: Arial, Helvetica, sans-serif;\\n\\","    margin: 2rem;\\n\\","}\\n\\","body > * {\\n\\","    margin-bottom: 1rem;\\n\\","}\\n\\",".utility2FooterDiv {\\n\\","    margin-top: 20px;\\n\\","    text-align: center;\\n\\","}\\n\\","</style>\\n\\","<style>\\n\\","/*csslint\\n\\","*/\\n\\","textarea {\\n\\","    font-family: monospace;\\n\\","    height: 10rem;\\n\\","    width: 100%;\\n\\","}\\n\\","textarea[readonly] {\\n\\","    background: #ddd;\\n\\","}\\n\\","</style>\\n\\","</head>\\n\\","<body>\\n\\","<!-- utility2-comment\\n\\","<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\","utility2-comment -->\\n\\","<h1>\\n\\","<!-- utility2-comment\\n\\","    <a\\n\\","        {{#if env.npm_package_homepage}}\\n\\","        href=\"{{env.npm_package_homepage}}\"\\n\\","        {{/if env.npm_package_homepage}}\\n\\","        target=\"_blank\"\\n\\","    >\\n\\","utility2-comment -->\\n\\","        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\","<!-- utility2-comment\\n\\","    </a>\\n\\","utility2-comment -->\\n\\","</h1>\\n\\","<h3>{{env.npm_package_description}}</h3>\\n\\","<!-- utility2-comment\\n\\","<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\","<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\","<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\","utility2-comment -->\\n\\","\\n\\","\\n\\","\\n\\","<label>stderr and stdout</label>\\n\\","<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\","<!-- utility2-comment\\n\\","{{#if isRollup}}\\n\\","<script src=\"assets.app.js\"></script>\\n\\","{{#unless isRollup}}\\n\\","utility2-comment -->\\n\\","<script src=\"assets.utility2.rollup.js\"></script>\\n\\","<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\","<script src=\"assets.npmtest_crypto_js.rollup.js\"></script>\\n\\","<script src=\"assets.example.js\"></script>\\n\\","<script src=\"assets.test.js\"></script>\\n\\","<!-- utility2-comment\\n\\","{{/if isRollup}}\\n\\","utility2-comment -->\\n\\","<div class=\"utility2FooterDiv\">\\n\\","    [ this app was created with\\n\\","    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\","    ]\\n\\","</div>\\n\\","</body>\\n\\","</html>\\n\\","';","        /* jslint-ignore-end */","        if (local.templateRender) {","            local.assetsDict['/'] = local.templateRender(","                local.assetsDict['/assets.index.template.html'],","                {","                    env: local.objectSetDefault(local.env, {","                        npm_package_description: 'the greatest app in the world!',","                        npm_package_name: 'my-app',","                        npm_package_nameAlias: 'my_app',","                        npm_package_version: '0.0.1'","                    })","                }","            );","        } else {","            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']","                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {","                    // jslint-hack","                    String(match0);","                    switch (match1) {","                    case 'npm_package_description':","                        return 'the greatest app in the world!';","                    case 'npm_package_name':","                        return 'my-app';","                    case 'npm_package_nameAlias':","                        return 'my_app';","                    case 'npm_package_version':","                        return '0.0.1';","                    }","                });","        }","        // run the cli","        if (local.global.utility2_rollup || module !== require.main) {","            break;","        }","        local.assetsDict['/assets.example.js'] =","            local.assetsDict['/assets.example.js'] ||","            local.fs.readFileSync(__filename, 'utf8');","        local.assetsDict['/assets.npmtest_crypto_js.rollup.js'] =","            local.assetsDict['/assets.npmtest_crypto_js.rollup.js'] ||","            local.fs.readFileSync(","                // buildCustomOrg-hack","                local.npmtest_crypto_js.__dirname +","                    '/lib.npmtest_crypto_js.js',","                'utf8'","            ).replace((/^#!/), '//');","        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';","        // if $npm_config_timeout_exit exists,","        // then exit this process after $npm_config_timeout_exit ms","        if (Number(process.env.npm_config_timeout_exit)) {","            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));","        }","        // start server","        if (local.global.utility2_serverHttp1) {","            break;","        }","        process.env.PORT = process.env.PORT || '8081';","        console.error('server starting on port ' + process.env.PORT);","        local.http.createServer(function (request, response) {","            request.urlParsed = local.url.parse(request.url);","            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {","                response.end(local.assetsDict[request.urlParsed.pathname]);","                return;","            }","            response.statusCode = 404;","            response.end();","        }).listen(process.env.PORT);","        break;","    }","}());",""],"l":{"26":2,"28":2,"33":2,"35":2,"37":2,"38":2,"39":2,"44":1,"51":2,"55":2,"59":2,"61":2,"69":1,"70":2,"76":2,"79":2,"82":2,"83":2,"85":1,"89":2,"92":1,"93":1,"94":1,"96":1,"97":1,"100":1,"101":1,"103":1,"106":1,"108":2,"114":1,"116":1,"118":1,"123":1,"124":2,"125":2,"126":2,"127":2,"128":2,"129":2,"130":1,"133":2,"134":2,"139":2,"143":1,"144":3,"145":1,"149":1,"150":1,"158":1,"160":1,"161":1,"162":1,"164":1,"166":1,"258":1,"259":1,"271":1,"274":6,"275":6,"277":1,"279":2,"281":1,"283":2,"288":1,"289":1,"291":1,"294":1,"302":1,"305":1,"306":1,"309":1,"310":1,"312":1,"313":1,"314":1,"315":1,"316":1,"317":1,"318":1,"320":1,"321":1,"323":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/index.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/index.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":18,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":805}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":491}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":41}},"7":{"start":{"line":16,"column":1},"end":{"line":16,"column":17}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./lib-typedarrays\"), require(\"./enc-utf16\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./sha1\"), require(\"./sha256\"), require(\"./sha224\"), require(\"./sha512\"), require(\"./sha384\"), require(\"./sha3\"), require(\"./ripemd160\"), require(\"./hmac\"), require(\"./pbkdf2\"), require(\"./evpkdf\"), require(\"./cipher-core\"), require(\"./mode-cfb\"), require(\"./mode-ctr\"), require(\"./mode-ctr-gladman\"), require(\"./mode-ofb\"), require(\"./mode-ecb\"), require(\"./pad-ansix923\"), require(\"./pad-iso10126\"), require(\"./pad-iso97971\"), require(\"./pad-zeropadding\"), require(\"./pad-nopadding\"), require(\"./format-hex\"), require(\"./aes\"), require(\"./tripledes\"), require(\"./rc4\"), require(\"./rabbit\"), require(\"./rabbit-legacy\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./x64-core\", \"./lib-typedarrays\", \"./enc-utf16\", \"./enc-base64\", \"./md5\", \"./sha1\", \"./sha256\", \"./sha224\", \"./sha512\", \"./sha384\", \"./sha3\", \"./ripemd160\", \"./hmac\", \"./pbkdf2\", \"./evpkdf\", \"./cipher-core\", \"./mode-cfb\", \"./mode-ctr\", \"./mode-ctr-gladman\", \"./mode-ofb\", \"./mode-ecb\", \"./pad-ansix923\", \"./pad-iso10126\", \"./pad-iso97971\", \"./pad-zeropadding\", \"./pad-nopadding\", \"./format-hex\", \"./aes\", \"./tripledes\", \"./rc4\", \"./rabbit\", \"./rabbit-legacy\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\troot.CryptoJS = factory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\treturn CryptoJS;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/core.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/core.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1,"17":1,"18":1,"19":1,"20":269,"21":269,"22":46,"23":269,"24":259,"25":215,"26":269,"27":269,"28":269,"29":215,"30":215,"31":215,"32":46,"33":147,"34":147,"35":46,"36":2,"37":0,"38":1,"39":6,"40":6,"41":0,"42":6,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":1,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":1,"110":0,"111":0,"112":0,"113":0,"114":1,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":1,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":8,"154":0,"155":8,"156":0,"157":1,"158":1,"159":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1],"5":[1,0],"6":[46,223],"7":[259,10],"8":[269,10],"9":[147,0],"10":[2,44],"11":[6,0],"12":[0,6],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":269,"9":215,"10":215,"11":0,"12":46,"13":0,"14":6,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":8,"37":0,"38":8,"39":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":20}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":29},"end":{"line":19,"column":56}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":36},"end":{"line":23,"column":48}}},"5":{"name":"F","line":24,"loc":{"start":{"line":24,"column":9},"end":{"line":24,"column":22}}},"6":{"name":"(anonymous_6)","line":26,"loc":{"start":{"line":26,"column":16},"end":{"line":26,"column":31}}},"7":{"name":"(anonymous_7)","line":52,"loc":{"start":{"line":52,"column":30},"end":{"line":52,"column":42}}},"8":{"name":"(anonymous_8)","line":74,"loc":{"start":{"line":74,"column":21},"end":{"line":74,"column":42}}},"9":{"name":"(anonymous_9)","line":85,"loc":{"start":{"line":85,"column":36},"end":{"line":85,"column":48}}},"10":{"name":"(anonymous_10)","line":111,"loc":{"start":{"line":111,"column":21},"end":{"line":111,"column":33}}},"11":{"name":"(anonymous_11)","line":130,"loc":{"start":{"line":130,"column":19},"end":{"line":130,"column":31}}},"12":{"name":"(anonymous_12)","line":144,"loc":{"start":{"line":144,"column":20},"end":{"line":144,"column":42}}},"13":{"name":"(anonymous_13)","line":166,"loc":{"start":{"line":166,"column":20},"end":{"line":166,"column":32}}},"14":{"name":"(anonymous_14)","line":191,"loc":{"start":{"line":191,"column":15},"end":{"line":191,"column":42}}},"15":{"name":"(anonymous_15)","line":214,"loc":{"start":{"line":214,"column":19},"end":{"line":214,"column":38}}},"16":{"name":"(anonymous_16)","line":229,"loc":{"start":{"line":229,"column":17},"end":{"line":229,"column":38}}},"17":{"name":"(anonymous_17)","line":265,"loc":{"start":{"line":265,"column":16},"end":{"line":265,"column":28}}},"18":{"name":"(anonymous_18)","line":284,"loc":{"start":{"line":284,"column":16},"end":{"line":284,"column":28}}},"19":{"name":"(anonymous_19)","line":304,"loc":{"start":{"line":304,"column":17},"end":{"line":304,"column":35}}},"20":{"name":"(anonymous_20)","line":307,"loc":{"start":{"line":307,"column":22},"end":{"line":307,"column":37}}},"21":{"name":"(anonymous_21)","line":312,"loc":{"start":{"line":312,"column":24},"end":{"line":312,"column":36}}},"22":{"name":"(anonymous_22)","line":355,"loc":{"start":{"line":355,"column":20},"end":{"line":355,"column":41}}},"23":{"name":"(anonymous_23)","line":384,"loc":{"start":{"line":384,"column":16},"end":{"line":384,"column":34}}},"24":{"name":"(anonymous_24)","line":415,"loc":{"start":{"line":415,"column":20},"end":{"line":415,"column":41}}},"25":{"name":"(anonymous_25)","line":443,"loc":{"start":{"line":443,"column":16},"end":{"line":443,"column":37}}},"26":{"name":"(anonymous_26)","line":474,"loc":{"start":{"line":474,"column":20},"end":{"line":474,"column":41}}},"27":{"name":"(anonymous_27)","line":495,"loc":{"start":{"line":495,"column":16},"end":{"line":495,"column":35}}},"28":{"name":"(anonymous_28)","line":515,"loc":{"start":{"line":515,"column":16},"end":{"line":515,"column":28}}},"29":{"name":"(anonymous_29)","line":531,"loc":{"start":{"line":531,"column":18},"end":{"line":531,"column":34}}},"30":{"name":"(anonymous_30)","line":556,"loc":{"start":{"line":556,"column":19},"end":{"line":556,"column":38}}},"31":{"name":"(anonymous_31)","line":606,"loc":{"start":{"line":606,"column":16},"end":{"line":606,"column":28}}},"32":{"name":"(anonymous_32)","line":636,"loc":{"start":{"line":636,"column":15},"end":{"line":636,"column":30}}},"33":{"name":"(anonymous_33)","line":651,"loc":{"start":{"line":651,"column":16},"end":{"line":651,"column":28}}},"34":{"name":"(anonymous_34)","line":671,"loc":{"start":{"line":671,"column":17},"end":{"line":671,"column":42}}},"35":{"name":"(anonymous_35)","line":696,"loc":{"start":{"line":696,"column":19},"end":{"line":696,"column":44}}},"36":{"name":"(anonymous_36)","line":723,"loc":{"start":{"line":723,"column":24},"end":{"line":723,"column":42}}},"37":{"name":"(anonymous_37)","line":724,"loc":{"start":{"line":724,"column":20},"end":{"line":724,"column":44}}},"38":{"name":"(anonymous_38)","line":742,"loc":{"start":{"line":742,"column":28},"end":{"line":742,"column":46}}},"39":{"name":"(anonymous_39)","line":743,"loc":{"start":{"line":743,"column":20},"end":{"line":743,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":760,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":39}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":22}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":28}},"7":{"start":{"line":19,"column":1},"end":{"line":755,"column":10}},"8":{"start":{"line":23,"column":5},"end":{"line":37,"column":9}},"9":{"start":{"line":24,"column":9},"end":{"line":24,"column":24}},"10":{"start":{"line":26,"column":9},"end":{"line":36,"column":11}},"11":{"start":{"line":27,"column":13},"end":{"line":27,"column":25}},"12":{"start":{"line":29,"column":13},"end":{"line":29,"column":31}},"13":{"start":{"line":31,"column":13},"end":{"line":31,"column":31}},"14":{"start":{"line":33,"column":13},"end":{"line":33,"column":32}},"15":{"start":{"line":35,"column":13},"end":{"line":35,"column":28}},"16":{"start":{"line":42,"column":5},"end":{"line":42,"column":16}},"17":{"start":{"line":47,"column":5},"end":{"line":47,"column":28}},"18":{"start":{"line":52,"column":5},"end":{"line":170,"column":10}},"19":{"start":{"line":55,"column":9},"end":{"line":169,"column":11}},"20":{"start":{"line":76,"column":17},"end":{"line":76,"column":44}},"21":{"start":{"line":79,"column":17},"end":{"line":81,"column":18}},"22":{"start":{"line":80,"column":21},"end":{"line":80,"column":46}},"23":{"start":{"line":84,"column":17},"end":{"line":88,"column":18}},"24":{"start":{"line":85,"column":21},"end":{"line":87,"column":23}},"25":{"start":{"line":86,"column":25},"end":{"line":86,"column":68}},"26":{"start":{"line":91,"column":17},"end":{"line":91,"column":50}},"27":{"start":{"line":94,"column":17},"end":{"line":94,"column":39}},"28":{"start":{"line":96,"column":17},"end":{"line":96,"column":32}},"29":{"start":{"line":112,"column":17},"end":{"line":112,"column":46}},"30":{"start":{"line":113,"column":17},"end":{"line":113,"column":58}},"31":{"start":{"line":115,"column":17},"end":{"line":115,"column":33}},"32":{"start":{"line":145,"column":17},"end":{"line":149,"column":18}},"33":{"start":{"line":146,"column":21},"end":{"line":148,"column":22}},"34":{"start":{"line":147,"column":25},"end":{"line":147,"column":71}},"35":{"start":{"line":152,"column":17},"end":{"line":154,"column":18}},"36":{"start":{"line":153,"column":21},"end":{"line":153,"column":57}},"37":{"start":{"line":167,"column":17},"end":{"line":167,"column":57}},"38":{"start":{"line":178,"column":5},"end":{"line":331,"column":8}},"39":{"start":{"line":192,"column":13},"end":{"line":192,"column":46}},"40":{"start":{"line":194,"column":13},"end":{"line":198,"column":14}},"41":{"start":{"line":195,"column":17},"end":{"line":195,"column":42}},"42":{"start":{"line":197,"column":17},"end":{"line":197,"column":50}},"43":{"start":{"line":215,"column":13},"end":{"line":215,"column":53}},"44":{"start":{"line":231,"column":13},"end":{"line":231,"column":40}},"45":{"start":{"line":232,"column":13},"end":{"line":232,"column":45}},"46":{"start":{"line":233,"column":13},"end":{"line":233,"column":46}},"47":{"start":{"line":234,"column":13},"end":{"line":234,"column":51}},"48":{"start":{"line":237,"column":13},"end":{"line":237,"column":26}},"49":{"start":{"line":240,"column":13},"end":{"line":251,"column":14}},"50":{"start":{"line":242,"column":17},"end":{"line":245,"column":18}},"51":{"start":{"line":243,"column":21},"end":{"line":243,"column":87}},"52":{"start":{"line":244,"column":21},"end":{"line":244,"column":108}},"53":{"start":{"line":248,"column":17},"end":{"line":250,"column":18}},"54":{"start":{"line":249,"column":21},"end":{"line":249,"column":78}},"55":{"start":{"line":252,"column":13},"end":{"line":252,"column":43}},"56":{"start":{"line":255,"column":13},"end":{"line":255,"column":25}},"57":{"start":{"line":267,"column":13},"end":{"line":267,"column":36}},"58":{"start":{"line":268,"column":13},"end":{"line":268,"column":42}},"59":{"start":{"line":271,"column":13},"end":{"line":271,"column":78}},"60":{"start":{"line":272,"column":13},"end":{"line":272,"column":52}},"61":{"start":{"line":285,"column":13},"end":{"line":285,"column":47}},"62":{"start":{"line":286,"column":13},"end":{"line":286,"column":47}},"63":{"start":{"line":288,"column":13},"end":{"line":288,"column":26}},"64":{"start":{"line":305,"column":13},"end":{"line":305,"column":28}},"65":{"start":{"line":307,"column":13},"end":{"line":320,"column":16}},"66":{"start":{"line":308,"column":17},"end":{"line":308,"column":31}},"67":{"start":{"line":309,"column":17},"end":{"line":309,"column":38}},"68":{"start":{"line":310,"column":17},"end":{"line":310,"column":39}},"69":{"start":{"line":312,"column":17},"end":{"line":319,"column":18}},"70":{"start":{"line":313,"column":21},"end":{"line":313,"column":76}},"71":{"start":{"line":314,"column":21},"end":{"line":314,"column":76}},"72":{"start":{"line":315,"column":21},"end":{"line":315,"column":63}},"73":{"start":{"line":316,"column":21},"end":{"line":316,"column":43}},"74":{"start":{"line":317,"column":21},"end":{"line":317,"column":35}},"75":{"start":{"line":318,"column":21},"end":{"line":318,"column":67}},"76":{"start":{"line":322,"column":13},"end":{"line":327,"column":14}},"77":{"start":{"line":323,"column":17},"end":{"line":323,"column":69}},"78":{"start":{"line":325,"column":17},"end":{"line":325,"column":44}},"79":{"start":{"line":326,"column":17},"end":{"line":326,"column":54}},"80":{"start":{"line":329,"column":13},"end":{"line":329,"column":54}},"81":{"start":{"line":336,"column":5},"end":{"line":336,"column":28}},"82":{"start":{"line":341,"column":5},"end":{"line":396,"column":7}},"83":{"start":{"line":357,"column":13},"end":{"line":357,"column":41}},"84":{"start":{"line":358,"column":13},"end":{"line":358,"column":47}},"85":{"start":{"line":361,"column":13},"end":{"line":361,"column":31}},"86":{"start":{"line":362,"column":13},"end":{"line":366,"column":14}},"87":{"start":{"line":363,"column":17},"end":{"line":363,"column":75}},"88":{"start":{"line":364,"column":17},"end":{"line":364,"column":58}},"89":{"start":{"line":365,"column":17},"end":{"line":365,"column":59}},"90":{"start":{"line":368,"column":13},"end":{"line":368,"column":38}},"91":{"start":{"line":386,"column":13},"end":{"line":386,"column":46}},"92":{"start":{"line":389,"column":13},"end":{"line":389,"column":28}},"93":{"start":{"line":390,"column":13},"end":{"line":392,"column":14}},"94":{"start":{"line":391,"column":17},"end":{"line":391,"column":91}},"95":{"start":{"line":394,"column":13},"end":{"line":394,"column":64}},"96":{"start":{"line":401,"column":5},"end":{"line":455,"column":7}},"97":{"start":{"line":417,"column":13},"end":{"line":417,"column":41}},"98":{"start":{"line":418,"column":13},"end":{"line":418,"column":47}},"99":{"start":{"line":421,"column":13},"end":{"line":421,"column":34}},"100":{"start":{"line":422,"column":13},"end":{"line":425,"column":14}},"101":{"start":{"line":423,"column":17},"end":{"line":423,"column":75}},"102":{"start":{"line":424,"column":17},"end":{"line":424,"column":61}},"103":{"start":{"line":427,"column":13},"end":{"line":427,"column":41}},"104":{"start":{"line":445,"column":13},"end":{"line":445,"column":52}},"105":{"start":{"line":448,"column":13},"end":{"line":448,"column":28}},"106":{"start":{"line":449,"column":13},"end":{"line":451,"column":14}},"107":{"start":{"line":450,"column":17},"end":{"line":450,"column":90}},"108":{"start":{"line":453,"column":13},"end":{"line":453,"column":63}},"109":{"start":{"line":460,"column":5},"end":{"line":498,"column":7}},"110":{"start":{"line":475,"column":13},"end":{"line":479,"column":14}},"111":{"start":{"line":476,"column":17},"end":{"line":476,"column":80}},"112":{"start":{"line":478,"column":17},"end":{"line":478,"column":57}},"113":{"start":{"line":496,"column":13},"end":{"line":496,"column":72}},"114":{"start":{"line":507,"column":5},"end":{"line":614,"column":8}},"115":{"start":{"line":517,"column":13},"end":{"line":517,"column":47}},"116":{"start":{"line":518,"column":13},"end":{"line":518,"column":34}},"117":{"start":{"line":533,"column":13},"end":{"line":535,"column":14}},"118":{"start":{"line":534,"column":17},"end":{"line":534,"column":41}},"119":{"start":{"line":538,"column":13},"end":{"line":538,"column":37}},"120":{"start":{"line":539,"column":13},"end":{"line":539,"column":47}},"121":{"start":{"line":558,"column":13},"end":{"line":558,"column":35}},"122":{"start":{"line":559,"column":13},"end":{"line":559,"column":40}},"123":{"start":{"line":560,"column":13},"end":{"line":560,"column":46}},"124":{"start":{"line":561,"column":13},"end":{"line":561,"column":44}},"125":{"start":{"line":562,"column":13},"end":{"line":562,"column":48}},"126":{"start":{"line":565,"column":13},"end":{"line":565,"column":62}},"127":{"start":{"line":566,"column":13},"end":{"line":573,"column":14}},"128":{"start":{"line":568,"column":17},"end":{"line":568,"column":56}},"129":{"start":{"line":572,"column":17},"end":{"line":572,"column":86}},"130":{"start":{"line":576,"column":13},"end":{"line":576,"column":56}},"131":{"start":{"line":579,"column":13},"end":{"line":579,"column":71}},"132":{"start":{"line":582,"column":13},"end":{"line":591,"column":14}},"133":{"start":{"line":583,"column":17},"end":{"line":586,"column":18}},"134":{"start":{"line":585,"column":21},"end":{"line":585,"column":61}},"135":{"start":{"line":589,"column":17},"end":{"line":589,"column":71}},"136":{"start":{"line":590,"column":17},"end":{"line":590,"column":46}},"137":{"start":{"line":594,"column":13},"end":{"line":594,"column":68}},"138":{"start":{"line":607,"column":13},"end":{"line":607,"column":47}},"139":{"start":{"line":608,"column":13},"end":{"line":608,"column":46}},"140":{"start":{"line":610,"column":13},"end":{"line":610,"column":26}},"141":{"start":{"line":621,"column":5},"end":{"line":747,"column":8}},"142":{"start":{"line":638,"column":13},"end":{"line":638,"column":45}},"143":{"start":{"line":641,"column":13},"end":{"line":641,"column":26}},"144":{"start":{"line":653,"column":13},"end":{"line":653,"column":53}},"145":{"start":{"line":656,"column":13},"end":{"line":656,"column":29}},"146":{"start":{"line":673,"column":13},"end":{"line":673,"column":41}},"147":{"start":{"line":676,"column":13},"end":{"line":676,"column":29}},"148":{"start":{"line":679,"column":13},"end":{"line":679,"column":25}},"149":{"start":{"line":698,"column":13},"end":{"line":700,"column":14}},"150":{"start":{"line":699,"column":17},"end":{"line":699,"column":45}},"151":{"start":{"line":703,"column":13},"end":{"line":703,"column":43}},"152":{"start":{"line":705,"column":13},"end":{"line":705,"column":25}},"153":{"start":{"line":724,"column":13},"end":{"line":726,"column":15}},"154":{"start":{"line":725,"column":17},"end":{"line":725,"column":63}},"155":{"start":{"line":743,"column":13},"end":{"line":745,"column":15}},"156":{"start":{"line":744,"column":17},"end":{"line":744,"column":76}},"157":{"start":{"line":752,"column":5},"end":{"line":752,"column":30}},"158":{"start":{"line":754,"column":5},"end":{"line":754,"column":14}},"159":{"start":{"line":758,"column":1},"end":{"line":758,"column":17}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":16},"end":{"line":19,"column":24}},{"start":{"line":19,"column":29},"end":{"line":755,"column":8}}]},"5":{"line":23,"type":"binary-expr","locations":[{"start":{"line":23,"column":18},"end":{"line":23,"column":31}},{"start":{"line":23,"column":36},"end":{"line":37,"column":8}}]},"6":{"line":79,"type":"if","locations":[{"start":{"line":79,"column":17},"end":{"line":79,"column":17}},{"start":{"line":79,"column":17},"end":{"line":79,"column":17}}]},"7":{"line":84,"type":"if","locations":[{"start":{"line":84,"column":17},"end":{"line":84,"column":17}},{"start":{"line":84,"column":17},"end":{"line":84,"column":17}}]},"8":{"line":84,"type":"binary-expr","locations":[{"start":{"line":84,"column":21},"end":{"line":84,"column":52}},{"start":{"line":84,"column":56},"end":{"line":84,"column":82}}]},"9":{"line":146,"type":"if","locations":[{"start":{"line":146,"column":21},"end":{"line":146,"column":21}},{"start":{"line":146,"column":21},"end":{"line":146,"column":21}}]},"10":{"line":152,"type":"if","locations":[{"start":{"line":152,"column":17},"end":{"line":152,"column":17}},{"start":{"line":152,"column":17},"end":{"line":152,"column":17}}]},"11":{"line":192,"type":"binary-expr","locations":[{"start":{"line":192,"column":34},"end":{"line":192,"column":39}},{"start":{"line":192,"column":43},"end":{"line":192,"column":45}}]},"12":{"line":194,"type":"if","locations":[{"start":{"line":194,"column":13},"end":{"line":194,"column":13}},{"start":{"line":194,"column":13},"end":{"line":194,"column":13}}]},"13":{"line":215,"type":"binary-expr","locations":[{"start":{"line":215,"column":21},"end":{"line":215,"column":28}},{"start":{"line":215,"column":32},"end":{"line":215,"column":35}}]},"14":{"line":240,"type":"if","locations":[{"start":{"line":240,"column":13},"end":{"line":240,"column":13}},{"start":{"line":240,"column":13},"end":{"line":240,"column":13}}]},"15":{"line":318,"type":"cond-expr","locations":[{"start":{"line":318,"column":59},"end":{"line":318,"column":60}},{"start":{"line":318,"column":63},"end":{"line":318,"column":65}}]},"16":{"line":323,"type":"binary-expr","locations":[{"start":{"line":323,"column":29},"end":{"line":323,"column":35}},{"start":{"line":323,"column":39},"end":{"line":323,"column":52}}]},"17":{"line":533,"type":"if","locations":[{"start":{"line":533,"column":13},"end":{"line":533,"column":13}},{"start":{"line":533,"column":13},"end":{"line":533,"column":13}}]},"18":{"line":566,"type":"if","locations":[{"start":{"line":566,"column":13},"end":{"line":566,"column":13}},{"start":{"line":566,"column":13},"end":{"line":566,"column":13}}]},"19":{"line":582,"type":"if","locations":[{"start":{"line":582,"column":13},"end":{"line":582,"column":13}},{"start":{"line":582,"column":13},"end":{"line":582,"column":13}}]},"20":{"line":698,"type":"if","locations":[{"start":{"line":698,"column":13},"end":{"line":698,"column":13}},{"start":{"line":698,"column":13},"end":{"line":698,"column":13}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory();","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([], factory);","\t}","\telse {","\t\t// Global (browser)","\t\troot.CryptoJS = factory();","\t}","}(this, function () {","","\t/**","\t * CryptoJS core components.","\t */","\tvar CryptoJS = CryptoJS || (function (Math, undefined) {","\t    /*","\t     * Local polyfil of Object.create","\t     */","\t    var create = Object.create || (function () {","\t        function F() {};","","\t        return function (obj) {","\t            var subtype;","","\t            F.prototype = obj;","","\t            subtype = new F();","","\t            F.prototype = null;","","\t            return subtype;","\t        };","\t    }())","","\t    /**","\t     * CryptoJS namespace.","\t     */","\t    var C = {};","","\t    /**","\t     * Library namespace.","\t     */","\t    var C_lib = C.lib = {};","","\t    /**","\t     * Base object for prototypal inheritance.","\t     */","\t    var Base = C_lib.Base = (function () {","","","\t        return {","\t            /**","\t             * Creates a new object that inherits from this object.","\t             *","\t             * @param {Object} overrides Properties to copy into the new object.","\t             *","\t             * @return {Object} The new object.","\t             *","\t             * @static","\t             *","\t             * @example","\t             *","\t             *     var MyType = CryptoJS.lib.Base.extend({","\t             *         field: 'value',","\t             *","\t             *         method: function () {","\t             *         }","\t             *     });","\t             */","\t            extend: function (overrides) {","\t                // Spawn","\t                var subtype = create(this);","","\t                // Augment","\t                if (overrides) {","\t                    subtype.mixIn(overrides);","\t                }","","\t                // Create default initializer","\t                if (!subtype.hasOwnProperty('init') || this.init === subtype.init) {","\t                    subtype.init = function () {","\t                        subtype.$super.init.apply(this, arguments);","\t                    };","\t                }","","\t                // Initializer's prototype is the subtype object","\t                subtype.init.prototype = subtype;","","\t                // Reference supertype","\t                subtype.$super = this;","","\t                return subtype;","\t            },","","\t            /**","\t             * Extends this object and runs the init method.","\t             * Arguments to create() will be passed to init().","\t             *","\t             * @return {Object} The new object.","\t             *","\t             * @static","\t             *","\t             * @example","\t             *","\t             *     var instance = MyType.create();","\t             */","\t            create: function () {","\t                var instance = this.extend();","\t                instance.init.apply(instance, arguments);","","\t                return instance;","\t            },","","\t            /**","\t             * Initializes a newly created object.","\t             * Override this method to add some logic when your objects are created.","\t             *","\t             * @example","\t             *","\t             *     var MyType = CryptoJS.lib.Base.extend({","\t             *         init: function () {","\t             *             // ...","\t             *         }","\t             *     });","\t             */","\t            init: function () {","\t            },","","\t            /**","\t             * Copies properties into this object.","\t             *","\t             * @param {Object} properties The properties to mix in.","\t             *","\t             * @example","\t             *","\t             *     MyType.mixIn({","\t             *         field: 'value'","\t             *     });","\t             */","\t            mixIn: function (properties) {","\t                for (var propertyName in properties) {","\t                    if (properties.hasOwnProperty(propertyName)) {","\t                        this[propertyName] = properties[propertyName];","\t                    }","\t                }","","\t                // IE won't copy toString using the loop above","\t                if (properties.hasOwnProperty('toString')) {","\t                    this.toString = properties.toString;","\t                }","\t            },","","\t            /**","\t             * Creates a copy of this object.","\t             *","\t             * @return {Object} The clone.","\t             *","\t             * @example","\t             *","\t             *     var clone = instance.clone();","\t             */","\t            clone: function () {","\t                return this.init.prototype.extend(this);","\t            }","\t        };","\t    }());","","\t    /**","\t     * An array of 32-bit words.","\t     *","\t     * @property {Array} words The array of 32-bit words.","\t     * @property {number} sigBytes The number of significant bytes in this word array.","\t     */","\t    var WordArray = C_lib.WordArray = Base.extend({","\t        /**","\t         * Initializes a newly created word array.","\t         *","\t         * @param {Array} words (Optional) An array of 32-bit words.","\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.lib.WordArray.create();","\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);","\t         *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);","\t         */","\t        init: function (words, sigBytes) {","\t            words = this.words = words || [];","","\t            if (sigBytes != undefined) {","\t                this.sigBytes = sigBytes;","\t            } else {","\t                this.sigBytes = words.length * 4;","\t            }","\t        },","","\t        /**","\t         * Converts this word array to a string.","\t         *","\t         * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex","\t         *","\t         * @return {string} The stringified word array.","\t         *","\t         * @example","\t         *","\t         *     var string = wordArray + '';","\t         *     var string = wordArray.toString();","\t         *     var string = wordArray.toString(CryptoJS.enc.Utf8);","\t         */","\t        toString: function (encoder) {","\t            return (encoder || Hex).stringify(this);","\t        },","","\t        /**","\t         * Concatenates a word array to this word array.","\t         *","\t         * @param {WordArray} wordArray The word array to append.","\t         *","\t         * @return {WordArray} This word array.","\t         *","\t         * @example","\t         *","\t         *     wordArray1.concat(wordArray2);","\t         */","\t        concat: function (wordArray) {","\t            // Shortcuts","\t            var thisWords = this.words;","\t            var thatWords = wordArray.words;","\t            var thisSigBytes = this.sigBytes;","\t            var thatSigBytes = wordArray.sigBytes;","","\t            // Clamp excess bits","\t            this.clamp();","","\t            // Concat","\t            if (thisSigBytes % 4) {","\t                // Copy one byte at a time","\t                for (var i = 0; i < thatSigBytes; i++) {","\t                    var thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","\t                    thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);","\t                }","\t            } else {","\t                // Copy one word at a time","\t                for (var i = 0; i < thatSigBytes; i += 4) {","\t                    thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];","\t                }","\t            }","\t            this.sigBytes += thatSigBytes;","","\t            // Chainable","\t            return this;","\t        },","","\t        /**","\t         * Removes insignificant bits.","\t         *","\t         * @example","\t         *","\t         *     wordArray.clamp();","\t         */","\t        clamp: function () {","\t            // Shortcuts","\t            var words = this.words;","\t            var sigBytes = this.sigBytes;","","\t            // Clamp","\t            words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);","\t            words.length = Math.ceil(sigBytes / 4);","\t        },","","\t        /**","\t         * Creates a copy of this word array.","\t         *","\t         * @return {WordArray} The clone.","\t         *","\t         * @example","\t         *","\t         *     var clone = wordArray.clone();","\t         */","\t        clone: function () {","\t            var clone = Base.clone.call(this);","\t            clone.words = this.words.slice(0);","","\t            return clone;","\t        },","","\t        /**","\t         * Creates a word array filled with random bytes.","\t         *","\t         * @param {number} nBytes The number of random bytes to generate.","\t         *","\t         * @return {WordArray} The random word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.lib.WordArray.random(16);","\t         */","\t        random: function (nBytes) {","\t            var words = [];","","\t            var r = (function (m_w) {","\t                var m_w = m_w;","\t                var m_z = 0x3ade68b1;","\t                var mask = 0xffffffff;","","\t                return function () {","\t                    m_z = (0x9069 * (m_z & 0xFFFF) + (m_z >> 0x10)) & mask;","\t                    m_w = (0x4650 * (m_w & 0xFFFF) + (m_w >> 0x10)) & mask;","\t                    var result = ((m_z << 0x10) + m_w) & mask;","\t                    result /= 0x100000000;","\t                    result += 0.5;","\t                    return result * (Math.random() > .5 ? 1 : -1);","\t                }","\t            });","","\t            for (var i = 0, rcache; i < nBytes; i += 4) {","\t                var _r = r((rcache || Math.random()) * 0x100000000);","","\t                rcache = _r() * 0x3ade67b7;","\t                words.push((_r() * 0x100000000) | 0);","\t            }","","\t            return new WordArray.init(words, nBytes);","\t        }","\t    });","","\t    /**","\t     * Encoder namespace.","\t     */","\t    var C_enc = C.enc = {};","","\t    /**","\t     * Hex encoding strategy.","\t     */","\t    var Hex = C_enc.Hex = {","\t        /**","\t         * Converts a word array to a hex string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The hex string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            // Shortcuts","\t            var words = wordArray.words;","\t            var sigBytes = wordArray.sigBytes;","","\t            // Convert","\t            var hexChars = [];","\t            for (var i = 0; i < sigBytes; i++) {","\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","\t                hexChars.push((bite >>> 4).toString(16));","\t                hexChars.push((bite & 0x0f).toString(16));","\t            }","","\t            return hexChars.join('');","\t        },","","\t        /**","\t         * Converts a hex string to a word array.","\t         *","\t         * @param {string} hexStr The hex string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Hex.parse(hexString);","\t         */","\t        parse: function (hexStr) {","\t            // Shortcut","\t            var hexStrLength = hexStr.length;","","\t            // Convert","\t            var words = [];","\t            for (var i = 0; i < hexStrLength; i += 2) {","\t                words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);","\t            }","","\t            return new WordArray.init(words, hexStrLength / 2);","\t        }","\t    };","","\t    /**","\t     * Latin1 encoding strategy.","\t     */","\t    var Latin1 = C_enc.Latin1 = {","\t        /**","\t         * Converts a word array to a Latin1 string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The Latin1 string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            // Shortcuts","\t            var words = wordArray.words;","\t            var sigBytes = wordArray.sigBytes;","","\t            // Convert","\t            var latin1Chars = [];","\t            for (var i = 0; i < sigBytes; i++) {","\t                var bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;","\t                latin1Chars.push(String.fromCharCode(bite));","\t            }","","\t            return latin1Chars.join('');","\t        },","","\t        /**","\t         * Converts a Latin1 string to a word array.","\t         *","\t         * @param {string} latin1Str The Latin1 string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);","\t         */","\t        parse: function (latin1Str) {","\t            // Shortcut","\t            var latin1StrLength = latin1Str.length;","","\t            // Convert","\t            var words = [];","\t            for (var i = 0; i < latin1StrLength; i++) {","\t                words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);","\t            }","","\t            return new WordArray.init(words, latin1StrLength);","\t        }","\t    };","","\t    /**","\t     * UTF-8 encoding strategy.","\t     */","\t    var Utf8 = C_enc.Utf8 = {","\t        /**","\t         * Converts a word array to a UTF-8 string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The UTF-8 string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            try {","\t                return decodeURIComponent(escape(Latin1.stringify(wordArray)));","\t            } catch (e) {","\t                throw new Error('Malformed UTF-8 data');","\t            }","\t        },","","\t        /**","\t         * Converts a UTF-8 string to a word array.","\t         *","\t         * @param {string} utf8Str The UTF-8 string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);","\t         */","\t        parse: function (utf8Str) {","\t            return Latin1.parse(unescape(encodeURIComponent(utf8Str)));","\t        }","\t    };","","\t    /**","\t     * Abstract buffered block algorithm template.","\t     *","\t     * The property blockSize must be implemented in a concrete subtype.","\t     *","\t     * @property {number} _minBufferSize The number of blocks that should be kept unprocessed in the buffer. Default: 0","\t     */","\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm = Base.extend({","\t        /**","\t         * Resets this block algorithm's data buffer to its initial state.","\t         *","\t         * @example","\t         *","\t         *     bufferedBlockAlgorithm.reset();","\t         */","\t        reset: function () {","\t            // Initial values","\t            this._data = new WordArray.init();","\t            this._nDataBytes = 0;","\t        },","","\t        /**","\t         * Adds new data to this block algorithm's buffer.","\t         *","\t         * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.","\t         *","\t         * @example","\t         *","\t         *     bufferedBlockAlgorithm._append('data');","\t         *     bufferedBlockAlgorithm._append(wordArray);","\t         */","\t        _append: function (data) {","\t            // Convert string to WordArray, else assume WordArray already","\t            if (typeof data == 'string') {","\t                data = Utf8.parse(data);","\t            }","","\t            // Append","\t            this._data.concat(data);","\t            this._nDataBytes += data.sigBytes;","\t        },","","\t        /**","\t         * Processes available data blocks.","\t         *","\t         * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.","\t         *","\t         * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.","\t         *","\t         * @return {WordArray} The processed data.","\t         *","\t         * @example","\t         *","\t         *     var processedData = bufferedBlockAlgorithm._process();","\t         *     var processedData = bufferedBlockAlgorithm._process(!!'flush');","\t         */","\t        _process: function (doFlush) {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","\t            var dataSigBytes = data.sigBytes;","\t            var blockSize = this.blockSize;","\t            var blockSizeBytes = blockSize * 4;","","\t            // Count blocks ready","\t            var nBlocksReady = dataSigBytes / blockSizeBytes;","\t            if (doFlush) {","\t                // Round up to include partial blocks","\t                nBlocksReady = Math.ceil(nBlocksReady);","\t            } else {","\t                // Round down to include only full blocks,","\t                // less the number of blocks that must remain in the buffer","\t                nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);","\t            }","","\t            // Count words ready","\t            var nWordsReady = nBlocksReady * blockSize;","","\t            // Count bytes ready","\t            var nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);","","\t            // Process blocks","\t            if (nWordsReady) {","\t                for (var offset = 0; offset < nWordsReady; offset += blockSize) {","\t                    // Perform concrete-algorithm logic","\t                    this._doProcessBlock(dataWords, offset);","\t                }","","\t                // Remove processed words","\t                var processedWords = dataWords.splice(0, nWordsReady);","\t                data.sigBytes -= nBytesReady;","\t            }","","\t            // Return processed words","\t            return new WordArray.init(processedWords, nBytesReady);","\t        },","","\t        /**","\t         * Creates a copy of this object.","\t         *","\t         * @return {Object} The clone.","\t         *","\t         * @example","\t         *","\t         *     var clone = bufferedBlockAlgorithm.clone();","\t         */","\t        clone: function () {","\t            var clone = Base.clone.call(this);","\t            clone._data = this._data.clone();","","\t            return clone;","\t        },","","\t        _minBufferSize: 0","\t    });","","\t    /**","\t     * Abstract hasher template.","\t     *","\t     * @property {number} blockSize The number of 32-bit words this hasher operates on. Default: 16 (512 bits)","\t     */","\t    var Hasher = C_lib.Hasher = BufferedBlockAlgorithm.extend({","\t        /**","\t         * Configuration options.","\t         */","\t        cfg: Base.extend(),","","\t        /**","\t         * Initializes a newly created hasher.","\t         *","\t         * @param {Object} cfg (Optional) The configuration options to use for this hash computation.","\t         *","\t         * @example","\t         *","\t         *     var hasher = CryptoJS.algo.SHA256.create();","\t         */","\t        init: function (cfg) {","\t            // Apply config defaults","\t            this.cfg = this.cfg.extend(cfg);","","\t            // Set initial values","\t            this.reset();","\t        },","","\t        /**","\t         * Resets this hasher to its initial state.","\t         *","\t         * @example","\t         *","\t         *     hasher.reset();","\t         */","\t        reset: function () {","\t            // Reset data buffer","\t            BufferedBlockAlgorithm.reset.call(this);","","\t            // Perform concrete-hasher logic","\t            this._doReset();","\t        },","","\t        /**","\t         * Updates this hasher with a message.","\t         *","\t         * @param {WordArray|string} messageUpdate The message to append.","\t         *","\t         * @return {Hasher} This hasher.","\t         *","\t         * @example","\t         *","\t         *     hasher.update('message');","\t         *     hasher.update(wordArray);","\t         */","\t        update: function (messageUpdate) {","\t            // Append","\t            this._append(messageUpdate);","","\t            // Update the hash","\t            this._process();","","\t            // Chainable","\t            return this;","\t        },","","\t        /**","\t         * Finalizes the hash computation.","\t         * Note that the finalize operation is effectively a destructive, read-once operation.","\t         *","\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.","\t         *","\t         * @return {WordArray} The hash.","\t         *","\t         * @example","\t         *","\t         *     var hash = hasher.finalize();","\t         *     var hash = hasher.finalize('message');","\t         *     var hash = hasher.finalize(wordArray);","\t         */","\t        finalize: function (messageUpdate) {","\t            // Final message update","\t            if (messageUpdate) {","\t                this._append(messageUpdate);","\t            }","","\t            // Perform concrete-hasher logic","\t            var hash = this._doFinalize();","","\t            return hash;","\t        },","","\t        blockSize: 512/32,","","\t        /**","\t         * Creates a shortcut function to a hasher's object interface.","\t         *","\t         * @param {Hasher} hasher The hasher to create a helper for.","\t         *","\t         * @return {Function} The shortcut function.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);","\t         */","\t        _createHelper: function (hasher) {","\t            return function (message, cfg) {","\t                return new hasher.init(cfg).finalize(message);","\t            };","\t        },","","\t        /**","\t         * Creates a shortcut function to the HMAC's object interface.","\t         *","\t         * @param {Hasher} hasher The hasher to use in this HMAC helper.","\t         *","\t         * @return {Function} The shortcut function.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);","\t         */","\t        _createHmacHelper: function (hasher) {","\t            return function (message, key) {","\t                return new C_algo.HMAC.init(hasher, key).finalize(message);","\t            };","\t        }","\t    });","","\t    /**","\t     * Algorithm namespace.","\t     */","\t    var C_algo = C.algo = {};","","\t    return C;","\t}(Math));","","","\treturn CryptoJS;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"23":1,"24":1,"26":0,"27":0,"29":0,"31":0,"33":0,"35":0,"42":1,"47":1,"52":1,"55":1,"76":269,"79":269,"80":46,"84":269,"85":259,"86":215,"91":269,"94":269,"96":269,"112":215,"113":215,"115":215,"145":46,"146":147,"147":147,"152":46,"153":2,"167":0,"178":1,"192":6,"194":6,"195":0,"197":6,"215":0,"231":0,"232":0,"233":0,"234":0,"237":0,"240":0,"242":0,"243":0,"244":0,"248":0,"249":0,"252":0,"255":0,"267":0,"268":0,"271":0,"272":0,"285":0,"286":0,"288":0,"305":0,"307":0,"308":0,"309":0,"310":0,"312":0,"313":0,"314":0,"315":0,"316":0,"317":0,"318":0,"322":0,"323":0,"325":0,"326":0,"329":0,"336":1,"341":1,"357":0,"358":0,"361":0,"362":0,"363":0,"364":0,"365":0,"368":0,"386":0,"389":0,"390":0,"391":0,"394":0,"401":1,"417":0,"418":0,"421":0,"422":0,"423":0,"424":0,"427":0,"445":0,"448":0,"449":0,"450":0,"453":0,"460":1,"475":0,"476":0,"478":0,"496":0,"507":1,"517":0,"518":0,"533":0,"534":0,"538":0,"539":0,"558":0,"559":0,"560":0,"561":0,"562":0,"565":0,"566":0,"568":0,"572":0,"576":0,"579":0,"582":0,"583":0,"585":0,"589":0,"590":0,"594":0,"607":0,"608":0,"610":0,"621":1,"638":0,"641":0,"653":0,"656":0,"673":0,"676":0,"679":0,"698":0,"699":0,"703":0,"705":0,"724":8,"725":0,"743":8,"744":0,"752":1,"754":1,"758":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/x64-core.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/x64-core.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":209,"15":209,"16":1,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":1,"4":209,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}}},"4":{"name":"(anonymous_4)","line":42,"loc":{"start":{"line":42,"column":15},"end":{"line":42,"column":36}}},"5":{"name":"(anonymous_5)","line":240,"loc":{"start":{"line":240,"column":15},"end":{"line":240,"column":42}}},"6":{"name":"(anonymous_6)","line":259,"loc":{"start":{"line":259,"column":16},"end":{"line":259,"column":28}}},"7":{"name":"(anonymous_7)","line":284,"loc":{"start":{"line":284,"column":16},"end":{"line":284,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":304,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":299,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":40}},"12":{"start":{"line":26,"column":5},"end":{"line":26,"column":28}},"13":{"start":{"line":31,"column":5},"end":{"line":211,"column":8}},"14":{"start":{"line":43,"column":13},"end":{"line":43,"column":30}},"15":{"start":{"line":44,"column":13},"end":{"line":44,"column":28}},"16":{"start":{"line":219,"column":5},"end":{"line":298,"column":8}},"17":{"start":{"line":241,"column":13},"end":{"line":241,"column":46}},"18":{"start":{"line":243,"column":13},"end":{"line":247,"column":14}},"19":{"start":{"line":244,"column":17},"end":{"line":244,"column":42}},"20":{"start":{"line":246,"column":17},"end":{"line":246,"column":50}},"21":{"start":{"line":261,"column":13},"end":{"line":261,"column":39}},"22":{"start":{"line":262,"column":13},"end":{"line":262,"column":50}},"23":{"start":{"line":265,"column":13},"end":{"line":265,"column":31}},"24":{"start":{"line":266,"column":13},"end":{"line":270,"column":14}},"25":{"start":{"line":267,"column":17},"end":{"line":267,"column":43}},"26":{"start":{"line":268,"column":17},"end":{"line":268,"column":45}},"27":{"start":{"line":269,"column":17},"end":{"line":269,"column":44}},"28":{"start":{"line":272,"column":13},"end":{"line":272,"column":65}},"29":{"start":{"line":285,"column":13},"end":{"line":285,"column":47}},"30":{"start":{"line":288,"column":13},"end":{"line":288,"column":59}},"31":{"start":{"line":291,"column":13},"end":{"line":291,"column":44}},"32":{"start":{"line":292,"column":13},"end":{"line":294,"column":14}},"33":{"start":{"line":293,"column":17},"end":{"line":293,"column":45}},"34":{"start":{"line":296,"column":13},"end":{"line":296,"column":26}},"35":{"start":{"line":302,"column":1},"end":{"line":302,"column":17}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":241,"type":"binary-expr","locations":[{"start":{"line":241,"column":34},"end":{"line":241,"column":39}},{"start":{"line":241,"column":43},"end":{"line":241,"column":45}}]},"5":{"line":243,"type":"if","locations":[{"start":{"line":243,"column":13},"end":{"line":243,"column":13}},{"start":{"line":243,"column":13},"end":{"line":243,"column":13}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function (undefined) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Base = C_lib.Base;","\t    var X32WordArray = C_lib.WordArray;","","\t    /**","\t     * x64 namespace.","\t     */","\t    var C_x64 = C.x64 = {};","","\t    /**","\t     * A 64-bit word.","\t     */","\t    var X64Word = C_x64.Word = Base.extend({","\t        /**","\t         * Initializes a newly created 64-bit word.","\t         *","\t         * @param {number} high The high 32 bits.","\t         * @param {number} low The low 32 bits.","\t         *","\t         * @example","\t         *","\t         *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);","\t         */","\t        init: function (high, low) {","\t            this.high = high;","\t            this.low = low;","\t        }","","\t        /**","\t         * Bitwise NOTs this word.","\t         *","\t         * @return {X64Word} A new x64-Word object after negating.","\t         *","\t         * @example","\t         *","\t         *     var negated = x64Word.not();","\t         */","\t        // not: function () {","\t            // var high = ~this.high;","\t            // var low = ~this.low;","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Bitwise ANDs this word with the passed word.","\t         *","\t         * @param {X64Word} word The x64-Word to AND with this word.","\t         *","\t         * @return {X64Word} A new x64-Word object after ANDing.","\t         *","\t         * @example","\t         *","\t         *     var anded = x64Word.and(anotherX64Word);","\t         */","\t        // and: function (word) {","\t            // var high = this.high & word.high;","\t            // var low = this.low & word.low;","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Bitwise ORs this word with the passed word.","\t         *","\t         * @param {X64Word} word The x64-Word to OR with this word.","\t         *","\t         * @return {X64Word} A new x64-Word object after ORing.","\t         *","\t         * @example","\t         *","\t         *     var ored = x64Word.or(anotherX64Word);","\t         */","\t        // or: function (word) {","\t            // var high = this.high | word.high;","\t            // var low = this.low | word.low;","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Bitwise XORs this word with the passed word.","\t         *","\t         * @param {X64Word} word The x64-Word to XOR with this word.","\t         *","\t         * @return {X64Word} A new x64-Word object after XORing.","\t         *","\t         * @example","\t         *","\t         *     var xored = x64Word.xor(anotherX64Word);","\t         */","\t        // xor: function (word) {","\t            // var high = this.high ^ word.high;","\t            // var low = this.low ^ word.low;","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Shifts this word n bits to the left.","\t         *","\t         * @param {number} n The number of bits to shift.","\t         *","\t         * @return {X64Word} A new x64-Word object after shifting.","\t         *","\t         * @example","\t         *","\t         *     var shifted = x64Word.shiftL(25);","\t         */","\t        // shiftL: function (n) {","\t            // if (n < 32) {","\t                // var high = (this.high << n) | (this.low >>> (32 - n));","\t                // var low = this.low << n;","\t            // } else {","\t                // var high = this.low << (n - 32);","\t                // var low = 0;","\t            // }","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Shifts this word n bits to the right.","\t         *","\t         * @param {number} n The number of bits to shift.","\t         *","\t         * @return {X64Word} A new x64-Word object after shifting.","\t         *","\t         * @example","\t         *","\t         *     var shifted = x64Word.shiftR(7);","\t         */","\t        // shiftR: function (n) {","\t            // if (n < 32) {","\t                // var low = (this.low >>> n) | (this.high << (32 - n));","\t                // var high = this.high >>> n;","\t            // } else {","\t                // var low = this.high >>> (n - 32);","\t                // var high = 0;","\t            // }","","\t            // return X64Word.create(high, low);","\t        // },","","\t        /**","\t         * Rotates this word n bits to the left.","\t         *","\t         * @param {number} n The number of bits to rotate.","\t         *","\t         * @return {X64Word} A new x64-Word object after rotating.","\t         *","\t         * @example","\t         *","\t         *     var rotated = x64Word.rotL(25);","\t         */","\t        // rotL: function (n) {","\t            // return this.shiftL(n).or(this.shiftR(64 - n));","\t        // },","","\t        /**","\t         * Rotates this word n bits to the right.","\t         *","\t         * @param {number} n The number of bits to rotate.","\t         *","\t         * @return {X64Word} A new x64-Word object after rotating.","\t         *","\t         * @example","\t         *","\t         *     var rotated = x64Word.rotR(7);","\t         */","\t        // rotR: function (n) {","\t            // return this.shiftR(n).or(this.shiftL(64 - n));","\t        // },","","\t        /**","\t         * Adds this word with the passed word.","\t         *","\t         * @param {X64Word} word The x64-Word to add with this word.","\t         *","\t         * @return {X64Word} A new x64-Word object after adding.","\t         *","\t         * @example","\t         *","\t         *     var added = x64Word.add(anotherX64Word);","\t         */","\t        // add: function (word) {","\t            // var low = (this.low + word.low) | 0;","\t            // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;","\t            // var high = (this.high + word.high + carry) | 0;","","\t            // return X64Word.create(high, low);","\t        // }","\t    });","","\t    /**","\t     * An array of 64-bit words.","\t     *","\t     * @property {Array} words The array of CryptoJS.x64.Word objects.","\t     * @property {number} sigBytes The number of significant bytes in this word array.","\t     */","\t    var X64WordArray = C_x64.WordArray = Base.extend({","\t        /**","\t         * Initializes a newly created word array.","\t         *","\t         * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.","\t         * @param {number} sigBytes (Optional) The number of significant bytes in the words.","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.x64.WordArray.create();","\t         *","\t         *     var wordArray = CryptoJS.x64.WordArray.create([","\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),","\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)","\t         *     ]);","\t         *","\t         *     var wordArray = CryptoJS.x64.WordArray.create([","\t         *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),","\t         *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)","\t         *     ], 10);","\t         */","\t        init: function (words, sigBytes) {","\t            words = this.words = words || [];","","\t            if (sigBytes != undefined) {","\t                this.sigBytes = sigBytes;","\t            } else {","\t                this.sigBytes = words.length * 8;","\t            }","\t        },","","\t        /**","\t         * Converts this 64-bit word array to a 32-bit word array.","\t         *","\t         * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.","\t         *","\t         * @example","\t         *","\t         *     var x32WordArray = x64WordArray.toX32();","\t         */","\t        toX32: function () {","\t            // Shortcuts","\t            var x64Words = this.words;","\t            var x64WordsLength = x64Words.length;","","\t            // Convert","\t            var x32Words = [];","\t            for (var i = 0; i < x64WordsLength; i++) {","\t                var x64Word = x64Words[i];","\t                x32Words.push(x64Word.high);","\t                x32Words.push(x64Word.low);","\t            }","","\t            return X32WordArray.create(x32Words, this.sigBytes);","\t        },","","\t        /**","\t         * Creates a copy of this word array.","\t         *","\t         * @return {X64WordArray} The clone.","\t         *","\t         * @example","\t         *","\t         *     var clone = x64WordArray.clone();","\t         */","\t        clone: function () {","\t            var clone = Base.clone.call(this);","","\t            // Clone \"words\" array","\t            var words = clone.words = this.words.slice(0);","","\t            // Clone each X64Word object","\t            var wordsLength = words.length;","\t            for (var i = 0; i < wordsLength; i++) {","\t                words[i] = words[i].clone();","\t            }","","\t            return clone;","\t        }","\t    });","\t}());","","","\treturn CryptoJS;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"26":1,"31":1,"43":209,"44":209,"219":1,"241":0,"243":0,"244":0,"246":0,"261":0,"262":0,"265":0,"266":0,"267":0,"268":0,"269":0,"272":0,"285":0,"288":0,"291":0,"292":0,"293":0,"296":0,"302":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/lib-typedarrays.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/lib-typedarrays.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":0,"10":1,"11":1,"12":1,"13":1,"14":1,"15":6,"16":0,"17":6,"18":0,"19":6,"20":0,"21":0,"22":0,"23":0,"24":0,"25":6,"26":1,"27":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,1],"5":[0,6],"6":[0,6],"7":[6,6,6,6,6,6,6,6,6],"8":[0,6]},"f":{"1":1,"2":1,"3":1,"4":6},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":36},"end":{"line":31,"column":58}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":76,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":71,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":20,"column":6}},"9":{"start":{"line":19,"column":9},"end":{"line":19,"column":16}},"10":{"start":{"line":23,"column":5},"end":{"line":23,"column":22}},"11":{"start":{"line":24,"column":5},"end":{"line":24,"column":23}},"12":{"start":{"line":25,"column":5},"end":{"line":25,"column":37}},"13":{"start":{"line":28,"column":5},"end":{"line":28,"column":36}},"14":{"start":{"line":31,"column":5},"end":{"line":68,"column":7}},"15":{"start":{"line":33,"column":9},"end":{"line":35,"column":10}},"16":{"start":{"line":34,"column":13},"end":{"line":34,"column":53}},"17":{"start":{"line":38,"column":9},"end":{"line":49,"column":10}},"18":{"start":{"line":48,"column":13},"end":{"line":48,"column":106}},"19":{"start":{"line":52,"column":9},"end":{"line":67,"column":10}},"20":{"start":{"line":54,"column":13},"end":{"line":54,"column":62}},"21":{"start":{"line":57,"column":13},"end":{"line":57,"column":28}},"22":{"start":{"line":58,"column":13},"end":{"line":60,"column":14}},"23":{"start":{"line":59,"column":17},"end":{"line":59,"column":71}},"24":{"start":{"line":63,"column":13},"end":{"line":63,"column":63}},"25":{"start":{"line":66,"column":13},"end":{"line":66,"column":46}},"26":{"start":{"line":70,"column":5},"end":{"line":70,"column":35}},"27":{"start":{"line":74,"column":1},"end":{"line":74,"column":31}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":18,"type":"if","locations":[{"start":{"line":18,"column":5},"end":{"line":18,"column":5}},{"start":{"line":18,"column":5},"end":{"line":18,"column":5}}]},"5":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":9},"end":{"line":33,"column":9}},{"start":{"line":33,"column":9},"end":{"line":33,"column":9}}]},"6":{"line":38,"type":"if","locations":[{"start":{"line":38,"column":9},"end":{"line":38,"column":9}},{"start":{"line":38,"column":9},"end":{"line":38,"column":9}}]},"7":{"line":39,"type":"binary-expr","locations":[{"start":{"line":39,"column":13},"end":{"line":39,"column":44}},{"start":{"line":40,"column":14},"end":{"line":40,"column":54}},{"start":{"line":40,"column":58},"end":{"line":40,"column":97}},{"start":{"line":41,"column":13},"end":{"line":41,"column":45}},{"start":{"line":42,"column":13},"end":{"line":42,"column":46}},{"start":{"line":43,"column":13},"end":{"line":43,"column":45}},{"start":{"line":44,"column":13},"end":{"line":44,"column":46}},{"start":{"line":45,"column":13},"end":{"line":45,"column":47}},{"start":{"line":46,"column":13},"end":{"line":46,"column":47}}]},"8":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":9},"end":{"line":52,"column":9}},{"start":{"line":52,"column":9},"end":{"line":52,"column":9}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Check if typed arrays are supported","\t    if (typeof ArrayBuffer != 'function') {","\t        return;","\t    }","","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","","\t    // Reference original init","\t    var superInit = WordArray.init;","","\t    // Augment WordArray.init to handle typed arrays","\t    var subInit = WordArray.init = function (typedArray) {","\t        // Convert buffers to uint8","\t        if (typedArray instanceof ArrayBuffer) {","\t            typedArray = new Uint8Array(typedArray);","\t        }","","\t        // Convert other array views to uint8","\t        if (","\t            typedArray instanceof Int8Array ||","\t            (typeof Uint8ClampedArray !== \"undefined\" && typedArray instanceof Uint8ClampedArray) ||","\t            typedArray instanceof Int16Array ||","\t            typedArray instanceof Uint16Array ||","\t            typedArray instanceof Int32Array ||","\t            typedArray instanceof Uint32Array ||","\t            typedArray instanceof Float32Array ||","\t            typedArray instanceof Float64Array","\t        ) {","\t            typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);","\t        }","","\t        // Handle Uint8Array","\t        if (typedArray instanceof Uint8Array) {","\t            // Shortcut","\t            var typedArrayByteLength = typedArray.byteLength;","","\t            // Extract bytes","\t            var words = [];","\t            for (var i = 0; i < typedArrayByteLength; i++) {","\t                words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);","\t            }","","\t            // Initialize this word array","\t            superInit.call(this, words, typedArrayByteLength);","\t        } else {","\t            // Else call normal init","\t            superInit.apply(this, arguments);","\t        }","\t    };","","\t    subInit.prototype = WordArray;","\t}());","","","\treturn CryptoJS.lib.WordArray;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":0,"23":1,"24":1,"25":1,"28":1,"31":1,"33":6,"34":0,"38":6,"48":0,"52":6,"54":0,"57":0,"58":0,"59":0,"63":0,"66":6,"70":1,"74":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/enc-utf16.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/enc-utf16.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":1,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1,"39":0,"40":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":41}}},"5":{"name":"(anonymous_5)","line":68,"loc":{"start":{"line":68,"column":16},"end":{"line":68,"column":36}}},"6":{"name":"(anonymous_6)","line":99,"loc":{"start":{"line":99,"column":20},"end":{"line":99,"column":41}}},"7":{"name":"(anonymous_7)","line":127,"loc":{"start":{"line":127,"column":16},"end":{"line":127,"column":36}}},"8":{"name":"swapEndian","line":141,"loc":{"start":{"line":141,"column":5},"end":{"line":141,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":149,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":144,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":23}},"12":{"start":{"line":26,"column":5},"end":{"line":80,"column":7}},"13":{"start":{"line":42,"column":13},"end":{"line":42,"column":41}},"14":{"start":{"line":43,"column":13},"end":{"line":43,"column":47}},"15":{"start":{"line":46,"column":13},"end":{"line":46,"column":33}},"16":{"start":{"line":47,"column":13},"end":{"line":50,"column":14}},"17":{"start":{"line":48,"column":17},"end":{"line":48,"column":82}},"18":{"start":{"line":49,"column":17},"end":{"line":49,"column":65}},"19":{"start":{"line":52,"column":13},"end":{"line":52,"column":40}},"20":{"start":{"line":70,"column":13},"end":{"line":70,"column":50}},"21":{"start":{"line":73,"column":13},"end":{"line":73,"column":28}},"22":{"start":{"line":74,"column":13},"end":{"line":76,"column":14}},"23":{"start":{"line":75,"column":17},"end":{"line":75,"column":81}},"24":{"start":{"line":78,"column":13},"end":{"line":78,"column":64}},"25":{"start":{"line":85,"column":5},"end":{"line":139,"column":7}},"26":{"start":{"line":101,"column":13},"end":{"line":101,"column":41}},"27":{"start":{"line":102,"column":13},"end":{"line":102,"column":47}},"28":{"start":{"line":105,"column":13},"end":{"line":105,"column":33}},"29":{"start":{"line":106,"column":13},"end":{"line":109,"column":14}},"30":{"start":{"line":107,"column":17},"end":{"line":107,"column":94}},"31":{"start":{"line":108,"column":17},"end":{"line":108,"column":65}},"32":{"start":{"line":111,"column":13},"end":{"line":111,"column":40}},"33":{"start":{"line":129,"column":13},"end":{"line":129,"column":50}},"34":{"start":{"line":132,"column":13},"end":{"line":132,"column":28}},"35":{"start":{"line":133,"column":13},"end":{"line":135,"column":14}},"36":{"start":{"line":134,"column":17},"end":{"line":134,"column":93}},"37":{"start":{"line":137,"column":13},"end":{"line":137,"column":64}},"38":{"start":{"line":141,"column":5},"end":{"line":143,"column":6}},"39":{"start":{"line":142,"column":9},"end":{"line":142,"column":73}},"40":{"start":{"line":147,"column":1},"end":{"line":147,"column":27}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var C_enc = C.enc;","","\t    /**","\t     * UTF-16 BE encoding strategy.","\t     */","\t    var Utf16BE = C_enc.Utf16 = C_enc.Utf16BE = {","\t        /**","\t         * Converts a word array to a UTF-16 BE string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The UTF-16 BE string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            // Shortcuts","\t            var words = wordArray.words;","\t            var sigBytes = wordArray.sigBytes;","","\t            // Convert","\t            var utf16Chars = [];","\t            for (var i = 0; i < sigBytes; i += 2) {","\t                var codePoint = (words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff;","\t                utf16Chars.push(String.fromCharCode(codePoint));","\t            }","","\t            return utf16Chars.join('');","\t        },","","\t        /**","\t         * Converts a UTF-16 BE string to a word array.","\t         *","\t         * @param {string} utf16Str The UTF-16 BE string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);","\t         */","\t        parse: function (utf16Str) {","\t            // Shortcut","\t            var utf16StrLength = utf16Str.length;","","\t            // Convert","\t            var words = [];","\t            for (var i = 0; i < utf16StrLength; i++) {","\t                words[i >>> 1] |= utf16Str.charCodeAt(i) << (16 - (i % 2) * 16);","\t            }","","\t            return WordArray.create(words, utf16StrLength * 2);","\t        }","\t    };","","\t    /**","\t     * UTF-16 LE encoding strategy.","\t     */","\t    C_enc.Utf16LE = {","\t        /**","\t         * Converts a word array to a UTF-16 LE string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The UTF-16 LE string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            // Shortcuts","\t            var words = wordArray.words;","\t            var sigBytes = wordArray.sigBytes;","","\t            // Convert","\t            var utf16Chars = [];","\t            for (var i = 0; i < sigBytes; i += 2) {","\t                var codePoint = swapEndian((words[i >>> 2] >>> (16 - (i % 4) * 8)) & 0xffff);","\t                utf16Chars.push(String.fromCharCode(codePoint));","\t            }","","\t            return utf16Chars.join('');","\t        },","","\t        /**","\t         * Converts a UTF-16 LE string to a word array.","\t         *","\t         * @param {string} utf16Str The UTF-16 LE string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);","\t         */","\t        parse: function (utf16Str) {","\t            // Shortcut","\t            var utf16StrLength = utf16Str.length;","","\t            // Convert","\t            var words = [];","\t            for (var i = 0; i < utf16StrLength; i++) {","\t                words[i >>> 1] |= swapEndian(utf16Str.charCodeAt(i) << (16 - (i % 2) * 16));","\t            }","","\t            return WordArray.create(words, utf16StrLength * 2);","\t        }","\t    };","","\t    function swapEndian(word) {","\t        return ((word << 8) & 0xff00ff00) | ((word >>> 8) & 0x00ff00ff);","\t    }","\t}());","","","\treturn CryptoJS.enc.Utf16;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"26":1,"42":0,"43":0,"46":0,"47":0,"48":0,"49":0,"52":0,"70":0,"73":0,"74":0,"75":0,"78":0,"85":1,"101":0,"102":0,"105":0,"106":0,"107":0,"108":0,"111":0,"129":0,"132":0,"133":0,"134":0,"137":0,"141":1,"142":0,"147":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/enc-base64.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/enc-base64.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":40,"loc":{"start":{"line":40,"column":20},"end":{"line":40,"column":41}}},"5":{"name":"(anonymous_5)","line":87,"loc":{"start":{"line":87,"column":16},"end":{"line":87,"column":37}}},"6":{"name":"parseLoop","line":117,"loc":{"start":{"line":117,"column":5},"end":{"line":117,"column":64}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":135,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":130,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":23}},"12":{"start":{"line":26,"column":5},"end":{"line":115,"column":7}},"13":{"start":{"line":42,"column":13},"end":{"line":42,"column":41}},"14":{"start":{"line":43,"column":13},"end":{"line":43,"column":47}},"15":{"start":{"line":44,"column":13},"end":{"line":44,"column":33}},"16":{"start":{"line":47,"column":13},"end":{"line":47,"column":31}},"17":{"start":{"line":50,"column":13},"end":{"line":50,"column":34}},"18":{"start":{"line":51,"column":13},"end":{"line":61,"column":14}},"19":{"start":{"line":52,"column":17},"end":{"line":52,"column":88}},"20":{"start":{"line":53,"column":17},"end":{"line":53,"column":88}},"21":{"start":{"line":54,"column":17},"end":{"line":54,"column":88}},"22":{"start":{"line":56,"column":17},"end":{"line":56,"column":68}},"23":{"start":{"line":58,"column":17},"end":{"line":60,"column":18}},"24":{"start":{"line":59,"column":21},"end":{"line":59,"column":86}},"25":{"start":{"line":64,"column":13},"end":{"line":64,"column":46}},"26":{"start":{"line":65,"column":13},"end":{"line":69,"column":14}},"27":{"start":{"line":66,"column":17},"end":{"line":68,"column":18}},"28":{"start":{"line":67,"column":21},"end":{"line":67,"column":51}},"29":{"start":{"line":71,"column":13},"end":{"line":71,"column":41}},"30":{"start":{"line":89,"column":13},"end":{"line":89,"column":52}},"31":{"start":{"line":90,"column":13},"end":{"line":90,"column":33}},"32":{"start":{"line":91,"column":13},"end":{"line":91,"column":47}},"33":{"start":{"line":93,"column":13},"end":{"line":98,"column":14}},"34":{"start":{"line":94,"column":21},"end":{"line":94,"column":56}},"35":{"start":{"line":95,"column":21},"end":{"line":97,"column":22}},"36":{"start":{"line":96,"column":25},"end":{"line":96,"column":59}},"37":{"start":{"line":101,"column":13},"end":{"line":101,"column":46}},"38":{"start":{"line":102,"column":13},"end":{"line":107,"column":14}},"39":{"start":{"line":103,"column":17},"end":{"line":103,"column":67}},"40":{"start":{"line":104,"column":17},"end":{"line":106,"column":18}},"41":{"start":{"line":105,"column":21},"end":{"line":105,"column":52}},"42":{"start":{"line":110,"column":13},"end":{"line":110,"column":70}},"43":{"start":{"line":117,"column":5},"end":{"line":129,"column":6}},"44":{"start":{"line":118,"column":7},"end":{"line":118,"column":22}},"45":{"start":{"line":119,"column":7},"end":{"line":119,"column":22}},"46":{"start":{"line":120,"column":7},"end":{"line":127,"column":8}},"47":{"start":{"line":121,"column":11},"end":{"line":126,"column":12}},"48":{"start":{"line":122,"column":15},"end":{"line":122,"column":84}},"49":{"start":{"line":123,"column":15},"end":{"line":123,"column":85}},"50":{"start":{"line":124,"column":15},"end":{"line":124,"column":81}},"51":{"start":{"line":125,"column":15},"end":{"line":125,"column":24}},"52":{"start":{"line":128,"column":7},"end":{"line":128,"column":46}},"53":{"start":{"line":133,"column":1},"end":{"line":133,"column":28}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":58,"type":"binary-expr","locations":[{"start":{"line":58,"column":34},"end":{"line":58,"column":39}},{"start":{"line":58,"column":45},"end":{"line":58,"column":68}}]},"5":{"line":65,"type":"if","locations":[{"start":{"line":65,"column":13},"end":{"line":65,"column":13}},{"start":{"line":65,"column":13},"end":{"line":65,"column":13}}]},"6":{"line":93,"type":"if","locations":[{"start":{"line":93,"column":13},"end":{"line":93,"column":13}},{"start":{"line":93,"column":13},"end":{"line":93,"column":13}}]},"7":{"line":102,"type":"if","locations":[{"start":{"line":102,"column":13},"end":{"line":102,"column":13}},{"start":{"line":102,"column":13},"end":{"line":102,"column":13}}]},"8":{"line":104,"type":"if","locations":[{"start":{"line":104,"column":17},"end":{"line":104,"column":17}},{"start":{"line":104,"column":17},"end":{"line":104,"column":17}}]},"9":{"line":121,"type":"if","locations":[{"start":{"line":121,"column":11},"end":{"line":121,"column":11}},{"start":{"line":121,"column":11},"end":{"line":121,"column":11}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var C_enc = C.enc;","","\t    /**","\t     * Base64 encoding strategy.","\t     */","\t    var Base64 = C_enc.Base64 = {","\t        /**","\t         * Converts a word array to a Base64 string.","\t         *","\t         * @param {WordArray} wordArray The word array.","\t         *","\t         * @return {string} The Base64 string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);","\t         */","\t        stringify: function (wordArray) {","\t            // Shortcuts","\t            var words = wordArray.words;","\t            var sigBytes = wordArray.sigBytes;","\t            var map = this._map;","","\t            // Clamp excess bits","\t            wordArray.clamp();","","\t            // Convert","\t            var base64Chars = [];","\t            for (var i = 0; i < sigBytes; i += 3) {","\t                var byte1 = (words[i >>> 2]       >>> (24 - (i % 4) * 8))       & 0xff;","\t                var byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;","\t                var byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;","","\t                var triplet = (byte1 << 16) | (byte2 << 8) | byte3;","","\t                for (var j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j++) {","\t                    base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));","\t                }","\t            }","","\t            // Add padding","\t            var paddingChar = map.charAt(64);","\t            if (paddingChar) {","\t                while (base64Chars.length % 4) {","\t                    base64Chars.push(paddingChar);","\t                }","\t            }","","\t            return base64Chars.join('');","\t        },","","\t        /**","\t         * Converts a Base64 string to a word array.","\t         *","\t         * @param {string} base64Str The Base64 string.","\t         *","\t         * @return {WordArray} The word array.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var wordArray = CryptoJS.enc.Base64.parse(base64String);","\t         */","\t        parse: function (base64Str) {","\t            // Shortcuts","\t            var base64StrLength = base64Str.length;","\t            var map = this._map;","\t            var reverseMap = this._reverseMap;","","\t            if (!reverseMap) {","\t                    reverseMap = this._reverseMap = [];","\t                    for (var j = 0; j < map.length; j++) {","\t                        reverseMap[map.charCodeAt(j)] = j;","\t                    }","\t            }","","\t            // Ignore padding","\t            var paddingChar = map.charAt(64);","\t            if (paddingChar) {","\t                var paddingIndex = base64Str.indexOf(paddingChar);","\t                if (paddingIndex !== -1) {","\t                    base64StrLength = paddingIndex;","\t                }","\t            }","","\t            // Convert","\t            return parseLoop(base64Str, base64StrLength, reverseMap);","","\t        },","","\t        _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='","\t    };","","\t    function parseLoop(base64Str, base64StrLength, reverseMap) {","\t      var words = [];","\t      var nBytes = 0;","\t      for (var i = 0; i < base64StrLength; i++) {","\t          if (i % 4) {","\t              var bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);","\t              var bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);","\t              words[nBytes >>> 2] |= (bits1 | bits2) << (24 - (nBytes % 4) * 8);","\t              nBytes++;","\t          }","\t      }","\t      return WordArray.create(words, nBytes);","\t    }","\t}());","","","\treturn CryptoJS.enc.Base64;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"26":1,"42":0,"43":0,"44":0,"47":0,"50":0,"51":0,"52":0,"53":0,"54":0,"56":0,"58":0,"59":0,"64":0,"65":0,"66":0,"67":0,"71":0,"89":0,"90":0,"91":0,"93":0,"94":0,"95":0,"96":0,"101":0,"102":0,"103":0,"104":0,"105":0,"110":0,"117":1,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"128":0,"133":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/md5.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/md5.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":64,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":1,"133":0,"134":0,"135":1,"136":0,"137":0,"138":1,"139":0,"140":0,"141":1,"142":0,"143":0,"144":1,"145":1,"146":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":6},"end":{"line":28,"column":18}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":19},"end":{"line":38,"column":31}}},"6":{"name":"(anonymous_6)","line":45,"loc":{"start":{"line":45,"column":26},"end":{"line":45,"column":47}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":22},"end":{"line":160,"column":34}}},"8":{"name":"(anonymous_8)","line":204,"loc":{"start":{"line":204,"column":16},"end":{"line":204,"column":28}}},"9":{"name":"FF","line":212,"loc":{"start":{"line":212,"column":5},"end":{"line":212,"column":38}}},"10":{"name":"GG","line":217,"loc":{"start":{"line":217,"column":5},"end":{"line":217,"column":38}}},"11":{"name":"HH","line":222,"loc":{"start":{"line":222,"column":5},"end":{"line":222,"column":38}}},"12":{"name":"II","line":227,"loc":{"start":{"line":227,"column":5},"end":{"line":227,"column":38}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":268,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":263,"column":10}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":16}},"14":{"start":{"line":28,"column":5},"end":{"line":32,"column":10}},"15":{"start":{"line":29,"column":9},"end":{"line":31,"column":10}},"16":{"start":{"line":30,"column":13},"end":{"line":30,"column":66}},"17":{"start":{"line":37,"column":5},"end":{"line":210,"column":8}},"18":{"start":{"line":39,"column":13},"end":{"line":42,"column":16}},"19":{"start":{"line":47,"column":13},"end":{"line":56,"column":14}},"20":{"start":{"line":49,"column":17},"end":{"line":49,"column":43}},"21":{"start":{"line":50,"column":17},"end":{"line":50,"column":46}},"22":{"start":{"line":52,"column":17},"end":{"line":55,"column":19}},"23":{"start":{"line":59,"column":13},"end":{"line":59,"column":38}},"24":{"start":{"line":61,"column":13},"end":{"line":61,"column":45}},"25":{"start":{"line":62,"column":13},"end":{"line":62,"column":45}},"26":{"start":{"line":63,"column":13},"end":{"line":63,"column":45}},"27":{"start":{"line":64,"column":13},"end":{"line":64,"column":45}},"28":{"start":{"line":65,"column":13},"end":{"line":65,"column":45}},"29":{"start":{"line":66,"column":13},"end":{"line":66,"column":45}},"30":{"start":{"line":67,"column":13},"end":{"line":67,"column":45}},"31":{"start":{"line":68,"column":13},"end":{"line":68,"column":45}},"32":{"start":{"line":69,"column":13},"end":{"line":69,"column":45}},"33":{"start":{"line":70,"column":13},"end":{"line":70,"column":45}},"34":{"start":{"line":71,"column":13},"end":{"line":71,"column":46}},"35":{"start":{"line":72,"column":13},"end":{"line":72,"column":46}},"36":{"start":{"line":73,"column":13},"end":{"line":73,"column":46}},"37":{"start":{"line":74,"column":13},"end":{"line":74,"column":46}},"38":{"start":{"line":75,"column":13},"end":{"line":75,"column":46}},"39":{"start":{"line":76,"column":13},"end":{"line":76,"column":46}},"40":{"start":{"line":79,"column":13},"end":{"line":79,"column":26}},"41":{"start":{"line":80,"column":13},"end":{"line":80,"column":26}},"42":{"start":{"line":81,"column":13},"end":{"line":81,"column":26}},"43":{"start":{"line":82,"column":13},"end":{"line":82,"column":26}},"44":{"start":{"line":85,"column":13},"end":{"line":85,"column":55}},"45":{"start":{"line":86,"column":13},"end":{"line":86,"column":55}},"46":{"start":{"line":87,"column":13},"end":{"line":87,"column":55}},"47":{"start":{"line":88,"column":13},"end":{"line":88,"column":55}},"48":{"start":{"line":89,"column":13},"end":{"line":89,"column":55}},"49":{"start":{"line":90,"column":13},"end":{"line":90,"column":55}},"50":{"start":{"line":91,"column":13},"end":{"line":91,"column":55}},"51":{"start":{"line":92,"column":13},"end":{"line":92,"column":55}},"52":{"start":{"line":93,"column":13},"end":{"line":93,"column":55}},"53":{"start":{"line":94,"column":13},"end":{"line":94,"column":55}},"54":{"start":{"line":95,"column":13},"end":{"line":95,"column":56}},"55":{"start":{"line":96,"column":13},"end":{"line":96,"column":56}},"56":{"start":{"line":97,"column":13},"end":{"line":97,"column":56}},"57":{"start":{"line":98,"column":13},"end":{"line":98,"column":56}},"58":{"start":{"line":99,"column":13},"end":{"line":99,"column":56}},"59":{"start":{"line":100,"column":13},"end":{"line":100,"column":56}},"60":{"start":{"line":102,"column":13},"end":{"line":102,"column":56}},"61":{"start":{"line":103,"column":13},"end":{"line":103,"column":56}},"62":{"start":{"line":104,"column":13},"end":{"line":104,"column":56}},"63":{"start":{"line":105,"column":13},"end":{"line":105,"column":56}},"64":{"start":{"line":106,"column":13},"end":{"line":106,"column":56}},"65":{"start":{"line":107,"column":13},"end":{"line":107,"column":56}},"66":{"start":{"line":108,"column":13},"end":{"line":108,"column":56}},"67":{"start":{"line":109,"column":13},"end":{"line":109,"column":56}},"68":{"start":{"line":110,"column":13},"end":{"line":110,"column":56}},"69":{"start":{"line":111,"column":13},"end":{"line":111,"column":56}},"70":{"start":{"line":112,"column":13},"end":{"line":112,"column":56}},"71":{"start":{"line":113,"column":13},"end":{"line":113,"column":56}},"72":{"start":{"line":114,"column":13},"end":{"line":114,"column":56}},"73":{"start":{"line":115,"column":13},"end":{"line":115,"column":56}},"74":{"start":{"line":116,"column":13},"end":{"line":116,"column":56}},"75":{"start":{"line":117,"column":13},"end":{"line":117,"column":56}},"76":{"start":{"line":119,"column":13},"end":{"line":119,"column":56}},"77":{"start":{"line":120,"column":13},"end":{"line":120,"column":56}},"78":{"start":{"line":121,"column":13},"end":{"line":121,"column":56}},"79":{"start":{"line":122,"column":13},"end":{"line":122,"column":56}},"80":{"start":{"line":123,"column":13},"end":{"line":123,"column":56}},"81":{"start":{"line":124,"column":13},"end":{"line":124,"column":56}},"82":{"start":{"line":125,"column":13},"end":{"line":125,"column":56}},"83":{"start":{"line":126,"column":13},"end":{"line":126,"column":56}},"84":{"start":{"line":127,"column":13},"end":{"line":127,"column":56}},"85":{"start":{"line":128,"column":13},"end":{"line":128,"column":56}},"86":{"start":{"line":129,"column":13},"end":{"line":129,"column":56}},"87":{"start":{"line":130,"column":13},"end":{"line":130,"column":56}},"88":{"start":{"line":131,"column":13},"end":{"line":131,"column":56}},"89":{"start":{"line":132,"column":13},"end":{"line":132,"column":56}},"90":{"start":{"line":133,"column":13},"end":{"line":133,"column":56}},"91":{"start":{"line":134,"column":13},"end":{"line":134,"column":56}},"92":{"start":{"line":136,"column":13},"end":{"line":136,"column":56}},"93":{"start":{"line":137,"column":13},"end":{"line":137,"column":56}},"94":{"start":{"line":138,"column":13},"end":{"line":138,"column":56}},"95":{"start":{"line":139,"column":13},"end":{"line":139,"column":56}},"96":{"start":{"line":140,"column":13},"end":{"line":140,"column":56}},"97":{"start":{"line":141,"column":13},"end":{"line":141,"column":56}},"98":{"start":{"line":142,"column":13},"end":{"line":142,"column":56}},"99":{"start":{"line":143,"column":13},"end":{"line":143,"column":56}},"100":{"start":{"line":144,"column":13},"end":{"line":144,"column":56}},"101":{"start":{"line":145,"column":13},"end":{"line":145,"column":56}},"102":{"start":{"line":146,"column":13},"end":{"line":146,"column":56}},"103":{"start":{"line":147,"column":13},"end":{"line":147,"column":56}},"104":{"start":{"line":148,"column":13},"end":{"line":148,"column":56}},"105":{"start":{"line":149,"column":13},"end":{"line":149,"column":56}},"106":{"start":{"line":150,"column":13},"end":{"line":150,"column":56}},"107":{"start":{"line":151,"column":13},"end":{"line":151,"column":56}},"108":{"start":{"line":154,"column":13},"end":{"line":154,"column":35}},"109":{"start":{"line":155,"column":13},"end":{"line":155,"column":35}},"110":{"start":{"line":156,"column":13},"end":{"line":156,"column":35}},"111":{"start":{"line":157,"column":13},"end":{"line":157,"column":35}},"112":{"start":{"line":162,"column":13},"end":{"line":162,"column":35}},"113":{"start":{"line":163,"column":13},"end":{"line":163,"column":40}},"114":{"start":{"line":165,"column":13},"end":{"line":165,"column":51}},"115":{"start":{"line":166,"column":13},"end":{"line":166,"column":47}},"116":{"start":{"line":169,"column":13},"end":{"line":169,"column":73}},"117":{"start":{"line":171,"column":13},"end":{"line":171,"column":68}},"118":{"start":{"line":172,"column":13},"end":{"line":172,"column":42}},"119":{"start":{"line":173,"column":13},"end":{"line":176,"column":15}},"120":{"start":{"line":177,"column":13},"end":{"line":180,"column":15}},"121":{"start":{"line":182,"column":13},"end":{"line":182,"column":56}},"122":{"start":{"line":185,"column":13},"end":{"line":185,"column":29}},"123":{"start":{"line":188,"column":13},"end":{"line":188,"column":35}},"124":{"start":{"line":189,"column":13},"end":{"line":189,"column":32}},"125":{"start":{"line":192,"column":13},"end":{"line":198,"column":14}},"126":{"start":{"line":194,"column":17},"end":{"line":194,"column":32}},"127":{"start":{"line":196,"column":17},"end":{"line":197,"column":68}},"128":{"start":{"line":201,"column":13},"end":{"line":201,"column":25}},"129":{"start":{"line":205,"column":13},"end":{"line":205,"column":49}},"130":{"start":{"line":206,"column":13},"end":{"line":206,"column":46}},"131":{"start":{"line":208,"column":13},"end":{"line":208,"column":26}},"132":{"start":{"line":212,"column":5},"end":{"line":215,"column":6}},"133":{"start":{"line":213,"column":9},"end":{"line":213,"column":50}},"134":{"start":{"line":214,"column":9},"end":{"line":214,"column":50}},"135":{"start":{"line":217,"column":5},"end":{"line":220,"column":6}},"136":{"start":{"line":218,"column":9},"end":{"line":218,"column":50}},"137":{"start":{"line":219,"column":9},"end":{"line":219,"column":50}},"138":{"start":{"line":222,"column":5},"end":{"line":225,"column":6}},"139":{"start":{"line":223,"column":9},"end":{"line":223,"column":41}},"140":{"start":{"line":224,"column":9},"end":{"line":224,"column":50}},"141":{"start":{"line":227,"column":5},"end":{"line":230,"column":6}},"142":{"start":{"line":228,"column":9},"end":{"line":228,"column":44}},"143":{"start":{"line":229,"column":9},"end":{"line":229,"column":50}},"144":{"start":{"line":246,"column":5},"end":{"line":246,"column":39}},"145":{"start":{"line":262,"column":5},"end":{"line":262,"column":47}},"146":{"start":{"line":266,"column":1},"end":{"line":266,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function (Math) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var Hasher = C_lib.Hasher;","\t    var C_algo = C.algo;","","\t    // Constants table","\t    var T = [];","","\t    // Compute constants","\t    (function () {","\t        for (var i = 0; i < 64; i++) {","\t            T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;","\t        }","\t    }());","","\t    /**","\t     * MD5 hash algorithm.","\t     */","\t    var MD5 = C_algo.MD5 = Hasher.extend({","\t        _doReset: function () {","\t            this._hash = new WordArray.init([","\t                0x67452301, 0xefcdab89,","\t                0x98badcfe, 0x10325476","\t            ]);","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Swap endian","\t            for (var i = 0; i < 16; i++) {","\t                // Shortcuts","\t                var offset_i = offset + i;","\t                var M_offset_i = M[offset_i];","","\t                M[offset_i] = (","\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |","\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)","\t                );","\t            }","","\t            // Shortcuts","\t            var H = this._hash.words;","","\t            var M_offset_0  = M[offset + 0];","\t            var M_offset_1  = M[offset + 1];","\t            var M_offset_2  = M[offset + 2];","\t            var M_offset_3  = M[offset + 3];","\t            var M_offset_4  = M[offset + 4];","\t            var M_offset_5  = M[offset + 5];","\t            var M_offset_6  = M[offset + 6];","\t            var M_offset_7  = M[offset + 7];","\t            var M_offset_8  = M[offset + 8];","\t            var M_offset_9  = M[offset + 9];","\t            var M_offset_10 = M[offset + 10];","\t            var M_offset_11 = M[offset + 11];","\t            var M_offset_12 = M[offset + 12];","\t            var M_offset_13 = M[offset + 13];","\t            var M_offset_14 = M[offset + 14];","\t            var M_offset_15 = M[offset + 15];","","\t            // Working varialbes","\t            var a = H[0];","\t            var b = H[1];","\t            var c = H[2];","\t            var d = H[3];","","\t            // Computation","\t            a = FF(a, b, c, d, M_offset_0,  7,  T[0]);","\t            d = FF(d, a, b, c, M_offset_1,  12, T[1]);","\t            c = FF(c, d, a, b, M_offset_2,  17, T[2]);","\t            b = FF(b, c, d, a, M_offset_3,  22, T[3]);","\t            a = FF(a, b, c, d, M_offset_4,  7,  T[4]);","\t            d = FF(d, a, b, c, M_offset_5,  12, T[5]);","\t            c = FF(c, d, a, b, M_offset_6,  17, T[6]);","\t            b = FF(b, c, d, a, M_offset_7,  22, T[7]);","\t            a = FF(a, b, c, d, M_offset_8,  7,  T[8]);","\t            d = FF(d, a, b, c, M_offset_9,  12, T[9]);","\t            c = FF(c, d, a, b, M_offset_10, 17, T[10]);","\t            b = FF(b, c, d, a, M_offset_11, 22, T[11]);","\t            a = FF(a, b, c, d, M_offset_12, 7,  T[12]);","\t            d = FF(d, a, b, c, M_offset_13, 12, T[13]);","\t            c = FF(c, d, a, b, M_offset_14, 17, T[14]);","\t            b = FF(b, c, d, a, M_offset_15, 22, T[15]);","","\t            a = GG(a, b, c, d, M_offset_1,  5,  T[16]);","\t            d = GG(d, a, b, c, M_offset_6,  9,  T[17]);","\t            c = GG(c, d, a, b, M_offset_11, 14, T[18]);","\t            b = GG(b, c, d, a, M_offset_0,  20, T[19]);","\t            a = GG(a, b, c, d, M_offset_5,  5,  T[20]);","\t            d = GG(d, a, b, c, M_offset_10, 9,  T[21]);","\t            c = GG(c, d, a, b, M_offset_15, 14, T[22]);","\t            b = GG(b, c, d, a, M_offset_4,  20, T[23]);","\t            a = GG(a, b, c, d, M_offset_9,  5,  T[24]);","\t            d = GG(d, a, b, c, M_offset_14, 9,  T[25]);","\t            c = GG(c, d, a, b, M_offset_3,  14, T[26]);","\t            b = GG(b, c, d, a, M_offset_8,  20, T[27]);","\t            a = GG(a, b, c, d, M_offset_13, 5,  T[28]);","\t            d = GG(d, a, b, c, M_offset_2,  9,  T[29]);","\t            c = GG(c, d, a, b, M_offset_7,  14, T[30]);","\t            b = GG(b, c, d, a, M_offset_12, 20, T[31]);","","\t            a = HH(a, b, c, d, M_offset_5,  4,  T[32]);","\t            d = HH(d, a, b, c, M_offset_8,  11, T[33]);","\t            c = HH(c, d, a, b, M_offset_11, 16, T[34]);","\t            b = HH(b, c, d, a, M_offset_14, 23, T[35]);","\t            a = HH(a, b, c, d, M_offset_1,  4,  T[36]);","\t            d = HH(d, a, b, c, M_offset_4,  11, T[37]);","\t            c = HH(c, d, a, b, M_offset_7,  16, T[38]);","\t            b = HH(b, c, d, a, M_offset_10, 23, T[39]);","\t            a = HH(a, b, c, d, M_offset_13, 4,  T[40]);","\t            d = HH(d, a, b, c, M_offset_0,  11, T[41]);","\t            c = HH(c, d, a, b, M_offset_3,  16, T[42]);","\t            b = HH(b, c, d, a, M_offset_6,  23, T[43]);","\t            a = HH(a, b, c, d, M_offset_9,  4,  T[44]);","\t            d = HH(d, a, b, c, M_offset_12, 11, T[45]);","\t            c = HH(c, d, a, b, M_offset_15, 16, T[46]);","\t            b = HH(b, c, d, a, M_offset_2,  23, T[47]);","","\t            a = II(a, b, c, d, M_offset_0,  6,  T[48]);","\t            d = II(d, a, b, c, M_offset_7,  10, T[49]);","\t            c = II(c, d, a, b, M_offset_14, 15, T[50]);","\t            b = II(b, c, d, a, M_offset_5,  21, T[51]);","\t            a = II(a, b, c, d, M_offset_12, 6,  T[52]);","\t            d = II(d, a, b, c, M_offset_3,  10, T[53]);","\t            c = II(c, d, a, b, M_offset_10, 15, T[54]);","\t            b = II(b, c, d, a, M_offset_1,  21, T[55]);","\t            a = II(a, b, c, d, M_offset_8,  6,  T[56]);","\t            d = II(d, a, b, c, M_offset_15, 10, T[57]);","\t            c = II(c, d, a, b, M_offset_6,  15, T[58]);","\t            b = II(b, c, d, a, M_offset_13, 21, T[59]);","\t            a = II(a, b, c, d, M_offset_4,  6,  T[60]);","\t            d = II(d, a, b, c, M_offset_11, 10, T[61]);","\t            c = II(c, d, a, b, M_offset_2,  15, T[62]);","\t            b = II(b, c, d, a, M_offset_9,  21, T[63]);","","\t            // Intermediate hash value","\t            H[0] = (H[0] + a) | 0;","\t            H[1] = (H[1] + b) | 0;","\t            H[2] = (H[2] + c) | 0;","\t            H[3] = (H[3] + d) | 0;","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","","\t            var nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);","\t            var nBitsTotalL = nBitsTotal;","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (","\t                (((nBitsTotalH << 8)  | (nBitsTotalH >>> 24)) & 0x00ff00ff) |","\t                (((nBitsTotalH << 24) | (nBitsTotalH >>> 8))  & 0xff00ff00)","\t            );","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (","\t                (((nBitsTotalL << 8)  | (nBitsTotalL >>> 24)) & 0x00ff00ff) |","\t                (((nBitsTotalL << 24) | (nBitsTotalL >>> 8))  & 0xff00ff00)","\t            );","","\t            data.sigBytes = (dataWords.length + 1) * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Shortcuts","\t            var hash = this._hash;","\t            var H = hash.words;","","\t            // Swap endian","\t            for (var i = 0; i < 4; i++) {","\t                // Shortcut","\t                var H_i = H[i];","","\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |","\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);","\t            }","","\t            // Return final computed hash","\t            return hash;","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","\t            clone._hash = this._hash.clone();","","\t            return clone;","\t        }","\t    });","","\t    function FF(a, b, c, d, x, s, t) {","\t        var n = a + ((b & c) | (~b & d)) + x + t;","\t        return ((n << s) | (n >>> (32 - s))) + b;","\t    }","","\t    function GG(a, b, c, d, x, s, t) {","\t        var n = a + ((b & d) | (c & ~d)) + x + t;","\t        return ((n << s) | (n >>> (32 - s))) + b;","\t    }","","\t    function HH(a, b, c, d, x, s, t) {","\t        var n = a + (b ^ c ^ d) + x + t;","\t        return ((n << s) | (n >>> (32 - s))) + b;","\t    }","","\t    function II(a, b, c, d, x, s, t) {","\t        var n = a + (c ^ (b | ~d)) + x + t;","\t        return ((n << s) | (n >>> (32 - s))) + b;","\t    }","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.MD5('message');","\t     *     var hash = CryptoJS.MD5(wordArray);","\t     */","\t    C.MD5 = Hasher._createHelper(MD5);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacMD5(message, key);","\t     */","\t    C.HmacMD5 = Hasher._createHmacHelper(MD5);","\t}(Math));","","","\treturn CryptoJS.MD5;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"25":1,"28":1,"29":1,"30":64,"37":1,"39":0,"47":0,"49":0,"50":0,"52":0,"59":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"79":0,"80":0,"81":0,"82":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"154":0,"155":0,"156":0,"157":0,"162":0,"163":0,"165":0,"166":0,"169":0,"171":0,"172":0,"173":0,"177":0,"182":0,"185":0,"188":0,"189":0,"192":0,"194":0,"196":0,"201":0,"205":0,"206":0,"208":0,"212":1,"213":0,"214":0,"217":1,"218":0,"219":0,"222":1,"223":0,"224":0,"227":1,"228":0,"229":0,"246":1,"262":1,"266":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha1.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha1.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":1,"60":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":31,"loc":{"start":{"line":31,"column":19},"end":{"line":31,"column":31}}},"5":{"name":"(anonymous_5)","line":39,"loc":{"start":{"line":39,"column":26},"end":{"line":39,"column":47}}},"6":{"name":"(anonymous_6)","line":85,"loc":{"start":{"line":85,"column":22},"end":{"line":85,"column":34}}},"7":{"name":"(anonymous_7)","line":106,"loc":{"start":{"line":106,"column":16},"end":{"line":106,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":150,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":145,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":16}},"14":{"start":{"line":30,"column":5},"end":{"line":112,"column":8}},"15":{"start":{"line":32,"column":13},"end":{"line":36,"column":16}},"16":{"start":{"line":41,"column":13},"end":{"line":41,"column":38}},"17":{"start":{"line":44,"column":13},"end":{"line":44,"column":26}},"18":{"start":{"line":45,"column":13},"end":{"line":45,"column":26}},"19":{"start":{"line":46,"column":13},"end":{"line":46,"column":26}},"20":{"start":{"line":47,"column":13},"end":{"line":47,"column":26}},"21":{"start":{"line":48,"column":13},"end":{"line":48,"column":26}},"22":{"start":{"line":51,"column":13},"end":{"line":75,"column":14}},"23":{"start":{"line":52,"column":17},"end":{"line":57,"column":18}},"24":{"start":{"line":53,"column":21},"end":{"line":53,"column":46}},"25":{"start":{"line":55,"column":21},"end":{"line":55,"column":73}},"26":{"start":{"line":56,"column":21},"end":{"line":56,"column":50}},"27":{"start":{"line":59,"column":17},"end":{"line":59,"column":60}},"28":{"start":{"line":60,"column":17},"end":{"line":68,"column":18}},"29":{"start":{"line":61,"column":21},"end":{"line":61,"column":60}},"30":{"start":{"line":62,"column":24},"end":{"line":68,"column":18}},"31":{"start":{"line":63,"column":21},"end":{"line":63,"column":51}},"32":{"start":{"line":64,"column":24},"end":{"line":68,"column":18}},"33":{"start":{"line":65,"column":21},"end":{"line":65,"column":69}},"34":{"start":{"line":67,"column":21},"end":{"line":67,"column":51}},"35":{"start":{"line":70,"column":17},"end":{"line":70,"column":23}},"36":{"start":{"line":71,"column":17},"end":{"line":71,"column":23}},"37":{"start":{"line":72,"column":17},"end":{"line":72,"column":43}},"38":{"start":{"line":73,"column":17},"end":{"line":73,"column":23}},"39":{"start":{"line":74,"column":17},"end":{"line":74,"column":23}},"40":{"start":{"line":78,"column":13},"end":{"line":78,"column":35}},"41":{"start":{"line":79,"column":13},"end":{"line":79,"column":35}},"42":{"start":{"line":80,"column":13},"end":{"line":80,"column":35}},"43":{"start":{"line":81,"column":13},"end":{"line":81,"column":35}},"44":{"start":{"line":82,"column":13},"end":{"line":82,"column":35}},"45":{"start":{"line":87,"column":13},"end":{"line":87,"column":35}},"46":{"start":{"line":88,"column":13},"end":{"line":88,"column":40}},"47":{"start":{"line":90,"column":13},"end":{"line":90,"column":51}},"48":{"start":{"line":91,"column":13},"end":{"line":91,"column":47}},"49":{"start":{"line":94,"column":13},"end":{"line":94,"column":73}},"50":{"start":{"line":95,"column":13},"end":{"line":95,"column":100}},"51":{"start":{"line":96,"column":13},"end":{"line":96,"column":74}},"52":{"start":{"line":97,"column":13},"end":{"line":97,"column":50}},"53":{"start":{"line":100,"column":13},"end":{"line":100,"column":29}},"54":{"start":{"line":103,"column":13},"end":{"line":103,"column":31}},"55":{"start":{"line":107,"column":13},"end":{"line":107,"column":49}},"56":{"start":{"line":108,"column":13},"end":{"line":108,"column":46}},"57":{"start":{"line":110,"column":13},"end":{"line":110,"column":26}},"58":{"start":{"line":128,"column":5},"end":{"line":128,"column":41}},"59":{"start":{"line":144,"column":5},"end":{"line":144,"column":49}},"60":{"start":{"line":148,"column":1},"end":{"line":148,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":52,"type":"if","locations":[{"start":{"line":52,"column":17},"end":{"line":52,"column":17}},{"start":{"line":52,"column":17},"end":{"line":52,"column":17}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":17},"end":{"line":60,"column":17}},{"start":{"line":60,"column":17},"end":{"line":60,"column":17}}]},"6":{"line":62,"type":"if","locations":[{"start":{"line":62,"column":24},"end":{"line":62,"column":24}},{"start":{"line":62,"column":24},"end":{"line":62,"column":24}}]},"7":{"line":64,"type":"if","locations":[{"start":{"line":64,"column":24},"end":{"line":64,"column":24}},{"start":{"line":64,"column":24},"end":{"line":64,"column":24}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var Hasher = C_lib.Hasher;","\t    var C_algo = C.algo;","","\t    // Reusable object","\t    var W = [];","","\t    /**","\t     * SHA-1 hash algorithm.","\t     */","\t    var SHA1 = C_algo.SHA1 = Hasher.extend({","\t        _doReset: function () {","\t            this._hash = new WordArray.init([","\t                0x67452301, 0xefcdab89,","\t                0x98badcfe, 0x10325476,","\t                0xc3d2e1f0","\t            ]);","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcut","\t            var H = this._hash.words;","","\t            // Working variables","\t            var a = H[0];","\t            var b = H[1];","\t            var c = H[2];","\t            var d = H[3];","\t            var e = H[4];","","\t            // Computation","\t            for (var i = 0; i < 80; i++) {","\t                if (i < 16) {","\t                    W[i] = M[offset + i] | 0;","\t                } else {","\t                    var n = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16];","\t                    W[i] = (n << 1) | (n >>> 31);","\t                }","","\t                var t = ((a << 5) | (a >>> 27)) + e + W[i];","\t                if (i < 20) {","\t                    t += ((b & c) | (~b & d)) + 0x5a827999;","\t                } else if (i < 40) {","\t                    t += (b ^ c ^ d) + 0x6ed9eba1;","\t                } else if (i < 60) {","\t                    t += ((b & c) | (b & d) | (c & d)) - 0x70e44324;","\t                } else /* if (i < 80) */ {","\t                    t += (b ^ c ^ d) - 0x359d3e2a;","\t                }","","\t                e = d;","\t                d = c;","\t                c = (b << 30) | (b >>> 2);","\t                b = a;","\t                a = t;","\t            }","","\t            // Intermediate hash value","\t            H[0] = (H[0] + a) | 0;","\t            H[1] = (H[1] + b) | 0;","\t            H[2] = (H[2] + c) | 0;","\t            H[3] = (H[3] + d) | 0;","\t            H[4] = (H[4] + e) | 0;","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;","\t            data.sigBytes = dataWords.length * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Return final computed hash","\t            return this._hash;","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","\t            clone._hash = this._hash.clone();","","\t            return clone;","\t        }","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA1('message');","\t     *     var hash = CryptoJS.SHA1(wordArray);","\t     */","\t    C.SHA1 = Hasher._createHelper(SHA1);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA1(message, key);","\t     */","\t    C.HmacSHA1 = Hasher._createHmacHelper(SHA1);","\t}());","","","\treturn CryptoJS.SHA1;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"25":1,"30":1,"32":0,"41":0,"44":0,"45":0,"46":0,"47":0,"48":0,"51":0,"52":0,"53":0,"55":0,"56":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"67":0,"70":0,"71":0,"72":0,"73":0,"74":0,"78":0,"79":0,"80":0,"81":0,"82":0,"87":0,"88":0,"90":0,"91":0,"94":0,"95":0,"96":0,"97":0,"100":0,"103":0,"107":0,"108":0,"110":0,"128":1,"144":1,"148":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha256.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha256.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":310,"18":310,"19":1118,"20":246,"21":64,"22":1,"23":72,"24":1,"25":1,"26":1,"27":310,"28":64,"29":8,"30":64,"31":64,"32":310,"33":1,"34":1,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":1,"90":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[246,872],"5":[64,246],"6":[8,56],"7":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":310,"6":72,"7":0,"8":0,"9":0,"10":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":6},"end":{"line":29,"column":18}}},"5":{"name":"isPrime","line":30,"loc":{"start":{"line":30,"column":9},"end":{"line":30,"column":29}}},"6":{"name":"getFractionalBits","line":41,"loc":{"start":{"line":41,"column":9},"end":{"line":41,"column":39}}},"7":{"name":"(anonymous_7)","line":68,"loc":{"start":{"line":68,"column":19},"end":{"line":68,"column":31}}},"8":{"name":"(anonymous_8)","line":72,"loc":{"start":{"line":72,"column":26},"end":{"line":72,"column":47}}},"9":{"name":"(anonymous_9)","line":134,"loc":{"start":{"line":134,"column":22},"end":{"line":134,"column":34}}},"10":{"name":"(anonymous_10)","line":155,"loc":{"start":{"line":155,"column":16},"end":{"line":155,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":199,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":194,"column":10}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":16}},"14":{"start":{"line":26,"column":5},"end":{"line":26,"column":16}},"15":{"start":{"line":29,"column":5},"end":{"line":59,"column":10}},"16":{"start":{"line":30,"column":9},"end":{"line":39,"column":10}},"17":{"start":{"line":31,"column":13},"end":{"line":31,"column":38}},"18":{"start":{"line":32,"column":13},"end":{"line":36,"column":14}},"19":{"start":{"line":33,"column":17},"end":{"line":35,"column":18}},"20":{"start":{"line":34,"column":21},"end":{"line":34,"column":34}},"21":{"start":{"line":38,"column":13},"end":{"line":38,"column":25}},"22":{"start":{"line":41,"column":9},"end":{"line":43,"column":10}},"23":{"start":{"line":42,"column":13},"end":{"line":42,"column":54}},"24":{"start":{"line":45,"column":9},"end":{"line":45,"column":19}},"25":{"start":{"line":46,"column":9},"end":{"line":46,"column":24}},"26":{"start":{"line":47,"column":9},"end":{"line":58,"column":10}},"27":{"start":{"line":48,"column":13},"end":{"line":55,"column":14}},"28":{"start":{"line":49,"column":17},"end":{"line":51,"column":18}},"29":{"start":{"line":50,"column":21},"end":{"line":50,"column":71}},"30":{"start":{"line":52,"column":17},"end":{"line":52,"column":67}},"31":{"start":{"line":54,"column":17},"end":{"line":54,"column":26}},"32":{"start":{"line":57,"column":13},"end":{"line":57,"column":17}},"33":{"start":{"line":62,"column":5},"end":{"line":62,"column":16}},"34":{"start":{"line":67,"column":5},"end":{"line":161,"column":8}},"35":{"start":{"line":69,"column":13},"end":{"line":69,"column":57}},"36":{"start":{"line":74,"column":13},"end":{"line":74,"column":38}},"37":{"start":{"line":77,"column":13},"end":{"line":77,"column":26}},"38":{"start":{"line":78,"column":13},"end":{"line":78,"column":26}},"39":{"start":{"line":79,"column":13},"end":{"line":79,"column":26}},"40":{"start":{"line":80,"column":13},"end":{"line":80,"column":26}},"41":{"start":{"line":81,"column":13},"end":{"line":81,"column":26}},"42":{"start":{"line":82,"column":13},"end":{"line":82,"column":26}},"43":{"start":{"line":83,"column":13},"end":{"line":83,"column":26}},"44":{"start":{"line":84,"column":13},"end":{"line":84,"column":26}},"45":{"start":{"line":87,"column":13},"end":{"line":121,"column":14}},"46":{"start":{"line":88,"column":17},"end":{"line":102,"column":18}},"47":{"start":{"line":89,"column":21},"end":{"line":89,"column":46}},"48":{"start":{"line":91,"column":21},"end":{"line":91,"column":45}},"49":{"start":{"line":92,"column":21},"end":{"line":94,"column":52}},"50":{"start":{"line":96,"column":21},"end":{"line":96,"column":44}},"51":{"start":{"line":97,"column":21},"end":{"line":99,"column":53}},"52":{"start":{"line":101,"column":21},"end":{"line":101,"column":67}},"53":{"start":{"line":104,"column":17},"end":{"line":104,"column":46}},"54":{"start":{"line":105,"column":17},"end":{"line":105,"column":55}},"55":{"start":{"line":107,"column":17},"end":{"line":107,"column":108}},"56":{"start":{"line":108,"column":17},"end":{"line":108,"column":108}},"57":{"start":{"line":110,"column":17},"end":{"line":110,"column":56}},"58":{"start":{"line":111,"column":17},"end":{"line":111,"column":39}},"59":{"start":{"line":113,"column":17},"end":{"line":113,"column":23}},"60":{"start":{"line":114,"column":17},"end":{"line":114,"column":23}},"61":{"start":{"line":115,"column":17},"end":{"line":115,"column":23}},"62":{"start":{"line":116,"column":17},"end":{"line":116,"column":34}},"63":{"start":{"line":117,"column":17},"end":{"line":117,"column":23}},"64":{"start":{"line":118,"column":17},"end":{"line":118,"column":23}},"65":{"start":{"line":119,"column":17},"end":{"line":119,"column":23}},"66":{"start":{"line":120,"column":17},"end":{"line":120,"column":35}},"67":{"start":{"line":124,"column":13},"end":{"line":124,"column":35}},"68":{"start":{"line":125,"column":13},"end":{"line":125,"column":35}},"69":{"start":{"line":126,"column":13},"end":{"line":126,"column":35}},"70":{"start":{"line":127,"column":13},"end":{"line":127,"column":35}},"71":{"start":{"line":128,"column":13},"end":{"line":128,"column":35}},"72":{"start":{"line":129,"column":13},"end":{"line":129,"column":35}},"73":{"start":{"line":130,"column":13},"end":{"line":130,"column":35}},"74":{"start":{"line":131,"column":13},"end":{"line":131,"column":35}},"75":{"start":{"line":136,"column":13},"end":{"line":136,"column":35}},"76":{"start":{"line":137,"column":13},"end":{"line":137,"column":40}},"77":{"start":{"line":139,"column":13},"end":{"line":139,"column":51}},"78":{"start":{"line":140,"column":13},"end":{"line":140,"column":47}},"79":{"start":{"line":143,"column":13},"end":{"line":143,"column":73}},"80":{"start":{"line":144,"column":13},"end":{"line":144,"column":100}},"81":{"start":{"line":145,"column":13},"end":{"line":145,"column":74}},"82":{"start":{"line":146,"column":13},"end":{"line":146,"column":50}},"83":{"start":{"line":149,"column":13},"end":{"line":149,"column":29}},"84":{"start":{"line":152,"column":13},"end":{"line":152,"column":31}},"85":{"start":{"line":156,"column":13},"end":{"line":156,"column":49}},"86":{"start":{"line":157,"column":13},"end":{"line":157,"column":46}},"87":{"start":{"line":159,"column":13},"end":{"line":159,"column":26}},"88":{"start":{"line":177,"column":5},"end":{"line":177,"column":45}},"89":{"start":{"line":193,"column":5},"end":{"line":193,"column":53}},"90":{"start":{"line":197,"column":1},"end":{"line":197,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":33,"type":"if","locations":[{"start":{"line":33,"column":17},"end":{"line":33,"column":17}},{"start":{"line":33,"column":17},"end":{"line":33,"column":17}}]},"5":{"line":48,"type":"if","locations":[{"start":{"line":48,"column":13},"end":{"line":48,"column":13}},{"start":{"line":48,"column":13},"end":{"line":48,"column":13}}]},"6":{"line":49,"type":"if","locations":[{"start":{"line":49,"column":17},"end":{"line":49,"column":17}},{"start":{"line":49,"column":17},"end":{"line":49,"column":17}}]},"7":{"line":88,"type":"if","locations":[{"start":{"line":88,"column":17},"end":{"line":88,"column":17}},{"start":{"line":88,"column":17},"end":{"line":88,"column":17}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function (Math) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var Hasher = C_lib.Hasher;","\t    var C_algo = C.algo;","","\t    // Initialization and round constants tables","\t    var H = [];","\t    var K = [];","","\t    // Compute constants","\t    (function () {","\t        function isPrime(n) {","\t            var sqrtN = Math.sqrt(n);","\t            for (var factor = 2; factor <= sqrtN; factor++) {","\t                if (!(n % factor)) {","\t                    return false;","\t                }","\t            }","","\t            return true;","\t        }","","\t        function getFractionalBits(n) {","\t            return ((n - (n | 0)) * 0x100000000) | 0;","\t        }","","\t        var n = 2;","\t        var nPrime = 0;","\t        while (nPrime < 64) {","\t            if (isPrime(n)) {","\t                if (nPrime < 8) {","\t                    H[nPrime] = getFractionalBits(Math.pow(n, 1 / 2));","\t                }","\t                K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3));","","\t                nPrime++;","\t            }","","\t            n++;","\t        }","\t    }());","","\t    // Reusable object","\t    var W = [];","","\t    /**","\t     * SHA-256 hash algorithm.","\t     */","\t    var SHA256 = C_algo.SHA256 = Hasher.extend({","\t        _doReset: function () {","\t            this._hash = new WordArray.init(H.slice(0));","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcut","\t            var H = this._hash.words;","","\t            // Working variables","\t            var a = H[0];","\t            var b = H[1];","\t            var c = H[2];","\t            var d = H[3];","\t            var e = H[4];","\t            var f = H[5];","\t            var g = H[6];","\t            var h = H[7];","","\t            // Computation","\t            for (var i = 0; i < 64; i++) {","\t                if (i < 16) {","\t                    W[i] = M[offset + i] | 0;","\t                } else {","\t                    var gamma0x = W[i - 15];","\t                    var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^","\t                                  ((gamma0x << 14) | (gamma0x >>> 18)) ^","\t                                   (gamma0x >>> 3);","","\t                    var gamma1x = W[i - 2];","\t                    var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^","\t                                  ((gamma1x << 13) | (gamma1x >>> 19)) ^","\t                                   (gamma1x >>> 10);","","\t                    W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];","\t                }","","\t                var ch  = (e & f) ^ (~e & g);","\t                var maj = (a & b) ^ (a & c) ^ (b & c);","","\t                var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));","\t                var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));","","\t                var t1 = h + sigma1 + ch + K[i] + W[i];","\t                var t2 = sigma0 + maj;","","\t                h = g;","\t                g = f;","\t                f = e;","\t                e = (d + t1) | 0;","\t                d = c;","\t                c = b;","\t                b = a;","\t                a = (t1 + t2) | 0;","\t            }","","\t            // Intermediate hash value","\t            H[0] = (H[0] + a) | 0;","\t            H[1] = (H[1] + b) | 0;","\t            H[2] = (H[2] + c) | 0;","\t            H[3] = (H[3] + d) | 0;","\t            H[4] = (H[4] + e) | 0;","\t            H[5] = (H[5] + f) | 0;","\t            H[6] = (H[6] + g) | 0;","\t            H[7] = (H[7] + h) | 0;","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = Math.floor(nBitsTotal / 0x100000000);","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = nBitsTotal;","\t            data.sigBytes = dataWords.length * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Return final computed hash","\t            return this._hash;","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","\t            clone._hash = this._hash.clone();","","\t            return clone;","\t        }","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA256('message');","\t     *     var hash = CryptoJS.SHA256(wordArray);","\t     */","\t    C.SHA256 = Hasher._createHelper(SHA256);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA256(message, key);","\t     */","\t    C.HmacSHA256 = Hasher._createHmacHelper(SHA256);","\t}(Math));","","","\treturn CryptoJS.SHA256;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"25":1,"26":1,"29":1,"30":1,"31":310,"32":310,"33":1118,"34":246,"38":64,"41":1,"42":72,"45":1,"46":1,"47":1,"48":310,"49":64,"50":8,"52":64,"54":64,"57":310,"62":1,"67":1,"69":0,"74":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"87":0,"88":0,"89":0,"91":0,"92":0,"96":0,"97":0,"101":0,"104":0,"105":0,"107":0,"108":0,"110":0,"111":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"136":0,"137":0,"139":0,"140":0,"143":0,"144":0,"145":0,"146":0,"149":0,"152":0,"156":0,"157":0,"159":0,"177":1,"193":1,"197":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha224.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha224.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":0,"15":0,"16":0,"17":0,"18":1,"19":1,"20":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":19},"end":{"line":28,"column":31}}},"5":{"name":"(anonymous_5)","line":35,"loc":{"start":{"line":35,"column":22},"end":{"line":35,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":80,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":77}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":42}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":75,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":25}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":32}},"13":{"start":{"line":27,"column":5},"end":{"line":42,"column":8}},"14":{"start":{"line":29,"column":13},"end":{"line":32,"column":16}},"15":{"start":{"line":36,"column":13},"end":{"line":36,"column":54}},"16":{"start":{"line":38,"column":13},"end":{"line":38,"column":32}},"17":{"start":{"line":40,"column":13},"end":{"line":40,"column":25}},"18":{"start":{"line":58,"column":5},"end":{"line":58,"column":45}},"19":{"start":{"line":74,"column":5},"end":{"line":74,"column":53}},"20":{"start":{"line":78,"column":1},"end":{"line":78,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha256\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./sha256\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var C_algo = C.algo;","\t    var SHA256 = C_algo.SHA256;","","\t    /**","\t     * SHA-224 hash algorithm.","\t     */","\t    var SHA224 = C_algo.SHA224 = SHA256.extend({","\t        _doReset: function () {","\t            this._hash = new WordArray.init([","\t                0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,","\t                0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4","\t            ]);","\t        },","","\t        _doFinalize: function () {","\t            var hash = SHA256._doFinalize.call(this);","","\t            hash.sigBytes -= 4;","","\t            return hash;","\t        }","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA224('message');","\t     *     var hash = CryptoJS.SHA224(wordArray);","\t     */","\t    C.SHA224 = SHA256._createHelper(SHA224);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA224(message, key);","\t     */","\t    C.HmacSHA224 = SHA256._createHmacHelper(SHA224);","\t}());","","","\treturn CryptoJS.SHA224;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"27":1,"29":0,"36":0,"38":0,"40":0,"58":1,"74":1,"78":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha512.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha512.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":160,"17":1,"18":1,"19":1,"20":1,"21":80,"22":1,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"156":0,"157":0,"158":0,"159":0,"160":0,"161":1,"162":1,"163":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0],"17":[0,0],"18":[0,0],"19":[0,0],"20":[0,0],"21":[0,0],"22":[0,0]},"f":{"1":1,"2":1,"3":1,"4":160,"5":1,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"X64Word_create","line":26,"loc":{"start":{"line":26,"column":5},"end":{"line":26,"column":31}}},"5":{"name":"(anonymous_5)","line":76,"loc":{"start":{"line":76,"column":6},"end":{"line":76,"column":18}}},"6":{"name":"(anonymous_6)","line":86,"loc":{"start":{"line":86,"column":19},"end":{"line":86,"column":31}}},"7":{"name":"(anonymous_7)","line":95,"loc":{"start":{"line":95,"column":26},"end":{"line":95,"column":47}}},"8":{"name":"(anonymous_8)","line":253,"loc":{"start":{"line":253,"column":22},"end":{"line":253,"column":34}}},"9":{"name":"(anonymous_9)","line":277,"loc":{"start":{"line":277,"column":16},"end":{"line":277,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":323,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":79}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":44}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":318,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":31}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":23}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":30}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":40}},"14":{"start":{"line":24,"column":5},"end":{"line":24,"column":25}},"15":{"start":{"line":26,"column":5},"end":{"line":28,"column":6}},"16":{"start":{"line":27,"column":9},"end":{"line":27,"column":57}},"17":{"start":{"line":31,"column":5},"end":{"line":72,"column":7}},"18":{"start":{"line":75,"column":5},"end":{"line":75,"column":16}},"19":{"start":{"line":76,"column":5},"end":{"line":80,"column":10}},"20":{"start":{"line":77,"column":9},"end":{"line":79,"column":10}},"21":{"start":{"line":78,"column":13},"end":{"line":78,"column":37}},"22":{"start":{"line":85,"column":5},"end":{"line":285,"column":8}},"23":{"start":{"line":87,"column":13},"end":{"line":92,"column":16}},"24":{"start":{"line":97,"column":13},"end":{"line":97,"column":38}},"25":{"start":{"line":99,"column":13},"end":{"line":99,"column":27}},"26":{"start":{"line":100,"column":13},"end":{"line":100,"column":27}},"27":{"start":{"line":101,"column":13},"end":{"line":101,"column":27}},"28":{"start":{"line":102,"column":13},"end":{"line":102,"column":27}},"29":{"start":{"line":103,"column":13},"end":{"line":103,"column":27}},"30":{"start":{"line":104,"column":13},"end":{"line":104,"column":27}},"31":{"start":{"line":105,"column":13},"end":{"line":105,"column":27}},"32":{"start":{"line":106,"column":13},"end":{"line":106,"column":27}},"33":{"start":{"line":108,"column":13},"end":{"line":108,"column":31}},"34":{"start":{"line":109,"column":13},"end":{"line":109,"column":30}},"35":{"start":{"line":110,"column":13},"end":{"line":110,"column":31}},"36":{"start":{"line":111,"column":13},"end":{"line":111,"column":30}},"37":{"start":{"line":112,"column":13},"end":{"line":112,"column":31}},"38":{"start":{"line":113,"column":13},"end":{"line":113,"column":30}},"39":{"start":{"line":114,"column":13},"end":{"line":114,"column":31}},"40":{"start":{"line":115,"column":13},"end":{"line":115,"column":30}},"41":{"start":{"line":116,"column":13},"end":{"line":116,"column":31}},"42":{"start":{"line":117,"column":13},"end":{"line":117,"column":30}},"43":{"start":{"line":118,"column":13},"end":{"line":118,"column":31}},"44":{"start":{"line":119,"column":13},"end":{"line":119,"column":30}},"45":{"start":{"line":120,"column":13},"end":{"line":120,"column":31}},"46":{"start":{"line":121,"column":13},"end":{"line":121,"column":30}},"47":{"start":{"line":122,"column":13},"end":{"line":122,"column":31}},"48":{"start":{"line":123,"column":13},"end":{"line":123,"column":30}},"49":{"start":{"line":126,"column":13},"end":{"line":126,"column":26}},"50":{"start":{"line":127,"column":13},"end":{"line":127,"column":26}},"51":{"start":{"line":128,"column":13},"end":{"line":128,"column":26}},"52":{"start":{"line":129,"column":13},"end":{"line":129,"column":26}},"53":{"start":{"line":130,"column":13},"end":{"line":130,"column":26}},"54":{"start":{"line":131,"column":13},"end":{"line":131,"column":26}},"55":{"start":{"line":132,"column":13},"end":{"line":132,"column":26}},"56":{"start":{"line":133,"column":13},"end":{"line":133,"column":26}},"57":{"start":{"line":134,"column":13},"end":{"line":134,"column":26}},"58":{"start":{"line":135,"column":13},"end":{"line":135,"column":26}},"59":{"start":{"line":136,"column":13},"end":{"line":136,"column":26}},"60":{"start":{"line":137,"column":13},"end":{"line":137,"column":26}},"61":{"start":{"line":138,"column":13},"end":{"line":138,"column":26}},"62":{"start":{"line":139,"column":13},"end":{"line":139,"column":26}},"63":{"start":{"line":140,"column":13},"end":{"line":140,"column":26}},"64":{"start":{"line":141,"column":13},"end":{"line":141,"column":26}},"65":{"start":{"line":144,"column":13},"end":{"line":232,"column":14}},"66":{"start":{"line":146,"column":17},"end":{"line":146,"column":31}},"67":{"start":{"line":149,"column":17},"end":{"line":185,"column":18}},"68":{"start":{"line":150,"column":21},"end":{"line":150,"column":67}},"69":{"start":{"line":151,"column":21},"end":{"line":151,"column":67}},"70":{"start":{"line":154,"column":21},"end":{"line":154,"column":46}},"71":{"start":{"line":155,"column":21},"end":{"line":155,"column":49}},"72":{"start":{"line":156,"column":21},"end":{"line":156,"column":48}},"73":{"start":{"line":157,"column":21},"end":{"line":157,"column":133}},"74":{"start":{"line":158,"column":21},"end":{"line":158,"column":154}},"75":{"start":{"line":161,"column":21},"end":{"line":161,"column":45}},"76":{"start":{"line":162,"column":21},"end":{"line":162,"column":49}},"77":{"start":{"line":163,"column":21},"end":{"line":163,"column":48}},"78":{"start":{"line":164,"column":21},"end":{"line":164,"column":134}},"79":{"start":{"line":165,"column":21},"end":{"line":165,"column":155}},"80":{"start":{"line":168,"column":21},"end":{"line":168,"column":41}},"81":{"start":{"line":169,"column":21},"end":{"line":169,"column":41}},"82":{"start":{"line":170,"column":21},"end":{"line":170,"column":40}},"83":{"start":{"line":172,"column":21},"end":{"line":172,"column":43}},"84":{"start":{"line":173,"column":21},"end":{"line":173,"column":43}},"85":{"start":{"line":174,"column":21},"end":{"line":174,"column":42}},"86":{"start":{"line":176,"column":21},"end":{"line":176,"column":46}},"87":{"start":{"line":177,"column":21},"end":{"line":177,"column":88}},"88":{"start":{"line":178,"column":21},"end":{"line":178,"column":45}},"89":{"start":{"line":179,"column":21},"end":{"line":179,"column":87}},"90":{"start":{"line":180,"column":21},"end":{"line":180,"column":43}},"91":{"start":{"line":181,"column":21},"end":{"line":181,"column":83}},"92":{"start":{"line":183,"column":21},"end":{"line":183,"column":35}},"93":{"start":{"line":184,"column":21},"end":{"line":184,"column":35}},"94":{"start":{"line":187,"column":17},"end":{"line":187,"column":51}},"95":{"start":{"line":188,"column":17},"end":{"line":188,"column":51}},"96":{"start":{"line":189,"column":17},"end":{"line":189,"column":62}},"97":{"start":{"line":190,"column":17},"end":{"line":190,"column":62}},"98":{"start":{"line":192,"column":17},"end":{"line":192,"column":115}},"99":{"start":{"line":193,"column":17},"end":{"line":193,"column":115}},"100":{"start":{"line":194,"column":17},"end":{"line":194,"column":115}},"101":{"start":{"line":195,"column":17},"end":{"line":195,"column":115}},"102":{"start":{"line":198,"column":17},"end":{"line":198,"column":32}},"103":{"start":{"line":199,"column":17},"end":{"line":199,"column":35}},"104":{"start":{"line":200,"column":17},"end":{"line":200,"column":34}},"105":{"start":{"line":202,"column":17},"end":{"line":202,"column":40}},"106":{"start":{"line":203,"column":17},"end":{"line":203,"column":77}},"107":{"start":{"line":204,"column":17},"end":{"line":204,"column":37}},"108":{"start":{"line":205,"column":17},"end":{"line":205,"column":75}},"109":{"start":{"line":206,"column":17},"end":{"line":206,"column":37}},"110":{"start":{"line":207,"column":17},"end":{"line":207,"column":75}},"111":{"start":{"line":208,"column":17},"end":{"line":208,"column":37}},"112":{"start":{"line":209,"column":17},"end":{"line":209,"column":75}},"113":{"start":{"line":212,"column":17},"end":{"line":212,"column":42}},"114":{"start":{"line":213,"column":17},"end":{"line":213,"column":84}},"115":{"start":{"line":216,"column":17},"end":{"line":216,"column":25}},"116":{"start":{"line":217,"column":17},"end":{"line":217,"column":25}},"117":{"start":{"line":218,"column":17},"end":{"line":218,"column":25}},"118":{"start":{"line":219,"column":17},"end":{"line":219,"column":25}},"119":{"start":{"line":220,"column":17},"end":{"line":220,"column":25}},"120":{"start":{"line":221,"column":17},"end":{"line":221,"column":25}},"121":{"start":{"line":222,"column":17},"end":{"line":222,"column":37}},"122":{"start":{"line":223,"column":17},"end":{"line":223,"column":73}},"123":{"start":{"line":224,"column":17},"end":{"line":224,"column":25}},"124":{"start":{"line":225,"column":17},"end":{"line":225,"column":25}},"125":{"start":{"line":226,"column":17},"end":{"line":226,"column":25}},"126":{"start":{"line":227,"column":17},"end":{"line":227,"column":25}},"127":{"start":{"line":228,"column":17},"end":{"line":228,"column":25}},"128":{"start":{"line":229,"column":17},"end":{"line":229,"column":25}},"129":{"start":{"line":230,"column":17},"end":{"line":230,"column":38}},"130":{"start":{"line":231,"column":17},"end":{"line":231,"column":75}},"131":{"start":{"line":235,"column":13},"end":{"line":235,"column":40}},"132":{"start":{"line":236,"column":13},"end":{"line":236,"column":71}},"133":{"start":{"line":237,"column":13},"end":{"line":237,"column":40}},"134":{"start":{"line":238,"column":13},"end":{"line":238,"column":71}},"135":{"start":{"line":239,"column":13},"end":{"line":239,"column":40}},"136":{"start":{"line":240,"column":13},"end":{"line":240,"column":71}},"137":{"start":{"line":241,"column":13},"end":{"line":241,"column":40}},"138":{"start":{"line":242,"column":13},"end":{"line":242,"column":71}},"139":{"start":{"line":243,"column":13},"end":{"line":243,"column":40}},"140":{"start":{"line":244,"column":13},"end":{"line":244,"column":71}},"141":{"start":{"line":245,"column":13},"end":{"line":245,"column":40}},"142":{"start":{"line":246,"column":13},"end":{"line":246,"column":71}},"143":{"start":{"line":247,"column":13},"end":{"line":247,"column":40}},"144":{"start":{"line":248,"column":13},"end":{"line":248,"column":71}},"145":{"start":{"line":249,"column":13},"end":{"line":249,"column":40}},"146":{"start":{"line":250,"column":13},"end":{"line":250,"column":71}},"147":{"start":{"line":255,"column":13},"end":{"line":255,"column":35}},"148":{"start":{"line":256,"column":13},"end":{"line":256,"column":40}},"149":{"start":{"line":258,"column":13},"end":{"line":258,"column":51}},"150":{"start":{"line":259,"column":13},"end":{"line":259,"column":47}},"151":{"start":{"line":262,"column":13},"end":{"line":262,"column":73}},"152":{"start":{"line":263,"column":13},"end":{"line":263,"column":102}},"153":{"start":{"line":264,"column":13},"end":{"line":264,"column":76}},"154":{"start":{"line":265,"column":13},"end":{"line":265,"column":50}},"155":{"start":{"line":268,"column":13},"end":{"line":268,"column":29}},"156":{"start":{"line":271,"column":13},"end":{"line":271,"column":43}},"157":{"start":{"line":274,"column":13},"end":{"line":274,"column":25}},"158":{"start":{"line":278,"column":13},"end":{"line":278,"column":49}},"159":{"start":{"line":279,"column":13},"end":{"line":279,"column":46}},"160":{"start":{"line":281,"column":13},"end":{"line":281,"column":26}},"161":{"start":{"line":301,"column":5},"end":{"line":301,"column":45}},"162":{"start":{"line":317,"column":5},"end":{"line":317,"column":53}},"163":{"start":{"line":321,"column":1},"end":{"line":321,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":149,"type":"if","locations":[{"start":{"line":149,"column":17},"end":{"line":149,"column":17}},{"start":{"line":149,"column":17},"end":{"line":149,"column":17}}]},"5":{"line":177,"type":"cond-expr","locations":[{"start":{"line":177,"column":81},"end":{"line":177,"column":82}},{"start":{"line":177,"column":85},"end":{"line":177,"column":86}}]},"6":{"line":179,"type":"cond-expr","locations":[{"start":{"line":179,"column":80},"end":{"line":179,"column":81}},{"start":{"line":179,"column":84},"end":{"line":179,"column":85}}]},"7":{"line":181,"type":"cond-expr","locations":[{"start":{"line":181,"column":76},"end":{"line":181,"column":77}},{"start":{"line":181,"column":80},"end":{"line":181,"column":81}}]},"8":{"line":203,"type":"cond-expr","locations":[{"start":{"line":203,"column":70},"end":{"line":203,"column":71}},{"start":{"line":203,"column":74},"end":{"line":203,"column":75}}]},"9":{"line":205,"type":"cond-expr","locations":[{"start":{"line":205,"column":68},"end":{"line":205,"column":69}},{"start":{"line":205,"column":72},"end":{"line":205,"column":73}}]},"10":{"line":207,"type":"cond-expr","locations":[{"start":{"line":207,"column":68},"end":{"line":207,"column":69}},{"start":{"line":207,"column":72},"end":{"line":207,"column":73}}]},"11":{"line":209,"type":"cond-expr","locations":[{"start":{"line":209,"column":68},"end":{"line":209,"column":69}},{"start":{"line":209,"column":72},"end":{"line":209,"column":73}}]},"12":{"line":213,"type":"cond-expr","locations":[{"start":{"line":213,"column":77},"end":{"line":213,"column":78}},{"start":{"line":213,"column":81},"end":{"line":213,"column":82}}]},"13":{"line":223,"type":"cond-expr","locations":[{"start":{"line":223,"column":61},"end":{"line":223,"column":62}},{"start":{"line":223,"column":65},"end":{"line":223,"column":66}}]},"14":{"line":231,"type":"cond-expr","locations":[{"start":{"line":231,"column":63},"end":{"line":231,"column":64}},{"start":{"line":231,"column":67},"end":{"line":231,"column":68}}]},"15":{"line":236,"type":"cond-expr","locations":[{"start":{"line":236,"column":63},"end":{"line":236,"column":64}},{"start":{"line":236,"column":67},"end":{"line":236,"column":68}}]},"16":{"line":238,"type":"cond-expr","locations":[{"start":{"line":238,"column":63},"end":{"line":238,"column":64}},{"start":{"line":238,"column":67},"end":{"line":238,"column":68}}]},"17":{"line":240,"type":"cond-expr","locations":[{"start":{"line":240,"column":63},"end":{"line":240,"column":64}},{"start":{"line":240,"column":67},"end":{"line":240,"column":68}}]},"18":{"line":242,"type":"cond-expr","locations":[{"start":{"line":242,"column":63},"end":{"line":242,"column":64}},{"start":{"line":242,"column":67},"end":{"line":242,"column":68}}]},"19":{"line":244,"type":"cond-expr","locations":[{"start":{"line":244,"column":63},"end":{"line":244,"column":64}},{"start":{"line":244,"column":67},"end":{"line":244,"column":68}}]},"20":{"line":246,"type":"cond-expr","locations":[{"start":{"line":246,"column":63},"end":{"line":246,"column":64}},{"start":{"line":246,"column":67},"end":{"line":246,"column":68}}]},"21":{"line":248,"type":"cond-expr","locations":[{"start":{"line":248,"column":63},"end":{"line":248,"column":64}},{"start":{"line":248,"column":67},"end":{"line":248,"column":68}}]},"22":{"line":250,"type":"cond-expr","locations":[{"start":{"line":250,"column":63},"end":{"line":250,"column":64}},{"start":{"line":250,"column":67},"end":{"line":250,"column":68}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./x64-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Hasher = C_lib.Hasher;","\t    var C_x64 = C.x64;","\t    var X64Word = C_x64.Word;","\t    var X64WordArray = C_x64.WordArray;","\t    var C_algo = C.algo;","","\t    function X64Word_create() {","\t        return X64Word.create.apply(X64Word, arguments);","\t    }","","\t    // Constants","\t    var K = [","\t        X64Word_create(0x428a2f98, 0xd728ae22), X64Word_create(0x71374491, 0x23ef65cd),","\t        X64Word_create(0xb5c0fbcf, 0xec4d3b2f), X64Word_create(0xe9b5dba5, 0x8189dbbc),","\t        X64Word_create(0x3956c25b, 0xf348b538), X64Word_create(0x59f111f1, 0xb605d019),","\t        X64Word_create(0x923f82a4, 0xaf194f9b), X64Word_create(0xab1c5ed5, 0xda6d8118),","\t        X64Word_create(0xd807aa98, 0xa3030242), X64Word_create(0x12835b01, 0x45706fbe),","\t        X64Word_create(0x243185be, 0x4ee4b28c), X64Word_create(0x550c7dc3, 0xd5ffb4e2),","\t        X64Word_create(0x72be5d74, 0xf27b896f), X64Word_create(0x80deb1fe, 0x3b1696b1),","\t        X64Word_create(0x9bdc06a7, 0x25c71235), X64Word_create(0xc19bf174, 0xcf692694),","\t        X64Word_create(0xe49b69c1, 0x9ef14ad2), X64Word_create(0xefbe4786, 0x384f25e3),","\t        X64Word_create(0x0fc19dc6, 0x8b8cd5b5), X64Word_create(0x240ca1cc, 0x77ac9c65),","\t        X64Word_create(0x2de92c6f, 0x592b0275), X64Word_create(0x4a7484aa, 0x6ea6e483),","\t        X64Word_create(0x5cb0a9dc, 0xbd41fbd4), X64Word_create(0x76f988da, 0x831153b5),","\t        X64Word_create(0x983e5152, 0xee66dfab), X64Word_create(0xa831c66d, 0x2db43210),","\t        X64Word_create(0xb00327c8, 0x98fb213f), X64Word_create(0xbf597fc7, 0xbeef0ee4),","\t        X64Word_create(0xc6e00bf3, 0x3da88fc2), X64Word_create(0xd5a79147, 0x930aa725),","\t        X64Word_create(0x06ca6351, 0xe003826f), X64Word_create(0x14292967, 0x0a0e6e70),","\t        X64Word_create(0x27b70a85, 0x46d22ffc), X64Word_create(0x2e1b2138, 0x5c26c926),","\t        X64Word_create(0x4d2c6dfc, 0x5ac42aed), X64Word_create(0x53380d13, 0x9d95b3df),","\t        X64Word_create(0x650a7354, 0x8baf63de), X64Word_create(0x766a0abb, 0x3c77b2a8),","\t        X64Word_create(0x81c2c92e, 0x47edaee6), X64Word_create(0x92722c85, 0x1482353b),","\t        X64Word_create(0xa2bfe8a1, 0x4cf10364), X64Word_create(0xa81a664b, 0xbc423001),","\t        X64Word_create(0xc24b8b70, 0xd0f89791), X64Word_create(0xc76c51a3, 0x0654be30),","\t        X64Word_create(0xd192e819, 0xd6ef5218), X64Word_create(0xd6990624, 0x5565a910),","\t        X64Word_create(0xf40e3585, 0x5771202a), X64Word_create(0x106aa070, 0x32bbd1b8),","\t        X64Word_create(0x19a4c116, 0xb8d2d0c8), X64Word_create(0x1e376c08, 0x5141ab53),","\t        X64Word_create(0x2748774c, 0xdf8eeb99), X64Word_create(0x34b0bcb5, 0xe19b48a8),","\t        X64Word_create(0x391c0cb3, 0xc5c95a63), X64Word_create(0x4ed8aa4a, 0xe3418acb),","\t        X64Word_create(0x5b9cca4f, 0x7763e373), X64Word_create(0x682e6ff3, 0xd6b2b8a3),","\t        X64Word_create(0x748f82ee, 0x5defb2fc), X64Word_create(0x78a5636f, 0x43172f60),","\t        X64Word_create(0x84c87814, 0xa1f0ab72), X64Word_create(0x8cc70208, 0x1a6439ec),","\t        X64Word_create(0x90befffa, 0x23631e28), X64Word_create(0xa4506ceb, 0xde82bde9),","\t        X64Word_create(0xbef9a3f7, 0xb2c67915), X64Word_create(0xc67178f2, 0xe372532b),","\t        X64Word_create(0xca273ece, 0xea26619c), X64Word_create(0xd186b8c7, 0x21c0c207),","\t        X64Word_create(0xeada7dd6, 0xcde0eb1e), X64Word_create(0xf57d4f7f, 0xee6ed178),","\t        X64Word_create(0x06f067aa, 0x72176fba), X64Word_create(0x0a637dc5, 0xa2c898a6),","\t        X64Word_create(0x113f9804, 0xbef90dae), X64Word_create(0x1b710b35, 0x131c471b),","\t        X64Word_create(0x28db77f5, 0x23047d84), X64Word_create(0x32caab7b, 0x40c72493),","\t        X64Word_create(0x3c9ebe0a, 0x15c9bebc), X64Word_create(0x431d67c4, 0x9c100d4c),","\t        X64Word_create(0x4cc5d4be, 0xcb3e42b6), X64Word_create(0x597f299c, 0xfc657e2a),","\t        X64Word_create(0x5fcb6fab, 0x3ad6faec), X64Word_create(0x6c44198c, 0x4a475817)","\t    ];","","\t    // Reusable objects","\t    var W = [];","\t    (function () {","\t        for (var i = 0; i < 80; i++) {","\t            W[i] = X64Word_create();","\t        }","\t    }());","","\t    /**","\t     * SHA-512 hash algorithm.","\t     */","\t    var SHA512 = C_algo.SHA512 = Hasher.extend({","\t        _doReset: function () {","\t            this._hash = new X64WordArray.init([","\t                new X64Word.init(0x6a09e667, 0xf3bcc908), new X64Word.init(0xbb67ae85, 0x84caa73b),","\t                new X64Word.init(0x3c6ef372, 0xfe94f82b), new X64Word.init(0xa54ff53a, 0x5f1d36f1),","\t                new X64Word.init(0x510e527f, 0xade682d1), new X64Word.init(0x9b05688c, 0x2b3e6c1f),","\t                new X64Word.init(0x1f83d9ab, 0xfb41bd6b), new X64Word.init(0x5be0cd19, 0x137e2179)","\t            ]);","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcuts","\t            var H = this._hash.words;","","\t            var H0 = H[0];","\t            var H1 = H[1];","\t            var H2 = H[2];","\t            var H3 = H[3];","\t            var H4 = H[4];","\t            var H5 = H[5];","\t            var H6 = H[6];","\t            var H7 = H[7];","","\t            var H0h = H0.high;","\t            var H0l = H0.low;","\t            var H1h = H1.high;","\t            var H1l = H1.low;","\t            var H2h = H2.high;","\t            var H2l = H2.low;","\t            var H3h = H3.high;","\t            var H3l = H3.low;","\t            var H4h = H4.high;","\t            var H4l = H4.low;","\t            var H5h = H5.high;","\t            var H5l = H5.low;","\t            var H6h = H6.high;","\t            var H6l = H6.low;","\t            var H7h = H7.high;","\t            var H7l = H7.low;","","\t            // Working variables","\t            var ah = H0h;","\t            var al = H0l;","\t            var bh = H1h;","\t            var bl = H1l;","\t            var ch = H2h;","\t            var cl = H2l;","\t            var dh = H3h;","\t            var dl = H3l;","\t            var eh = H4h;","\t            var el = H4l;","\t            var fh = H5h;","\t            var fl = H5l;","\t            var gh = H6h;","\t            var gl = H6l;","\t            var hh = H7h;","\t            var hl = H7l;","","\t            // Rounds","\t            for (var i = 0; i < 80; i++) {","\t                // Shortcut","\t                var Wi = W[i];","","\t                // Extend message","\t                if (i < 16) {","\t                    var Wih = Wi.high = M[offset + i * 2]     | 0;","\t                    var Wil = Wi.low  = M[offset + i * 2 + 1] | 0;","\t                } else {","\t                    // Gamma0","\t                    var gamma0x  = W[i - 15];","\t                    var gamma0xh = gamma0x.high;","\t                    var gamma0xl = gamma0x.low;","\t                    var gamma0h  = ((gamma0xh >>> 1) | (gamma0xl << 31)) ^ ((gamma0xh >>> 8) | (gamma0xl << 24)) ^ (gamma0xh >>> 7);","\t                    var gamma0l  = ((gamma0xl >>> 1) | (gamma0xh << 31)) ^ ((gamma0xl >>> 8) | (gamma0xh << 24)) ^ ((gamma0xl >>> 7) | (gamma0xh << 25));","","\t                    // Gamma1","\t                    var gamma1x  = W[i - 2];","\t                    var gamma1xh = gamma1x.high;","\t                    var gamma1xl = gamma1x.low;","\t                    var gamma1h  = ((gamma1xh >>> 19) | (gamma1xl << 13)) ^ ((gamma1xh << 3) | (gamma1xl >>> 29)) ^ (gamma1xh >>> 6);","\t                    var gamma1l  = ((gamma1xl >>> 19) | (gamma1xh << 13)) ^ ((gamma1xl << 3) | (gamma1xh >>> 29)) ^ ((gamma1xl >>> 6) | (gamma1xh << 26));","","\t                    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]","\t                    var Wi7  = W[i - 7];","\t                    var Wi7h = Wi7.high;","\t                    var Wi7l = Wi7.low;","","\t                    var Wi16  = W[i - 16];","\t                    var Wi16h = Wi16.high;","\t                    var Wi16l = Wi16.low;","","\t                    var Wil = gamma0l + Wi7l;","\t                    var Wih = gamma0h + Wi7h + ((Wil >>> 0) < (gamma0l >>> 0) ? 1 : 0);","\t                    var Wil = Wil + gamma1l;","\t                    var Wih = Wih + gamma1h + ((Wil >>> 0) < (gamma1l >>> 0) ? 1 : 0);","\t                    var Wil = Wil + Wi16l;","\t                    var Wih = Wih + Wi16h + ((Wil >>> 0) < (Wi16l >>> 0) ? 1 : 0);","","\t                    Wi.high = Wih;","\t                    Wi.low  = Wil;","\t                }","","\t                var chh  = (eh & fh) ^ (~eh & gh);","\t                var chl  = (el & fl) ^ (~el & gl);","\t                var majh = (ah & bh) ^ (ah & ch) ^ (bh & ch);","\t                var majl = (al & bl) ^ (al & cl) ^ (bl & cl);","","\t                var sigma0h = ((ah >>> 28) | (al << 4))  ^ ((ah << 30)  | (al >>> 2)) ^ ((ah << 25) | (al >>> 7));","\t                var sigma0l = ((al >>> 28) | (ah << 4))  ^ ((al << 30)  | (ah >>> 2)) ^ ((al << 25) | (ah >>> 7));","\t                var sigma1h = ((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9));","\t                var sigma1l = ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9));","","\t                // t1 = h + sigma1 + ch + K[i] + W[i]","\t                var Ki  = K[i];","\t                var Kih = Ki.high;","\t                var Kil = Ki.low;","","\t                var t1l = hl + sigma1l;","\t                var t1h = hh + sigma1h + ((t1l >>> 0) < (hl >>> 0) ? 1 : 0);","\t                var t1l = t1l + chl;","\t                var t1h = t1h + chh + ((t1l >>> 0) < (chl >>> 0) ? 1 : 0);","\t                var t1l = t1l + Kil;","\t                var t1h = t1h + Kih + ((t1l >>> 0) < (Kil >>> 0) ? 1 : 0);","\t                var t1l = t1l + Wil;","\t                var t1h = t1h + Wih + ((t1l >>> 0) < (Wil >>> 0) ? 1 : 0);","","\t                // t2 = sigma0 + maj","\t                var t2l = sigma0l + majl;","\t                var t2h = sigma0h + majh + ((t2l >>> 0) < (sigma0l >>> 0) ? 1 : 0);","","\t                // Update working variables","\t                hh = gh;","\t                hl = gl;","\t                gh = fh;","\t                gl = fl;","\t                fh = eh;","\t                fl = el;","\t                el = (dl + t1l) | 0;","\t                eh = (dh + t1h + ((el >>> 0) < (dl >>> 0) ? 1 : 0)) | 0;","\t                dh = ch;","\t                dl = cl;","\t                ch = bh;","\t                cl = bl;","\t                bh = ah;","\t                bl = al;","\t                al = (t1l + t2l) | 0;","\t                ah = (t1h + t2h + ((al >>> 0) < (t1l >>> 0) ? 1 : 0)) | 0;","\t            }","","\t            // Intermediate hash value","\t            H0l = H0.low  = (H0l + al);","\t            H0.high = (H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0));","\t            H1l = H1.low  = (H1l + bl);","\t            H1.high = (H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0));","\t            H2l = H2.low  = (H2l + cl);","\t            H2.high = (H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0));","\t            H3l = H3.low  = (H3l + dl);","\t            H3.high = (H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0));","\t            H4l = H4.low  = (H4l + el);","\t            H4.high = (H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0));","\t            H5l = H5.low  = (H5l + fl);","\t            H5.high = (H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0));","\t            H6l = H6.low  = (H6l + gl);","\t            H6.high = (H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0));","\t            H7l = H7.low  = (H7l + hl);","\t            H7.high = (H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0));","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 30] = Math.floor(nBitsTotal / 0x100000000);","\t            dataWords[(((nBitsLeft + 128) >>> 10) << 5) + 31] = nBitsTotal;","\t            data.sigBytes = dataWords.length * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Convert hash to 32-bit word array before returning","\t            var hash = this._hash.toX32();","","\t            // Return final computed hash","\t            return hash;","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","\t            clone._hash = this._hash.clone();","","\t            return clone;","\t        },","","\t        blockSize: 1024/32","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA512('message');","\t     *     var hash = CryptoJS.SHA512(wordArray);","\t     */","\t    C.SHA512 = Hasher._createHelper(SHA512);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA512(message, key);","\t     */","\t    C.HmacSHA512 = Hasher._createHmacHelper(SHA512);","\t}());","","","\treturn CryptoJS.SHA512;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"26":1,"27":160,"31":1,"75":1,"76":1,"77":1,"78":80,"85":1,"87":0,"97":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":0,"141":0,"144":0,"146":0,"149":0,"150":0,"151":0,"154":0,"155":0,"156":0,"157":0,"158":0,"161":0,"162":0,"163":0,"164":0,"165":0,"168":0,"169":0,"170":0,"172":0,"173":0,"174":0,"176":0,"177":0,"178":0,"179":0,"180":0,"181":0,"183":0,"184":0,"187":0,"188":0,"189":0,"190":0,"192":0,"193":0,"194":0,"195":0,"198":0,"199":0,"200":0,"202":0,"203":0,"204":0,"205":0,"206":0,"207":0,"208":0,"209":0,"212":0,"213":0,"216":0,"217":0,"218":0,"219":0,"220":0,"221":0,"222":0,"223":0,"224":0,"225":0,"226":0,"227":0,"228":0,"229":0,"230":0,"231":0,"235":0,"236":0,"237":0,"238":0,"239":0,"240":0,"241":0,"242":0,"243":0,"244":0,"245":0,"246":0,"247":0,"248":0,"249":0,"250":0,"255":0,"256":0,"258":0,"259":0,"262":0,"263":0,"264":0,"265":0,"268":0,"271":0,"274":0,"278":0,"279":0,"281":0,"301":1,"317":1,"321":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha384.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha384.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":19},"end":{"line":29,"column":31}}},"5":{"name":"(anonymous_5)","line":38,"loc":{"start":{"line":38,"column":22},"end":{"line":38,"column":34}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":83,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":100}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":56}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":78,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":30}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":40}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":32}},"14":{"start":{"line":28,"column":5},"end":{"line":45,"column":8}},"15":{"start":{"line":30,"column":13},"end":{"line":35,"column":16}},"16":{"start":{"line":39,"column":13},"end":{"line":39,"column":54}},"17":{"start":{"line":41,"column":13},"end":{"line":41,"column":33}},"18":{"start":{"line":43,"column":13},"end":{"line":43,"column":25}},"19":{"start":{"line":61,"column":5},"end":{"line":61,"column":45}},"20":{"start":{"line":77,"column":5},"end":{"line":77,"column":53}},"21":{"start":{"line":81,"column":1},"end":{"line":81,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"), require(\"./sha512\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./x64-core\", \"./sha512\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_x64 = C.x64;","\t    var X64Word = C_x64.Word;","\t    var X64WordArray = C_x64.WordArray;","\t    var C_algo = C.algo;","\t    var SHA512 = C_algo.SHA512;","","\t    /**","\t     * SHA-384 hash algorithm.","\t     */","\t    var SHA384 = C_algo.SHA384 = SHA512.extend({","\t        _doReset: function () {","\t            this._hash = new X64WordArray.init([","\t                new X64Word.init(0xcbbb9d5d, 0xc1059ed8), new X64Word.init(0x629a292a, 0x367cd507),","\t                new X64Word.init(0x9159015a, 0x3070dd17), new X64Word.init(0x152fecd8, 0xf70e5939),","\t                new X64Word.init(0x67332667, 0xffc00b31), new X64Word.init(0x8eb44a87, 0x68581511),","\t                new X64Word.init(0xdb0c2e0d, 0x64f98fa7), new X64Word.init(0x47b5481d, 0xbefa4fa4)","\t            ]);","\t        },","","\t        _doFinalize: function () {","\t            var hash = SHA512._doFinalize.call(this);","","\t            hash.sigBytes -= 16;","","\t            return hash;","\t        }","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA384('message');","\t     *     var hash = CryptoJS.SHA384(wordArray);","\t     */","\t    C.SHA384 = SHA512._createHelper(SHA384);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA384(message, key);","\t     */","\t    C.HmacSHA384 = SHA512._createHmacHelper(SHA384);","\t}());","","","\treturn CryptoJS.SHA384;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"28":1,"30":0,"39":0,"41":0,"43":0,"61":1,"77":1,"81":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha3.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/sha3.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":24,"22":24,"23":24,"24":24,"25":24,"26":1,"27":5,"28":25,"29":1,"30":1,"31":24,"32":24,"33":24,"34":168,"35":86,"36":86,"37":73,"38":13,"39":168,"40":85,"41":83,"42":24,"43":1,"44":1,"45":1,"46":25,"47":1,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"137":0,"138":0,"139":0,"140":1,"141":1,"142":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[86,82],"5":[73,13],"6":[85,83],"7":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":1,"6":0,"7":0,"8":0,"9":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":18}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":6},"end":{"line":32,"column":18}}},"5":{"name":"(anonymous_5)","line":82,"loc":{"start":{"line":82,"column":6},"end":{"line":82,"column":18}}},"6":{"name":"(anonymous_6)","line":104,"loc":{"start":{"line":104,"column":19},"end":{"line":104,"column":31}}},"7":{"name":"(anonymous_7)","line":113,"loc":{"start":{"line":113,"column":26},"end":{"line":113,"column":47}}},"8":{"name":"(anonymous_8)","line":227,"loc":{"start":{"line":227,"column":22},"end":{"line":227,"column":34}}},"9":{"name":"(anonymous_9)","line":275,"loc":{"start":{"line":275,"column":16},"end":{"line":275,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":323,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":79}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":44}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":318,"column":10}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":31}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":23}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":30}},"14":{"start":{"line":24,"column":5},"end":{"line":24,"column":25}},"15":{"start":{"line":27,"column":5},"end":{"line":27,"column":26}},"16":{"start":{"line":28,"column":5},"end":{"line":28,"column":26}},"17":{"start":{"line":29,"column":5},"end":{"line":29,"column":30}},"18":{"start":{"line":32,"column":5},"end":{"line":78,"column":10}},"19":{"start":{"line":34,"column":9},"end":{"line":34,"column":26}},"20":{"start":{"line":35,"column":9},"end":{"line":42,"column":10}},"21":{"start":{"line":36,"column":13},"end":{"line":36,"column":67}},"22":{"start":{"line":38,"column":13},"end":{"line":38,"column":30}},"23":{"start":{"line":39,"column":13},"end":{"line":39,"column":44}},"24":{"start":{"line":40,"column":13},"end":{"line":40,"column":22}},"25":{"start":{"line":41,"column":13},"end":{"line":41,"column":22}},"26":{"start":{"line":45,"column":9},"end":{"line":49,"column":10}},"27":{"start":{"line":46,"column":13},"end":{"line":48,"column":14}},"28":{"start":{"line":47,"column":17},"end":{"line":47,"column":71}},"29":{"start":{"line":52,"column":9},"end":{"line":52,"column":25}},"30":{"start":{"line":53,"column":9},"end":{"line":77,"column":10}},"31":{"start":{"line":54,"column":13},"end":{"line":54,"column":38}},"32":{"start":{"line":55,"column":13},"end":{"line":55,"column":38}},"33":{"start":{"line":57,"column":13},"end":{"line":74,"column":14}},"34":{"start":{"line":58,"column":17},"end":{"line":65,"column":18}},"35":{"start":{"line":59,"column":21},"end":{"line":59,"column":52}},"36":{"start":{"line":60,"column":21},"end":{"line":64,"column":22}},"37":{"start":{"line":61,"column":25},"end":{"line":61,"column":62}},"38":{"start":{"line":63,"column":25},"end":{"line":63,"column":69}},"39":{"start":{"line":68,"column":17},"end":{"line":73,"column":18}},"40":{"start":{"line":70,"column":21},"end":{"line":70,"column":47}},"41":{"start":{"line":72,"column":21},"end":{"line":72,"column":32}},"42":{"start":{"line":76,"column":13},"end":{"line":76,"column":85}},"43":{"start":{"line":81,"column":5},"end":{"line":81,"column":16}},"44":{"start":{"line":82,"column":5},"end":{"line":86,"column":10}},"45":{"start":{"line":83,"column":9},"end":{"line":85,"column":10}},"46":{"start":{"line":84,"column":13},"end":{"line":84,"column":37}},"47":{"start":{"line":91,"column":5},"end":{"line":285,"column":8}},"48":{"start":{"line":105,"column":13},"end":{"line":105,"column":41}},"49":{"start":{"line":106,"column":13},"end":{"line":108,"column":14}},"50":{"start":{"line":107,"column":17},"end":{"line":107,"column":47}},"51":{"start":{"line":110,"column":13},"end":{"line":110,"column":70}},"52":{"start":{"line":115,"column":13},"end":{"line":115,"column":37}},"53":{"start":{"line":116,"column":13},"end":{"line":116,"column":54}},"54":{"start":{"line":119,"column":13},"end":{"line":138,"column":14}},"55":{"start":{"line":121,"column":17},"end":{"line":121,"column":46}},"56":{"start":{"line":122,"column":17},"end":{"line":122,"column":50}},"57":{"start":{"line":125,"column":17},"end":{"line":128,"column":19}},"58":{"start":{"line":129,"column":17},"end":{"line":132,"column":19}},"59":{"start":{"line":135,"column":17},"end":{"line":135,"column":37}},"60":{"start":{"line":136,"column":17},"end":{"line":136,"column":35}},"61":{"start":{"line":137,"column":17},"end":{"line":137,"column":34}},"62":{"start":{"line":141,"column":13},"end":{"line":224,"column":14}},"63":{"start":{"line":143,"column":17},"end":{"line":156,"column":18}},"64":{"start":{"line":145,"column":21},"end":{"line":145,"column":44}},"65":{"start":{"line":146,"column":21},"end":{"line":150,"column":22}},"66":{"start":{"line":147,"column":25},"end":{"line":147,"column":53}},"67":{"start":{"line":148,"column":25},"end":{"line":148,"column":43}},"68":{"start":{"line":149,"column":25},"end":{"line":149,"column":42}},"69":{"start":{"line":153,"column":21},"end":{"line":153,"column":35}},"70":{"start":{"line":154,"column":21},"end":{"line":154,"column":36}},"71":{"start":{"line":155,"column":21},"end":{"line":155,"column":36}},"72":{"start":{"line":157,"column":17},"end":{"line":172,"column":18}},"73":{"start":{"line":159,"column":21},"end":{"line":159,"column":46}},"74":{"start":{"line":160,"column":21},"end":{"line":160,"column":46}},"75":{"start":{"line":161,"column":21},"end":{"line":161,"column":43}},"76":{"start":{"line":162,"column":21},"end":{"line":162,"column":42}},"77":{"start":{"line":165,"column":21},"end":{"line":165,"column":77}},"78":{"start":{"line":166,"column":21},"end":{"line":166,"column":77}},"79":{"start":{"line":167,"column":21},"end":{"line":171,"column":22}},"80":{"start":{"line":168,"column":25},"end":{"line":168,"column":53}},"81":{"start":{"line":169,"column":25},"end":{"line":169,"column":43}},"82":{"start":{"line":170,"column":25},"end":{"line":170,"column":43}},"83":{"start":{"line":175,"column":17},"end":{"line":195,"column":18}},"84":{"start":{"line":177,"column":21},"end":{"line":177,"column":49}},"85":{"start":{"line":178,"column":21},"end":{"line":178,"column":45}},"86":{"start":{"line":179,"column":21},"end":{"line":179,"column":44}},"87":{"start":{"line":180,"column":21},"end":{"line":180,"column":60}},"88":{"start":{"line":183,"column":21},"end":{"line":189,"column":22}},"89":{"start":{"line":184,"column":25},"end":{"line":184,"column":92}},"90":{"start":{"line":185,"column":25},"end":{"line":185,"column":92}},"91":{"start":{"line":187,"column":25},"end":{"line":187,"column":99}},"92":{"start":{"line":188,"column":25},"end":{"line":188,"column":99}},"93":{"start":{"line":192,"column":21},"end":{"line":192,"column":60}},"94":{"start":{"line":193,"column":21},"end":{"line":193,"column":41}},"95":{"start":{"line":194,"column":21},"end":{"line":194,"column":41}},"96":{"start":{"line":198,"column":17},"end":{"line":198,"column":31}},"97":{"start":{"line":199,"column":17},"end":{"line":199,"column":39}},"98":{"start":{"line":200,"column":17},"end":{"line":200,"column":39}},"99":{"start":{"line":201,"column":17},"end":{"line":201,"column":38}},"100":{"start":{"line":204,"column":17},"end":{"line":217,"column":18}},"101":{"start":{"line":205,"column":21},"end":{"line":216,"column":22}},"102":{"start":{"line":207,"column":25},"end":{"line":207,"column":51}},"103":{"start":{"line":208,"column":25},"end":{"line":208,"column":53}},"104":{"start":{"line":209,"column":25},"end":{"line":209,"column":50}},"105":{"start":{"line":210,"column":25},"end":{"line":210,"column":64}},"106":{"start":{"line":211,"column":25},"end":{"line":211,"column":64}},"107":{"start":{"line":214,"column":25},"end":{"line":214,"column":81}},"108":{"start":{"line":215,"column":25},"end":{"line":215,"column":80}},"109":{"start":{"line":220,"column":17},"end":{"line":220,"column":37}},"110":{"start":{"line":221,"column":17},"end":{"line":221,"column":60}},"111":{"start":{"line":222,"column":17},"end":{"line":222,"column":49}},"112":{"start":{"line":223,"column":17},"end":{"line":223,"column":48}},"113":{"start":{"line":229,"column":13},"end":{"line":229,"column":35}},"114":{"start":{"line":230,"column":13},"end":{"line":230,"column":40}},"115":{"start":{"line":231,"column":13},"end":{"line":231,"column":51}},"116":{"start":{"line":232,"column":13},"end":{"line":232,"column":47}},"117":{"start":{"line":233,"column":13},"end":{"line":233,"column":53}},"118":{"start":{"line":236,"column":13},"end":{"line":236,"column":72}},"119":{"start":{"line":237,"column":13},"end":{"line":237,"column":105}},"120":{"start":{"line":238,"column":13},"end":{"line":238,"column":50}},"121":{"start":{"line":241,"column":13},"end":{"line":241,"column":29}},"122":{"start":{"line":244,"column":13},"end":{"line":244,"column":37}},"123":{"start":{"line":245,"column":13},"end":{"line":245,"column":63}},"124":{"start":{"line":246,"column":13},"end":{"line":246,"column":59}},"125":{"start":{"line":249,"column":13},"end":{"line":249,"column":32}},"126":{"start":{"line":250,"column":13},"end":{"line":269,"column":14}},"127":{"start":{"line":252,"column":17},"end":{"line":252,"column":37}},"128":{"start":{"line":253,"column":17},"end":{"line":253,"column":41}},"129":{"start":{"line":254,"column":17},"end":{"line":254,"column":40}},"130":{"start":{"line":257,"column":17},"end":{"line":260,"column":19}},"131":{"start":{"line":261,"column":17},"end":{"line":264,"column":19}},"132":{"start":{"line":267,"column":17},"end":{"line":267,"column":41}},"133":{"start":{"line":268,"column":17},"end":{"line":268,"column":41}},"134":{"start":{"line":272,"column":13},"end":{"line":272,"column":69}},"135":{"start":{"line":276,"column":13},"end":{"line":276,"column":49}},"136":{"start":{"line":278,"column":13},"end":{"line":278,"column":61}},"137":{"start":{"line":279,"column":13},"end":{"line":281,"column":14}},"138":{"start":{"line":280,"column":17},"end":{"line":280,"column":45}},"139":{"start":{"line":283,"column":13},"end":{"line":283,"column":26}},"140":{"start":{"line":301,"column":5},"end":{"line":301,"column":41}},"141":{"start":{"line":317,"column":5},"end":{"line":317,"column":49}},"142":{"start":{"line":321,"column":1},"end":{"line":321,"column":22}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":58,"type":"if","locations":[{"start":{"line":58,"column":17},"end":{"line":58,"column":17}},{"start":{"line":58,"column":17},"end":{"line":58,"column":17}}]},"5":{"line":60,"type":"if","locations":[{"start":{"line":60,"column":21},"end":{"line":60,"column":21}},{"start":{"line":60,"column":21},"end":{"line":60,"column":21}}]},"6":{"line":68,"type":"if","locations":[{"start":{"line":68,"column":17},"end":{"line":68,"column":17}},{"start":{"line":68,"column":17},"end":{"line":68,"column":17}}]},"7":{"line":183,"type":"if","locations":[{"start":{"line":183,"column":21},"end":{"line":183,"column":21}},{"start":{"line":183,"column":21},"end":{"line":183,"column":21}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./x64-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./x64-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function (Math) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var Hasher = C_lib.Hasher;","\t    var C_x64 = C.x64;","\t    var X64Word = C_x64.Word;","\t    var C_algo = C.algo;","","\t    // Constants tables","\t    var RHO_OFFSETS = [];","\t    var PI_INDEXES  = [];","\t    var ROUND_CONSTANTS = [];","","\t    // Compute Constants","\t    (function () {","\t        // Compute rho offset constants","\t        var x = 1, y = 0;","\t        for (var t = 0; t < 24; t++) {","\t            RHO_OFFSETS[x + 5 * y] = ((t + 1) * (t + 2) / 2) % 64;","","\t            var newX = y % 5;","\t            var newY = (2 * x + 3 * y) % 5;","\t            x = newX;","\t            y = newY;","\t        }","","\t        // Compute pi index constants","\t        for (var x = 0; x < 5; x++) {","\t            for (var y = 0; y < 5; y++) {","\t                PI_INDEXES[x + 5 * y] = y + ((2 * x + 3 * y) % 5) * 5;","\t            }","\t        }","","\t        // Compute round constants","\t        var LFSR = 0x01;","\t        for (var i = 0; i < 24; i++) {","\t            var roundConstantMsw = 0;","\t            var roundConstantLsw = 0;","","\t            for (var j = 0; j < 7; j++) {","\t                if (LFSR & 0x01) {","\t                    var bitPosition = (1 << j) - 1;","\t                    if (bitPosition < 32) {","\t                        roundConstantLsw ^= 1 << bitPosition;","\t                    } else /* if (bitPosition >= 32) */ {","\t                        roundConstantMsw ^= 1 << (bitPosition - 32);","\t                    }","\t                }","","\t                // Compute next LFSR","\t                if (LFSR & 0x80) {","\t                    // Primitive polynomial over GF(2): x^8 + x^6 + x^5 + x^4 + 1","\t                    LFSR = (LFSR << 1) ^ 0x71;","\t                } else {","\t                    LFSR <<= 1;","\t                }","\t            }","","\t            ROUND_CONSTANTS[i] = X64Word.create(roundConstantMsw, roundConstantLsw);","\t        }","\t    }());","","\t    // Reusable objects for temporary values","\t    var T = [];","\t    (function () {","\t        for (var i = 0; i < 25; i++) {","\t            T[i] = X64Word.create();","\t        }","\t    }());","","\t    /**","\t     * SHA-3 hash algorithm.","\t     */","\t    var SHA3 = C_algo.SHA3 = Hasher.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {number} outputLength","\t         *   The desired number of bits in the output hash.","\t         *   Only values permitted are: 224, 256, 384, 512.","\t         *   Default: 512","\t         */","\t        cfg: Hasher.cfg.extend({","\t            outputLength: 512","\t        }),","","\t        _doReset: function () {","\t            var state = this._state = []","\t            for (var i = 0; i < 25; i++) {","\t                state[i] = new X64Word.init();","\t            }","","\t            this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcuts","\t            var state = this._state;","\t            var nBlockSizeLanes = this.blockSize / 2;","","\t            // Absorb","\t            for (var i = 0; i < nBlockSizeLanes; i++) {","\t                // Shortcuts","\t                var M2i  = M[offset + 2 * i];","\t                var M2i1 = M[offset + 2 * i + 1];","","\t                // Swap endian","\t                M2i = (","\t                    (((M2i << 8)  | (M2i >>> 24)) & 0x00ff00ff) |","\t                    (((M2i << 24) | (M2i >>> 8))  & 0xff00ff00)","\t                );","\t                M2i1 = (","\t                    (((M2i1 << 8)  | (M2i1 >>> 24)) & 0x00ff00ff) |","\t                    (((M2i1 << 24) | (M2i1 >>> 8))  & 0xff00ff00)","\t                );","","\t                // Absorb message into state","\t                var lane = state[i];","\t                lane.high ^= M2i1;","\t                lane.low  ^= M2i;","\t            }","","\t            // Rounds","\t            for (var round = 0; round < 24; round++) {","\t                // Theta","\t                for (var x = 0; x < 5; x++) {","\t                    // Mix column lanes","\t                    var tMsw = 0, tLsw = 0;","\t                    for (var y = 0; y < 5; y++) {","\t                        var lane = state[x + 5 * y];","\t                        tMsw ^= lane.high;","\t                        tLsw ^= lane.low;","\t                    }","","\t                    // Temporary values","\t                    var Tx = T[x];","\t                    Tx.high = tMsw;","\t                    Tx.low  = tLsw;","\t                }","\t                for (var x = 0; x < 5; x++) {","\t                    // Shortcuts","\t                    var Tx4 = T[(x + 4) % 5];","\t                    var Tx1 = T[(x + 1) % 5];","\t                    var Tx1Msw = Tx1.high;","\t                    var Tx1Lsw = Tx1.low;","","\t                    // Mix surrounding columns","\t                    var tMsw = Tx4.high ^ ((Tx1Msw << 1) | (Tx1Lsw >>> 31));","\t                    var tLsw = Tx4.low  ^ ((Tx1Lsw << 1) | (Tx1Msw >>> 31));","\t                    for (var y = 0; y < 5; y++) {","\t                        var lane = state[x + 5 * y];","\t                        lane.high ^= tMsw;","\t                        lane.low  ^= tLsw;","\t                    }","\t                }","","\t                // Rho Pi","\t                for (var laneIndex = 1; laneIndex < 25; laneIndex++) {","\t                    // Shortcuts","\t                    var lane = state[laneIndex];","\t                    var laneMsw = lane.high;","\t                    var laneLsw = lane.low;","\t                    var rhoOffset = RHO_OFFSETS[laneIndex];","","\t                    // Rotate lanes","\t                    if (rhoOffset < 32) {","\t                        var tMsw = (laneMsw << rhoOffset) | (laneLsw >>> (32 - rhoOffset));","\t                        var tLsw = (laneLsw << rhoOffset) | (laneMsw >>> (32 - rhoOffset));","\t                    } else /* if (rhoOffset >= 32) */ {","\t                        var tMsw = (laneLsw << (rhoOffset - 32)) | (laneMsw >>> (64 - rhoOffset));","\t                        var tLsw = (laneMsw << (rhoOffset - 32)) | (laneLsw >>> (64 - rhoOffset));","\t                    }","","\t                    // Transpose lanes","\t                    var TPiLane = T[PI_INDEXES[laneIndex]];","\t                    TPiLane.high = tMsw;","\t                    TPiLane.low  = tLsw;","\t                }","","\t                // Rho pi at x = y = 0","\t                var T0 = T[0];","\t                var state0 = state[0];","\t                T0.high = state0.high;","\t                T0.low  = state0.low;","","\t                // Chi","\t                for (var x = 0; x < 5; x++) {","\t                    for (var y = 0; y < 5; y++) {","\t                        // Shortcuts","\t                        var laneIndex = x + 5 * y;","\t                        var lane = state[laneIndex];","\t                        var TLane = T[laneIndex];","\t                        var Tx1Lane = T[((x + 1) % 5) + 5 * y];","\t                        var Tx2Lane = T[((x + 2) % 5) + 5 * y];","","\t                        // Mix rows","\t                        lane.high = TLane.high ^ (~Tx1Lane.high & Tx2Lane.high);","\t                        lane.low  = TLane.low  ^ (~Tx1Lane.low  & Tx2Lane.low);","\t                    }","\t                }","","\t                // Iota","\t                var lane = state[0];","\t                var roundConstant = ROUND_CONSTANTS[round];","\t                lane.high ^= roundConstant.high;","\t                lane.low  ^= roundConstant.low;;","\t            }","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","\t            var blockSizeBits = this.blockSize * 32;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x1 << (24 - nBitsLeft % 32);","\t            dataWords[((Math.ceil((nBitsLeft + 1) / blockSizeBits) * blockSizeBits) >>> 5) - 1] |= 0x80;","\t            data.sigBytes = dataWords.length * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Shortcuts","\t            var state = this._state;","\t            var outputLengthBytes = this.cfg.outputLength / 8;","\t            var outputLengthLanes = outputLengthBytes / 8;","","\t            // Squeeze","\t            var hashWords = [];","\t            for (var i = 0; i < outputLengthLanes; i++) {","\t                // Shortcuts","\t                var lane = state[i];","\t                var laneMsw = lane.high;","\t                var laneLsw = lane.low;","","\t                // Swap endian","\t                laneMsw = (","\t                    (((laneMsw << 8)  | (laneMsw >>> 24)) & 0x00ff00ff) |","\t                    (((laneMsw << 24) | (laneMsw >>> 8))  & 0xff00ff00)","\t                );","\t                laneLsw = (","\t                    (((laneLsw << 8)  | (laneLsw >>> 24)) & 0x00ff00ff) |","\t                    (((laneLsw << 24) | (laneLsw >>> 8))  & 0xff00ff00)","\t                );","","\t                // Squeeze state to retrieve hash","\t                hashWords.push(laneLsw);","\t                hashWords.push(laneMsw);","\t            }","","\t            // Return final computed hash","\t            return new WordArray.init(hashWords, outputLengthBytes);","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","","\t            var state = clone._state = this._state.slice(0);","\t            for (var i = 0; i < 25; i++) {","\t                state[i] = state[i].clone();","\t            }","","\t            return clone;","\t        }","\t    });","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.SHA3('message');","\t     *     var hash = CryptoJS.SHA3(wordArray);","\t     */","\t    C.SHA3 = Hasher._createHelper(SHA3);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacSHA3(message, key);","\t     */","\t    C.HmacSHA3 = Hasher._createHmacHelper(SHA3);","\t}(Math));","","","\treturn CryptoJS.SHA3;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"27":1,"28":1,"29":1,"32":1,"34":1,"35":1,"36":24,"38":24,"39":24,"40":24,"41":24,"45":1,"46":5,"47":25,"52":1,"53":1,"54":24,"55":24,"57":24,"58":168,"59":86,"60":86,"61":73,"63":13,"68":168,"70":85,"72":83,"76":24,"81":1,"82":1,"83":1,"84":25,"91":1,"105":0,"106":0,"107":0,"110":0,"115":0,"116":0,"119":0,"121":0,"122":0,"125":0,"129":0,"135":0,"136":0,"137":0,"141":0,"143":0,"145":0,"146":0,"147":0,"148":0,"149":0,"153":0,"154":0,"155":0,"157":0,"159":0,"160":0,"161":0,"162":0,"165":0,"166":0,"167":0,"168":0,"169":0,"170":0,"175":0,"177":0,"178":0,"179":0,"180":0,"183":0,"184":0,"185":0,"187":0,"188":0,"192":0,"193":0,"194":0,"198":0,"199":0,"200":0,"201":0,"204":0,"205":0,"207":0,"208":0,"209":0,"210":0,"211":0,"214":0,"215":0,"220":0,"221":0,"222":0,"223":0,"229":0,"230":0,"231":0,"232":0,"233":0,"236":0,"237":0,"238":0,"241":0,"244":0,"245":0,"246":0,"249":0,"250":0,"252":0,"253":0,"254":0,"257":0,"261":0,"267":0,"268":0,"272":0,"276":0,"278":0,"279":0,"280":0,"283":0,"301":1,"317":1,"321":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/ripemd160.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/ripemd160.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":1,"101":0,"102":1,"103":0,"104":1,"105":0,"106":1,"107":0,"108":1,"109":0,"110":1,"111":0,"112":1,"113":1,"114":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":27,"loc":{"start":{"line":27,"column":2},"end":{"line":27,"column":18}}},"4":{"name":"(anonymous_4)","line":68,"loc":{"start":{"line":68,"column":19},"end":{"line":68,"column":31}}},"5":{"name":"(anonymous_5)","line":72,"loc":{"start":{"line":72,"column":26},"end":{"line":72,"column":47}}},"6":{"name":"(anonymous_6)","line":158,"loc":{"start":{"line":158,"column":22},"end":{"line":158,"column":34}}},"7":{"name":"(anonymous_7)","line":195,"loc":{"start":{"line":195,"column":16},"end":{"line":195,"column":28}}},"8":{"name":"f1","line":204,"loc":{"start":{"line":204,"column":5},"end":{"line":204,"column":26}}},"9":{"name":"f2","line":209,"loc":{"start":{"line":209,"column":5},"end":{"line":209,"column":26}}},"10":{"name":"f3","line":213,"loc":{"start":{"line":213,"column":5},"end":{"line":213,"column":26}}},"11":{"name":"f4","line":217,"loc":{"start":{"line":217,"column":5},"end":{"line":217,"column":26}}},"12":{"name":"f5","line":221,"loc":{"start":{"line":221,"column":5},"end":{"line":221,"column":26}}},"13":{"name":"rotl","line":226,"loc":{"start":{"line":226,"column":5},"end":{"line":226,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":267,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":27,"column":1},"end":{"line":262,"column":10}},"8":{"start":{"line":29,"column":5},"end":{"line":29,"column":22}},"9":{"start":{"line":30,"column":5},"end":{"line":30,"column":23}},"10":{"start":{"line":31,"column":5},"end":{"line":31,"column":37}},"11":{"start":{"line":32,"column":5},"end":{"line":32,"column":31}},"12":{"start":{"line":33,"column":5},"end":{"line":33,"column":25}},"13":{"start":{"line":36,"column":5},"end":{"line":41,"column":73}},"14":{"start":{"line":42,"column":5},"end":{"line":47,"column":74}},"15":{"start":{"line":48,"column":5},"end":{"line":53,"column":74}},"16":{"start":{"line":54,"column":5},"end":{"line":59,"column":74}},"17":{"start":{"line":61,"column":5},"end":{"line":61,"column":96}},"18":{"start":{"line":62,"column":5},"end":{"line":62,"column":96}},"19":{"start":{"line":67,"column":5},"end":{"line":201,"column":8}},"20":{"start":{"line":69,"column":13},"end":{"line":69,"column":106}},"21":{"start":{"line":75,"column":13},"end":{"line":85,"column":14}},"22":{"start":{"line":77,"column":17},"end":{"line":77,"column":43}},"23":{"start":{"line":78,"column":17},"end":{"line":78,"column":46}},"24":{"start":{"line":81,"column":17},"end":{"line":84,"column":19}},"25":{"start":{"line":87,"column":13},"end":{"line":87,"column":39}},"26":{"start":{"line":88,"column":13},"end":{"line":88,"column":32}},"27":{"start":{"line":89,"column":13},"end":{"line":89,"column":32}},"28":{"start":{"line":90,"column":13},"end":{"line":90,"column":32}},"29":{"start":{"line":91,"column":13},"end":{"line":91,"column":32}},"30":{"start":{"line":92,"column":13},"end":{"line":92,"column":32}},"31":{"start":{"line":93,"column":13},"end":{"line":93,"column":32}},"32":{"start":{"line":96,"column":13},"end":{"line":96,"column":36}},"33":{"start":{"line":97,"column":13},"end":{"line":97,"column":36}},"34":{"start":{"line":99,"column":13},"end":{"line":99,"column":28}},"35":{"start":{"line":100,"column":13},"end":{"line":100,"column":28}},"36":{"start":{"line":101,"column":13},"end":{"line":101,"column":28}},"37":{"start":{"line":102,"column":13},"end":{"line":102,"column":28}},"38":{"start":{"line":103,"column":13},"end":{"line":103,"column":28}},"39":{"start":{"line":105,"column":13},"end":{"line":105,"column":19}},"40":{"start":{"line":106,"column":13},"end":{"line":148,"column":14}},"41":{"start":{"line":107,"column":17},"end":{"line":107,"column":47}},"42":{"start":{"line":108,"column":17},"end":{"line":118,"column":18}},"43":{"start":{"line":109,"column":14},"end":{"line":109,"column":41}},"44":{"start":{"line":110,"column":24},"end":{"line":118,"column":18}},"45":{"start":{"line":111,"column":14},"end":{"line":111,"column":41}},"46":{"start":{"line":112,"column":24},"end":{"line":118,"column":18}},"47":{"start":{"line":113,"column":14},"end":{"line":113,"column":41}},"48":{"start":{"line":114,"column":24},"end":{"line":118,"column":18}},"49":{"start":{"line":115,"column":14},"end":{"line":115,"column":41}},"50":{"start":{"line":117,"column":14},"end":{"line":117,"column":41}},"51":{"start":{"line":119,"column":17},"end":{"line":119,"column":25}},"52":{"start":{"line":120,"column":17},"end":{"line":120,"column":36}},"53":{"start":{"line":121,"column":17},"end":{"line":121,"column":30}},"54":{"start":{"line":122,"column":17},"end":{"line":122,"column":25}},"55":{"start":{"line":123,"column":17},"end":{"line":123,"column":25}},"56":{"start":{"line":124,"column":17},"end":{"line":124,"column":35}},"57":{"start":{"line":125,"column":17},"end":{"line":125,"column":25}},"58":{"start":{"line":126,"column":17},"end":{"line":126,"column":24}},"59":{"start":{"line":128,"column":17},"end":{"line":128,"column":46}},"60":{"start":{"line":129,"column":17},"end":{"line":139,"column":18}},"61":{"start":{"line":130,"column":14},"end":{"line":130,"column":41}},"62":{"start":{"line":131,"column":24},"end":{"line":139,"column":18}},"63":{"start":{"line":132,"column":14},"end":{"line":132,"column":41}},"64":{"start":{"line":133,"column":24},"end":{"line":139,"column":18}},"65":{"start":{"line":134,"column":14},"end":{"line":134,"column":41}},"66":{"start":{"line":135,"column":24},"end":{"line":139,"column":18}},"67":{"start":{"line":136,"column":14},"end":{"line":136,"column":41}},"68":{"start":{"line":138,"column":14},"end":{"line":138,"column":41}},"69":{"start":{"line":140,"column":17},"end":{"line":140,"column":25}},"70":{"start":{"line":141,"column":17},"end":{"line":141,"column":37}},"71":{"start":{"line":142,"column":17},"end":{"line":142,"column":30}},"72":{"start":{"line":143,"column":17},"end":{"line":143,"column":25}},"73":{"start":{"line":144,"column":17},"end":{"line":144,"column":25}},"74":{"start":{"line":145,"column":17},"end":{"line":145,"column":35}},"75":{"start":{"line":146,"column":17},"end":{"line":146,"column":25}},"76":{"start":{"line":147,"column":17},"end":{"line":147,"column":24}},"77":{"start":{"line":150,"column":13},"end":{"line":150,"column":39}},"78":{"start":{"line":151,"column":13},"end":{"line":151,"column":39}},"79":{"start":{"line":152,"column":13},"end":{"line":152,"column":39}},"80":{"start":{"line":153,"column":13},"end":{"line":153,"column":39}},"81":{"start":{"line":154,"column":13},"end":{"line":154,"column":39}},"82":{"start":{"line":155,"column":13},"end":{"line":155,"column":23}},"83":{"start":{"line":160,"column":13},"end":{"line":160,"column":35}},"84":{"start":{"line":161,"column":13},"end":{"line":161,"column":40}},"85":{"start":{"line":163,"column":13},"end":{"line":163,"column":51}},"86":{"start":{"line":164,"column":13},"end":{"line":164,"column":47}},"87":{"start":{"line":167,"column":13},"end":{"line":167,"column":73}},"88":{"start":{"line":168,"column":13},"end":{"line":171,"column":15}},"89":{"start":{"line":172,"column":13},"end":{"line":172,"column":56}},"90":{"start":{"line":175,"column":13},"end":{"line":175,"column":29}},"91":{"start":{"line":178,"column":13},"end":{"line":178,"column":35}},"92":{"start":{"line":179,"column":13},"end":{"line":179,"column":32}},"93":{"start":{"line":182,"column":13},"end":{"line":189,"column":14}},"94":{"start":{"line":184,"column":17},"end":{"line":184,"column":32}},"95":{"start":{"line":187,"column":17},"end":{"line":188,"column":68}},"96":{"start":{"line":192,"column":13},"end":{"line":192,"column":25}},"97":{"start":{"line":196,"column":13},"end":{"line":196,"column":49}},"98":{"start":{"line":197,"column":13},"end":{"line":197,"column":46}},"99":{"start":{"line":199,"column":13},"end":{"line":199,"column":26}},"100":{"start":{"line":204,"column":5},"end":{"line":207,"column":6}},"101":{"start":{"line":205,"column":9},"end":{"line":205,"column":34}},"102":{"start":{"line":209,"column":5},"end":{"line":211,"column":6}},"103":{"start":{"line":210,"column":9},"end":{"line":210,"column":41}},"104":{"start":{"line":213,"column":5},"end":{"line":215,"column":6}},"105":{"start":{"line":214,"column":9},"end":{"line":214,"column":39}},"106":{"start":{"line":217,"column":5},"end":{"line":219,"column":6}},"107":{"start":{"line":218,"column":9},"end":{"line":218,"column":45}},"108":{"start":{"line":221,"column":5},"end":{"line":224,"column":6}},"109":{"start":{"line":222,"column":9},"end":{"line":222,"column":38}},"110":{"start":{"line":226,"column":5},"end":{"line":228,"column":6}},"111":{"start":{"line":227,"column":9},"end":{"line":227,"column":38}},"112":{"start":{"line":245,"column":5},"end":{"line":245,"column":51}},"113":{"start":{"line":261,"column":5},"end":{"line":261,"column":59}},"114":{"start":{"line":265,"column":1},"end":{"line":265,"column":27}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":108,"type":"if","locations":[{"start":{"line":108,"column":17},"end":{"line":108,"column":17}},{"start":{"line":108,"column":17},"end":{"line":108,"column":17}}]},"5":{"line":110,"type":"if","locations":[{"start":{"line":110,"column":24},"end":{"line":110,"column":24}},{"start":{"line":110,"column":24},"end":{"line":110,"column":24}}]},"6":{"line":112,"type":"if","locations":[{"start":{"line":112,"column":24},"end":{"line":112,"column":24}},{"start":{"line":112,"column":24},"end":{"line":112,"column":24}}]},"7":{"line":114,"type":"if","locations":[{"start":{"line":114,"column":24},"end":{"line":114,"column":24}},{"start":{"line":114,"column":24},"end":{"line":114,"column":24}}]},"8":{"line":129,"type":"if","locations":[{"start":{"line":129,"column":17},"end":{"line":129,"column":17}},{"start":{"line":129,"column":17},"end":{"line":129,"column":17}}]},"9":{"line":131,"type":"if","locations":[{"start":{"line":131,"column":24},"end":{"line":131,"column":24}},{"start":{"line":131,"column":24},"end":{"line":131,"column":24}}]},"10":{"line":133,"type":"if","locations":[{"start":{"line":133,"column":24},"end":{"line":133,"column":24}},{"start":{"line":133,"column":24},"end":{"line":133,"column":24}}]},"11":{"line":135,"type":"if","locations":[{"start":{"line":135,"column":24},"end":{"line":135,"column":24}},{"start":{"line":135,"column":24},"end":{"line":135,"column":24}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/** @preserve","\t(c) 2012 by Cédric Mesnil. All rights reserved.","","\tRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:","","\t    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.","\t    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.","","\tTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","\t*/","","\t(function (Math) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var Hasher = C_lib.Hasher;","\t    var C_algo = C.algo;","","\t    // Constants table","\t    var _zl = WordArray.create([","\t        0,  1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15,","\t        7,  4, 13,  1, 10,  6, 15,  3, 12,  0,  9,  5,  2, 14, 11,  8,","\t        3, 10, 14,  4,  9, 15,  8,  1,  2,  7,  0,  6, 13, 11,  5, 12,","\t        1,  9, 11, 10,  0,  8, 12,  4, 13,  3,  7, 15, 14,  5,  6,  2,","\t        4,  0,  5,  9,  7, 12,  2, 10, 14,  1,  3,  8, 11,  6, 15, 13]);","\t    var _zr = WordArray.create([","\t        5, 14,  7,  0,  9,  2, 11,  4, 13,  6, 15,  8,  1, 10,  3, 12,","\t        6, 11,  3,  7,  0, 13,  5, 10, 14, 15,  8, 12,  4,  9,  1,  2,","\t        15,  5,  1,  3,  7, 14,  6,  9, 11,  8, 12,  2, 10,  0,  4, 13,","\t        8,  6,  4,  1,  3, 11, 15,  0,  5, 12,  2, 13,  9,  7, 10, 14,","\t        12, 15, 10,  4,  1,  5,  8,  7,  6,  2, 13, 14,  0,  3,  9, 11]);","\t    var _sl = WordArray.create([","\t         11, 14, 15, 12,  5,  8,  7,  9, 11, 13, 14, 15,  6,  7,  9,  8,","\t        7, 6,   8, 13, 11,  9,  7, 15,  7, 12, 15,  9, 11,  7, 13, 12,","\t        11, 13,  6,  7, 14,  9, 13, 15, 14,  8, 13,  6,  5, 12,  7,  5,","\t          11, 12, 14, 15, 14, 15,  9,  8,  9, 14,  5,  6,  8,  6,  5, 12,","\t        9, 15,  5, 11,  6,  8, 13, 12,  5, 12, 13, 14, 11,  8,  5,  6 ]);","\t    var _sr = WordArray.create([","\t        8,  9,  9, 11, 13, 15, 15,  5,  7,  7,  8, 11, 14, 14, 12,  6,","\t        9, 13, 15,  7, 12,  8,  9, 11,  7,  7, 12,  7,  6, 15, 13, 11,","\t        9,  7, 15, 11,  8,  6,  6, 14, 12, 13,  5, 14, 13, 13,  7,  5,","\t        15,  5,  8, 11, 14, 14,  6, 14,  6,  9, 12,  9, 12,  5, 15,  8,","\t        8,  5, 12,  9, 12,  5, 14,  6,  8, 13,  6,  5, 15, 13, 11, 11 ]);","","\t    var _hl =  WordArray.create([ 0x00000000, 0x5A827999, 0x6ED9EBA1, 0x8F1BBCDC, 0xA953FD4E]);","\t    var _hr =  WordArray.create([ 0x50A28BE6, 0x5C4DD124, 0x6D703EF3, 0x7A6D76E9, 0x00000000]);","","\t    /**","\t     * RIPEMD160 hash algorithm.","\t     */","\t    var RIPEMD160 = C_algo.RIPEMD160 = Hasher.extend({","\t        _doReset: function () {","\t            this._hash  = WordArray.create([0x67452301, 0xEFCDAB89, 0x98BADCFE, 0x10325476, 0xC3D2E1F0]);","\t        },","","\t        _doProcessBlock: function (M, offset) {","","\t            // Swap endian","\t            for (var i = 0; i < 16; i++) {","\t                // Shortcuts","\t                var offset_i = offset + i;","\t                var M_offset_i = M[offset_i];","","\t                // Swap","\t                M[offset_i] = (","\t                    (((M_offset_i << 8)  | (M_offset_i >>> 24)) & 0x00ff00ff) |","\t                    (((M_offset_i << 24) | (M_offset_i >>> 8))  & 0xff00ff00)","\t                );","\t            }","\t            // Shortcut","\t            var H  = this._hash.words;","\t            var hl = _hl.words;","\t            var hr = _hr.words;","\t            var zl = _zl.words;","\t            var zr = _zr.words;","\t            var sl = _sl.words;","\t            var sr = _sr.words;","","\t            // Working variables","\t            var al, bl, cl, dl, el;","\t            var ar, br, cr, dr, er;","","\t            ar = al = H[0];","\t            br = bl = H[1];","\t            cr = cl = H[2];","\t            dr = dl = H[3];","\t            er = el = H[4];","\t            // Computation","\t            var t;","\t            for (var i = 0; i < 80; i += 1) {","\t                t = (al +  M[offset+zl[i]])|0;","\t                if (i<16){","\t\t            t +=  f1(bl,cl,dl) + hl[0];","\t                } else if (i<32) {","\t\t            t +=  f2(bl,cl,dl) + hl[1];","\t                } else if (i<48) {","\t\t            t +=  f3(bl,cl,dl) + hl[2];","\t                } else if (i<64) {","\t\t            t +=  f4(bl,cl,dl) + hl[3];","\t                } else {// if (i<80) {","\t\t            t +=  f5(bl,cl,dl) + hl[4];","\t                }","\t                t = t|0;","\t                t =  rotl(t,sl[i]);","\t                t = (t+el)|0;","\t                al = el;","\t                el = dl;","\t                dl = rotl(cl, 10);","\t                cl = bl;","\t                bl = t;","","\t                t = (ar + M[offset+zr[i]])|0;","\t                if (i<16){","\t\t            t +=  f5(br,cr,dr) + hr[0];","\t                } else if (i<32) {","\t\t            t +=  f4(br,cr,dr) + hr[1];","\t                } else if (i<48) {","\t\t            t +=  f3(br,cr,dr) + hr[2];","\t                } else if (i<64) {","\t\t            t +=  f2(br,cr,dr) + hr[3];","\t                } else {// if (i<80) {","\t\t            t +=  f1(br,cr,dr) + hr[4];","\t                }","\t                t = t|0;","\t                t =  rotl(t,sr[i]) ;","\t                t = (t+er)|0;","\t                ar = er;","\t                er = dr;","\t                dr = rotl(cr, 10);","\t                cr = br;","\t                br = t;","\t            }","\t            // Intermediate hash value","\t            t    = (H[1] + cl + dr)|0;","\t            H[1] = (H[2] + dl + er)|0;","\t            H[2] = (H[3] + el + ar)|0;","\t            H[3] = (H[4] + al + br)|0;","\t            H[4] = (H[0] + bl + cr)|0;","\t            H[0] =  t;","\t        },","","\t        _doFinalize: function () {","\t            // Shortcuts","\t            var data = this._data;","\t            var dataWords = data.words;","","\t            var nBitsTotal = this._nDataBytes * 8;","\t            var nBitsLeft = data.sigBytes * 8;","","\t            // Add padding","\t            dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - nBitsLeft % 32);","\t            dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (","\t                (((nBitsTotal << 8)  | (nBitsTotal >>> 24)) & 0x00ff00ff) |","\t                (((nBitsTotal << 24) | (nBitsTotal >>> 8))  & 0xff00ff00)","\t            );","\t            data.sigBytes = (dataWords.length + 1) * 4;","","\t            // Hash final blocks","\t            this._process();","","\t            // Shortcuts","\t            var hash = this._hash;","\t            var H = hash.words;","","\t            // Swap endian","\t            for (var i = 0; i < 5; i++) {","\t                // Shortcut","\t                var H_i = H[i];","","\t                // Swap","\t                H[i] = (((H_i << 8)  | (H_i >>> 24)) & 0x00ff00ff) |","\t                       (((H_i << 24) | (H_i >>> 8))  & 0xff00ff00);","\t            }","","\t            // Return final computed hash","\t            return hash;","\t        },","","\t        clone: function () {","\t            var clone = Hasher.clone.call(this);","\t            clone._hash = this._hash.clone();","","\t            return clone;","\t        }","\t    });","","","\t    function f1(x, y, z) {","\t        return ((x) ^ (y) ^ (z));","","\t    }","","\t    function f2(x, y, z) {","\t        return (((x)&(y)) | ((~x)&(z)));","\t    }","","\t    function f3(x, y, z) {","\t        return (((x) | (~(y))) ^ (z));","\t    }","","\t    function f4(x, y, z) {","\t        return (((x) & (z)) | ((y)&(~(z))));","\t    }","","\t    function f5(x, y, z) {","\t        return ((x) ^ ((y) |(~(z))));","","\t    }","","\t    function rotl(x,n) {","\t        return (x<<n) | (x>>>(32-n));","\t    }","","","\t    /**","\t     * Shortcut function to the hasher's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     *","\t     * @return {WordArray} The hash.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hash = CryptoJS.RIPEMD160('message');","\t     *     var hash = CryptoJS.RIPEMD160(wordArray);","\t     */","\t    C.RIPEMD160 = Hasher._createHelper(RIPEMD160);","","\t    /**","\t     * Shortcut function to the HMAC's object interface.","\t     *","\t     * @param {WordArray|string} message The message to hash.","\t     * @param {WordArray|string} key The secret key.","\t     *","\t     * @return {WordArray} The HMAC.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var hmac = CryptoJS.HmacRIPEMD160(message, key);","\t     */","\t    C.HmacRIPEMD160 = Hasher._createHmacHelper(RIPEMD160);","\t}(Math));","","","\treturn CryptoJS.RIPEMD160;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"27":1,"29":1,"30":1,"31":1,"32":1,"33":1,"36":1,"42":1,"48":1,"54":1,"61":1,"62":1,"67":1,"69":0,"75":0,"77":0,"78":0,"81":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"99":0,"100":0,"101":0,"102":0,"103":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"117":0,"119":0,"120":0,"121":0,"122":0,"123":0,"124":0,"125":0,"126":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":0,"136":0,"138":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0,"160":0,"161":0,"163":0,"164":0,"167":0,"168":0,"172":0,"175":0,"178":0,"179":0,"182":0,"184":0,"187":0,"192":0,"196":0,"197":0,"199":0,"204":1,"205":0,"209":1,"210":0,"213":1,"214":0,"217":1,"218":0,"221":1,"222":0,"226":1,"227":0,"245":1,"261":1,"265":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/hmac.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/hmac.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":15},"end":{"line":39,"column":38}}},"5":{"name":"(anonymous_5)","line":86,"loc":{"start":{"line":86,"column":16},"end":{"line":86,"column":28}}},"6":{"name":"(anonymous_6)","line":107,"loc":{"start":{"line":107,"column":17},"end":{"line":107,"column":42}}},"7":{"name":"(anonymous_7)","line":128,"loc":{"start":{"line":128,"column":19},"end":{"line":128,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":143,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":140,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":23}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":27}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":25}},"14":{"start":{"line":28,"column":5},"end":{"line":139,"column":8}},"15":{"start":{"line":41,"column":13},"end":{"line":41,"column":55}},"16":{"start":{"line":44,"column":13},"end":{"line":46,"column":14}},"17":{"start":{"line":45,"column":17},"end":{"line":45,"column":39}},"18":{"start":{"line":49,"column":13},"end":{"line":49,"column":52}},"19":{"start":{"line":50,"column":13},"end":{"line":50,"column":60}},"20":{"start":{"line":53,"column":13},"end":{"line":55,"column":14}},"21":{"start":{"line":54,"column":17},"end":{"line":54,"column":44}},"22":{"start":{"line":58,"column":13},"end":{"line":58,"column":25}},"23":{"start":{"line":61,"column":13},"end":{"line":61,"column":49}},"24":{"start":{"line":62,"column":13},"end":{"line":62,"column":49}},"25":{"start":{"line":65,"column":13},"end":{"line":65,"column":40}},"26":{"start":{"line":66,"column":13},"end":{"line":66,"column":40}},"27":{"start":{"line":69,"column":13},"end":{"line":72,"column":14}},"28":{"start":{"line":70,"column":17},"end":{"line":70,"column":44}},"29":{"start":{"line":71,"column":17},"end":{"line":71,"column":44}},"30":{"start":{"line":73,"column":13},"end":{"line":73,"column":66}},"31":{"start":{"line":76,"column":13},"end":{"line":76,"column":26}},"32":{"start":{"line":88,"column":13},"end":{"line":88,"column":39}},"33":{"start":{"line":91,"column":13},"end":{"line":91,"column":28}},"34":{"start":{"line":92,"column":13},"end":{"line":92,"column":39}},"35":{"start":{"line":108,"column":13},"end":{"line":108,"column":48}},"36":{"start":{"line":111,"column":13},"end":{"line":111,"column":25}},"37":{"start":{"line":130,"column":13},"end":{"line":130,"column":39}},"38":{"start":{"line":133,"column":13},"end":{"line":133,"column":60}},"39":{"start":{"line":134,"column":13},"end":{"line":134,"column":28}},"40":{"start":{"line":135,"column":13},"end":{"line":135,"column":78}},"41":{"start":{"line":137,"column":13},"end":{"line":137,"column":25}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":44,"type":"if","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":13}},{"start":{"line":44,"column":13},"end":{"line":44,"column":13}}]},"5":{"line":53,"type":"if","locations":[{"start":{"line":53,"column":13},"end":{"line":53,"column":13}},{"start":{"line":53,"column":13},"end":{"line":53,"column":13}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Base = C_lib.Base;","\t    var C_enc = C.enc;","\t    var Utf8 = C_enc.Utf8;","\t    var C_algo = C.algo;","","\t    /**","\t     * HMAC algorithm.","\t     */","\t    var HMAC = C_algo.HMAC = Base.extend({","\t        /**","\t         * Initializes a newly created HMAC.","\t         *","\t         * @param {Hasher} hasher The hash algorithm to use.","\t         * @param {WordArray|string} key The secret key.","\t         *","\t         * @example","\t         *","\t         *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);","\t         */","\t        init: function (hasher, key) {","\t            // Init hasher","\t            hasher = this._hasher = new hasher.init();","","\t            // Convert string to WordArray, else assume WordArray already","\t            if (typeof key == 'string') {","\t                key = Utf8.parse(key);","\t            }","","\t            // Shortcuts","\t            var hasherBlockSize = hasher.blockSize;","\t            var hasherBlockSizeBytes = hasherBlockSize * 4;","","\t            // Allow arbitrary length keys","\t            if (key.sigBytes > hasherBlockSizeBytes) {","\t                key = hasher.finalize(key);","\t            }","","\t            // Clamp excess bits","\t            key.clamp();","","\t            // Clone key for inner and outer pads","\t            var oKey = this._oKey = key.clone();","\t            var iKey = this._iKey = key.clone();","","\t            // Shortcuts","\t            var oKeyWords = oKey.words;","\t            var iKeyWords = iKey.words;","","\t            // XOR keys with pad constants","\t            for (var i = 0; i < hasherBlockSize; i++) {","\t                oKeyWords[i] ^= 0x5c5c5c5c;","\t                iKeyWords[i] ^= 0x36363636;","\t            }","\t            oKey.sigBytes = iKey.sigBytes = hasherBlockSizeBytes;","","\t            // Set initial values","\t            this.reset();","\t        },","","\t        /**","\t         * Resets this HMAC to its initial state.","\t         *","\t         * @example","\t         *","\t         *     hmacHasher.reset();","\t         */","\t        reset: function () {","\t            // Shortcut","\t            var hasher = this._hasher;","","\t            // Reset","\t            hasher.reset();","\t            hasher.update(this._iKey);","\t        },","","\t        /**","\t         * Updates this HMAC with a message.","\t         *","\t         * @param {WordArray|string} messageUpdate The message to append.","\t         *","\t         * @return {HMAC} This HMAC instance.","\t         *","\t         * @example","\t         *","\t         *     hmacHasher.update('message');","\t         *     hmacHasher.update(wordArray);","\t         */","\t        update: function (messageUpdate) {","\t            this._hasher.update(messageUpdate);","","\t            // Chainable","\t            return this;","\t        },","","\t        /**","\t         * Finalizes the HMAC computation.","\t         * Note that the finalize operation is effectively a destructive, read-once operation.","\t         *","\t         * @param {WordArray|string} messageUpdate (Optional) A final message update.","\t         *","\t         * @return {WordArray} The HMAC.","\t         *","\t         * @example","\t         *","\t         *     var hmac = hmacHasher.finalize();","\t         *     var hmac = hmacHasher.finalize('message');","\t         *     var hmac = hmacHasher.finalize(wordArray);","\t         */","\t        finalize: function (messageUpdate) {","\t            // Shortcut","\t            var hasher = this._hasher;","","\t            // Compute HMAC","\t            var innerHash = hasher.finalize(messageUpdate);","\t            hasher.reset();","\t            var hmac = hasher.finalize(this._oKey.clone().concat(innerHash));","","\t            return hmac;","\t        }","\t    });","\t}());","","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"28":1,"41":0,"44":0,"45":0,"49":0,"50":0,"53":0,"54":0,"58":0,"61":0,"62":0,"65":0,"66":0,"69":0,"70":0,"71":0,"73":0,"76":0,"88":0,"91":0,"92":0,"108":0,"111":0,"130":0,"133":0,"134":0,"135":0,"137":0}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pbkdf2.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pbkdf2.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":1,"42":0,"43":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":30}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":44}}},"6":{"name":"(anonymous_6)","line":137,"loc":{"start":{"line":137,"column":16},"end":{"line":137,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":145,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":94}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":50}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":140,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":37}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":28}},"14":{"start":{"line":24,"column":5},"end":{"line":24,"column":28}},"15":{"start":{"line":29,"column":5},"end":{"line":118,"column":8}},"16":{"start":{"line":55,"column":13},"end":{"line":55,"column":45}},"17":{"start":{"line":72,"column":13},"end":{"line":72,"column":32}},"18":{"start":{"line":75,"column":13},"end":{"line":75,"column":58}},"19":{"start":{"line":78,"column":13},"end":{"line":78,"column":49}},"20":{"start":{"line":79,"column":13},"end":{"line":79,"column":61}},"21":{"start":{"line":82,"column":13},"end":{"line":82,"column":52}},"22":{"start":{"line":83,"column":13},"end":{"line":83,"column":52}},"23":{"start":{"line":84,"column":13},"end":{"line":84,"column":39}},"24":{"start":{"line":85,"column":13},"end":{"line":85,"column":45}},"25":{"start":{"line":88,"column":13},"end":{"line":113,"column":14}},"26":{"start":{"line":89,"column":17},"end":{"line":89,"column":68}},"27":{"start":{"line":90,"column":17},"end":{"line":90,"column":30}},"28":{"start":{"line":93,"column":17},"end":{"line":93,"column":46}},"29":{"start":{"line":94,"column":17},"end":{"line":94,"column":58}},"30":{"start":{"line":97,"column":17},"end":{"line":97,"column":42}},"31":{"start":{"line":98,"column":17},"end":{"line":109,"column":18}},"32":{"start":{"line":99,"column":21},"end":{"line":99,"column":64}},"33":{"start":{"line":100,"column":21},"end":{"line":100,"column":34}},"34":{"start":{"line":103,"column":21},"end":{"line":103,"column":64}},"35":{"start":{"line":106,"column":21},"end":{"line":108,"column":22}},"36":{"start":{"line":107,"column":25},"end":{"line":107,"column":63}},"37":{"start":{"line":111,"column":17},"end":{"line":111,"column":42}},"38":{"start":{"line":112,"column":17},"end":{"line":112,"column":38}},"39":{"start":{"line":114,"column":13},"end":{"line":114,"column":47}},"40":{"start":{"line":116,"column":13},"end":{"line":116,"column":31}},"41":{"start":{"line":137,"column":5},"end":{"line":139,"column":7}},"42":{"start":{"line":138,"column":9},"end":{"line":138,"column":59}},"43":{"start":{"line":143,"column":1},"end":{"line":143,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Base = C_lib.Base;","\t    var WordArray = C_lib.WordArray;","\t    var C_algo = C.algo;","\t    var SHA1 = C_algo.SHA1;","\t    var HMAC = C_algo.HMAC;","","\t    /**","\t     * Password-Based Key Derivation Function 2 algorithm.","\t     */","\t    var PBKDF2 = C_algo.PBKDF2 = Base.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)","\t         * @property {Hasher} hasher The hasher to use. Default: SHA1","\t         * @property {number} iterations The number of iterations to perform. Default: 1","\t         */","\t        cfg: Base.extend({","\t            keySize: 128/32,","\t            hasher: SHA1,","\t            iterations: 1","\t        }),","","\t        /**","\t         * Initializes a newly created key derivation function.","\t         *","\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.","\t         *","\t         * @example","\t         *","\t         *     var kdf = CryptoJS.algo.PBKDF2.create();","\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });","\t         *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });","\t         */","\t        init: function (cfg) {","\t            this.cfg = this.cfg.extend(cfg);","\t        },","","\t        /**","\t         * Computes the Password-Based Key Derivation Function 2.","\t         *","\t         * @param {WordArray|string} password The password.","\t         * @param {WordArray|string} salt A salt.","\t         *","\t         * @return {WordArray} The derived key.","\t         *","\t         * @example","\t         *","\t         *     var key = kdf.compute(password, salt);","\t         */","\t        compute: function (password, salt) {","\t            // Shortcut","\t            var cfg = this.cfg;","","\t            // Init HMAC","\t            var hmac = HMAC.create(cfg.hasher, password);","","\t            // Initial values","\t            var derivedKey = WordArray.create();","\t            var blockIndex = WordArray.create([0x00000001]);","","\t            // Shortcuts","\t            var derivedKeyWords = derivedKey.words;","\t            var blockIndexWords = blockIndex.words;","\t            var keySize = cfg.keySize;","\t            var iterations = cfg.iterations;","","\t            // Generate key","\t            while (derivedKeyWords.length < keySize) {","\t                var block = hmac.update(salt).finalize(blockIndex);","\t                hmac.reset();","","\t                // Shortcuts","\t                var blockWords = block.words;","\t                var blockWordsLength = blockWords.length;","","\t                // Iterations","\t                var intermediate = block;","\t                for (var i = 1; i < iterations; i++) {","\t                    intermediate = hmac.finalize(intermediate);","\t                    hmac.reset();","","\t                    // Shortcut","\t                    var intermediateWords = intermediate.words;","","\t                    // XOR intermediate with block","\t                    for (var j = 0; j < blockWordsLength; j++) {","\t                        blockWords[j] ^= intermediateWords[j];","\t                    }","\t                }","","\t                derivedKey.concat(block);","\t                blockIndexWords[0]++;","\t            }","\t            derivedKey.sigBytes = keySize * 4;","","\t            return derivedKey;","\t        }","\t    });","","\t    /**","\t     * Computes the Password-Based Key Derivation Function 2.","\t     *","\t     * @param {WordArray|string} password The password.","\t     * @param {WordArray|string} salt A salt.","\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.","\t     *","\t     * @return {WordArray} The derived key.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var key = CryptoJS.PBKDF2(password, salt);","\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8 });","\t     *     var key = CryptoJS.PBKDF2(password, salt, { keySize: 8, iterations: 1000 });","\t     */","\t    C.PBKDF2 = function (password, salt, cfg) {","\t        return PBKDF2.create(cfg).compute(password, salt);","\t    };","\t}());","","","\treturn CryptoJS.PBKDF2;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"29":1,"55":0,"72":0,"75":0,"78":0,"79":0,"82":0,"83":0,"84":0,"85":0,"88":0,"89":0,"90":0,"93":0,"94":0,"97":0,"98":0,"99":0,"100":0,"103":0,"106":0,"107":0,"111":0,"112":0,"114":0,"116":0,"137":1,"138":0,"143":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/evpkdf.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/evpkdf.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":54,"loc":{"start":{"line":54,"column":15},"end":{"line":54,"column":30}}},"5":{"name":"(anonymous_5)","line":70,"loc":{"start":{"line":70,"column":18},"end":{"line":70,"column":44}}},"6":{"name":"(anonymous_6)","line":124,"loc":{"start":{"line":124,"column":16},"end":{"line":124,"column":47}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":132,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":94}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":50}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":127,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":27}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":37}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":26}},"14":{"start":{"line":29,"column":5},"end":{"line":105,"column":8}},"15":{"start":{"line":55,"column":13},"end":{"line":55,"column":45}},"16":{"start":{"line":72,"column":13},"end":{"line":72,"column":32}},"17":{"start":{"line":75,"column":13},"end":{"line":75,"column":46}},"18":{"start":{"line":78,"column":13},"end":{"line":78,"column":49}},"19":{"start":{"line":81,"column":13},"end":{"line":81,"column":52}},"20":{"start":{"line":82,"column":13},"end":{"line":82,"column":39}},"21":{"start":{"line":83,"column":13},"end":{"line":83,"column":45}},"22":{"start":{"line":86,"column":13},"end":{"line":100,"column":14}},"23":{"start":{"line":87,"column":17},"end":{"line":89,"column":18}},"24":{"start":{"line":88,"column":21},"end":{"line":88,"column":42}},"25":{"start":{"line":90,"column":17},"end":{"line":90,"column":68}},"26":{"start":{"line":91,"column":17},"end":{"line":91,"column":32}},"27":{"start":{"line":94,"column":17},"end":{"line":97,"column":18}},"28":{"start":{"line":95,"column":21},"end":{"line":95,"column":52}},"29":{"start":{"line":96,"column":21},"end":{"line":96,"column":36}},"30":{"start":{"line":99,"column":17},"end":{"line":99,"column":42}},"31":{"start":{"line":101,"column":13},"end":{"line":101,"column":47}},"32":{"start":{"line":103,"column":13},"end":{"line":103,"column":31}},"33":{"start":{"line":124,"column":5},"end":{"line":126,"column":7}},"34":{"start":{"line":125,"column":9},"end":{"line":125,"column":59}},"35":{"start":{"line":130,"column":1},"end":{"line":130,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":17},"end":{"line":87,"column":17}},{"start":{"line":87,"column":17},"end":{"line":87,"column":17}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./sha1\"), require(\"./hmac\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./sha1\", \"./hmac\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Base = C_lib.Base;","\t    var WordArray = C_lib.WordArray;","\t    var C_algo = C.algo;","\t    var MD5 = C_algo.MD5;","","\t    /**","\t     * This key derivation function is meant to conform with EVP_BytesToKey.","\t     * www.openssl.org/docs/crypto/EVP_BytesToKey.html","\t     */","\t    var EvpKDF = C_algo.EvpKDF = Base.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)","\t         * @property {Hasher} hasher The hash algorithm to use. Default: MD5","\t         * @property {number} iterations The number of iterations to perform. Default: 1","\t         */","\t        cfg: Base.extend({","\t            keySize: 128/32,","\t            hasher: MD5,","\t            iterations: 1","\t        }),","","\t        /**","\t         * Initializes a newly created key derivation function.","\t         *","\t         * @param {Object} cfg (Optional) The configuration options to use for the derivation.","\t         *","\t         * @example","\t         *","\t         *     var kdf = CryptoJS.algo.EvpKDF.create();","\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });","\t         *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });","\t         */","\t        init: function (cfg) {","\t            this.cfg = this.cfg.extend(cfg);","\t        },","","\t        /**","\t         * Derives a key from a password.","\t         *","\t         * @param {WordArray|string} password The password.","\t         * @param {WordArray|string} salt A salt.","\t         *","\t         * @return {WordArray} The derived key.","\t         *","\t         * @example","\t         *","\t         *     var key = kdf.compute(password, salt);","\t         */","\t        compute: function (password, salt) {","\t            // Shortcut","\t            var cfg = this.cfg;","","\t            // Init hasher","\t            var hasher = cfg.hasher.create();","","\t            // Initial values","\t            var derivedKey = WordArray.create();","","\t            // Shortcuts","\t            var derivedKeyWords = derivedKey.words;","\t            var keySize = cfg.keySize;","\t            var iterations = cfg.iterations;","","\t            // Generate key","\t            while (derivedKeyWords.length < keySize) {","\t                if (block) {","\t                    hasher.update(block);","\t                }","\t                var block = hasher.update(password).finalize(salt);","\t                hasher.reset();","","\t                // Iterations","\t                for (var i = 1; i < iterations; i++) {","\t                    block = hasher.finalize(block);","\t                    hasher.reset();","\t                }","","\t                derivedKey.concat(block);","\t            }","\t            derivedKey.sigBytes = keySize * 4;","","\t            return derivedKey;","\t        }","\t    });","","\t    /**","\t     * Derives a key from a password.","\t     *","\t     * @param {WordArray|string} password The password.","\t     * @param {WordArray|string} salt A salt.","\t     * @param {Object} cfg (Optional) The configuration options to use for this computation.","\t     *","\t     * @return {WordArray} The derived key.","\t     *","\t     * @static","\t     *","\t     * @example","\t     *","\t     *     var key = CryptoJS.EvpKDF(password, salt);","\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });","\t     *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });","\t     */","\t    C.EvpKDF = function (password, salt, cfg) {","\t        return EvpKDF.create(cfg).compute(password, salt);","\t    };","\t}());","","","\treturn CryptoJS.EvpKDF;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"29":1,"55":0,"72":0,"75":0,"78":0,"81":0,"82":0,"83":0,"86":0,"87":0,"88":0,"90":0,"91":0,"94":0,"95":0,"96":0,"99":0,"101":0,"103":0,"124":1,"125":0,"130":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/cipher-core.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/cipher-core.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":1,"38":7,"39":0,"40":0,"41":1,"42":0,"43":0,"44":1,"45":1,"46":0,"47":0,"48":0,"49":0,"50":1,"51":1,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":1,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":1,"74":1,"75":1,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":1,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":1,"105":0,"106":0,"107":1,"108":1,"109":0,"110":0,"111":0,"112":0,"113":0,"114":0,"115":0,"116":0,"117":0,"118":0,"119":0,"120":0,"121":0,"122":1,"123":0,"124":0,"125":0,"126":0,"127":0,"128":0,"129":0,"130":0,"131":0,"132":0,"133":0,"134":0,"135":1,"136":1,"137":0,"138":0,"139":0,"140":0,"141":0,"142":0,"143":1,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"150":0,"151":0,"152":0,"153":0,"154":0,"155":0},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[1,1],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0],"15":[0,0],"16":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":1,"11":0,"12":7,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":27}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":25},"end":{"line":19,"column":46}}},"4":{"name":"(anonymous_4)","line":62,"loc":{"start":{"line":62,"column":26},"end":{"line":62,"column":46}}},"5":{"name":"(anonymous_5)","line":80,"loc":{"start":{"line":80,"column":26},"end":{"line":80,"column":46}}},"6":{"name":"(anonymous_6)","line":95,"loc":{"start":{"line":95,"column":15},"end":{"line":95,"column":46}}},"7":{"name":"(anonymous_7)","line":114,"loc":{"start":{"line":114,"column":16},"end":{"line":114,"column":28}}},"8":{"name":"(anonymous_8)","line":134,"loc":{"start":{"line":134,"column":18},"end":{"line":134,"column":40}}},"9":{"name":"(anonymous_9)","line":156,"loc":{"start":{"line":156,"column":19},"end":{"line":156,"column":41}}},"10":{"name":"(anonymous_10)","line":189,"loc":{"start":{"line":189,"column":25},"end":{"line":189,"column":37}}},"11":{"name":"selectCipherStrategy","line":190,"loc":{"start":{"line":190,"column":13},"end":{"line":190,"column":48}}},"12":{"name":"(anonymous_12)","line":198,"loc":{"start":{"line":198,"column":20},"end":{"line":198,"column":38}}},"13":{"name":"(anonymous_13)","line":200,"loc":{"start":{"line":200,"column":30},"end":{"line":200,"column":59}}},"14":{"name":"(anonymous_14)","line":204,"loc":{"start":{"line":204,"column":30},"end":{"line":204,"column":62}}},"15":{"name":"(anonymous_15)","line":218,"loc":{"start":{"line":218,"column":22},"end":{"line":218,"column":34}}},"16":{"name":"(anonymous_16)","line":249,"loc":{"start":{"line":249,"column":26},"end":{"line":249,"column":48}}},"17":{"name":"(anonymous_17)","line":265,"loc":{"start":{"line":265,"column":26},"end":{"line":265,"column":48}}},"18":{"name":"(anonymous_18)","line":279,"loc":{"start":{"line":279,"column":15},"end":{"line":279,"column":37}}},"19":{"name":"(anonymous_19)","line":288,"loc":{"start":{"line":288,"column":29},"end":{"line":288,"column":41}}},"20":{"name":"(anonymous_20)","line":308,"loc":{"start":{"line":308,"column":27},"end":{"line":308,"column":52}}},"21":{"name":"(anonymous_21)","line":336,"loc":{"start":{"line":336,"column":27},"end":{"line":336,"column":52}}},"22":{"name":"xorBlock","line":353,"loc":{"start":{"line":353,"column":9},"end":{"line":353,"column":53}}},"23":{"name":"(anonymous_23)","line":397,"loc":{"start":{"line":397,"column":14},"end":{"line":397,"column":41}}},"24":{"name":"(anonymous_24)","line":429,"loc":{"start":{"line":429,"column":16},"end":{"line":429,"column":32}}},"25":{"name":"(anonymous_25)","line":455,"loc":{"start":{"line":455,"column":16},"end":{"line":455,"column":28}}},"26":{"name":"(anonymous_26)","line":476,"loc":{"start":{"line":476,"column":26},"end":{"line":476,"column":51}}},"27":{"name":"(anonymous_27)","line":480,"loc":{"start":{"line":480,"column":22},"end":{"line":480,"column":34}}},"28":{"name":"(anonymous_28)","line":538,"loc":{"start":{"line":538,"column":15},"end":{"line":538,"column":39}}},"29":{"name":"(anonymous_29)","line":557,"loc":{"start":{"line":557,"column":19},"end":{"line":557,"column":40}}},"30":{"name":"(anonymous_30)","line":584,"loc":{"start":{"line":584,"column":20},"end":{"line":584,"column":44}}},"31":{"name":"(anonymous_31)","line":612,"loc":{"start":{"line":612,"column":16},"end":{"line":612,"column":38}}},"32":{"name":"(anonymous_32)","line":664,"loc":{"start":{"line":664,"column":18},"end":{"line":664,"column":55}}},"33":{"name":"(anonymous_33)","line":705,"loc":{"start":{"line":705,"column":18},"end":{"line":705,"column":58}}},"34":{"name":"(anonymous_34)","line":733,"loc":{"start":{"line":733,"column":17},"end":{"line":733,"column":47}}},"35":{"name":"(anonymous_35)","line":768,"loc":{"start":{"line":768,"column":18},"end":{"line":768,"column":61}}},"36":{"name":"(anonymous_36)","line":817,"loc":{"start":{"line":817,"column":18},"end":{"line":817,"column":60}}},"37":{"name":"(anonymous_37)","line":853,"loc":{"start":{"line":853,"column":18},"end":{"line":853,"column":63}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":875,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":56}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":30}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":872,"column":6}},"8":{"start":{"line":21,"column":5},"end":{"line":21,"column":22}},"9":{"start":{"line":22,"column":5},"end":{"line":22,"column":23}},"10":{"start":{"line":23,"column":5},"end":{"line":23,"column":27}},"11":{"start":{"line":24,"column":5},"end":{"line":24,"column":37}},"12":{"start":{"line":25,"column":5},"end":{"line":25,"column":63}},"13":{"start":{"line":26,"column":5},"end":{"line":26,"column":23}},"14":{"start":{"line":27,"column":5},"end":{"line":27,"column":27}},"15":{"start":{"line":28,"column":5},"end":{"line":28,"column":31}},"16":{"start":{"line":29,"column":5},"end":{"line":29,"column":25}},"17":{"start":{"line":30,"column":5},"end":{"line":30,"column":32}},"18":{"start":{"line":40,"column":5},"end":{"line":210,"column":8}},"19":{"start":{"line":63,"column":13},"end":{"line":63,"column":64}},"20":{"start":{"line":81,"column":13},"end":{"line":81,"column":64}},"21":{"start":{"line":97,"column":13},"end":{"line":97,"column":45}},"22":{"start":{"line":100,"column":13},"end":{"line":100,"column":41}},"23":{"start":{"line":101,"column":13},"end":{"line":101,"column":29}},"24":{"start":{"line":104,"column":13},"end":{"line":104,"column":26}},"25":{"start":{"line":116,"column":13},"end":{"line":116,"column":53}},"26":{"start":{"line":119,"column":13},"end":{"line":119,"column":29}},"27":{"start":{"line":136,"column":13},"end":{"line":136,"column":38}},"28":{"start":{"line":139,"column":13},"end":{"line":139,"column":36}},"29":{"start":{"line":158,"column":13},"end":{"line":160,"column":14}},"30":{"start":{"line":159,"column":17},"end":{"line":159,"column":42}},"31":{"start":{"line":163,"column":13},"end":{"line":163,"column":57}},"32":{"start":{"line":165,"column":13},"end":{"line":165,"column":39}},"33":{"start":{"line":190,"column":13},"end":{"line":196,"column":14}},"34":{"start":{"line":191,"column":17},"end":{"line":195,"column":18}},"35":{"start":{"line":192,"column":21},"end":{"line":192,"column":48}},"36":{"start":{"line":194,"column":21},"end":{"line":194,"column":47}},"37":{"start":{"line":198,"column":13},"end":{"line":208,"column":15}},"38":{"start":{"line":199,"column":17},"end":{"line":207,"column":19}},"39":{"start":{"line":201,"column":25},"end":{"line":201,"column":93}},"40":{"start":{"line":205,"column":25},"end":{"line":205,"column":96}},"41":{"start":{"line":217,"column":5},"end":{"line":226,"column":8}},"42":{"start":{"line":220,"column":13},"end":{"line":220,"column":65}},"43":{"start":{"line":222,"column":13},"end":{"line":222,"column":41}},"44":{"start":{"line":231,"column":5},"end":{"line":231,"column":30}},"45":{"start":{"line":236,"column":5},"end":{"line":283,"column":8}},"46":{"start":{"line":250,"column":13},"end":{"line":250,"column":54}},"47":{"start":{"line":266,"column":13},"end":{"line":266,"column":54}},"48":{"start":{"line":280,"column":13},"end":{"line":280,"column":35}},"49":{"start":{"line":281,"column":13},"end":{"line":281,"column":27}},"50":{"start":{"line":288,"column":5},"end":{"line":374,"column":10}},"51":{"start":{"line":292,"column":9},"end":{"line":292,"column":44}},"52":{"start":{"line":297,"column":9},"end":{"line":320,"column":12}},"53":{"start":{"line":310,"column":17},"end":{"line":310,"column":43}},"54":{"start":{"line":311,"column":17},"end":{"line":311,"column":50}},"55":{"start":{"line":314,"column":17},"end":{"line":314,"column":63}},"56":{"start":{"line":315,"column":17},"end":{"line":315,"column":52}},"57":{"start":{"line":318,"column":17},"end":{"line":318,"column":75}},"58":{"start":{"line":325,"column":9},"end":{"line":351,"column":12}},"59":{"start":{"line":338,"column":17},"end":{"line":338,"column":43}},"60":{"start":{"line":339,"column":17},"end":{"line":339,"column":50}},"61":{"start":{"line":342,"column":17},"end":{"line":342,"column":73}},"62":{"start":{"line":345,"column":17},"end":{"line":345,"column":52}},"63":{"start":{"line":346,"column":17},"end":{"line":346,"column":63}},"64":{"start":{"line":349,"column":17},"end":{"line":349,"column":45}},"65":{"start":{"line":353,"column":9},"end":{"line":371,"column":10}},"66":{"start":{"line":355,"column":13},"end":{"line":355,"column":31}},"67":{"start":{"line":358,"column":13},"end":{"line":365,"column":14}},"68":{"start":{"line":359,"column":17},"end":{"line":359,"column":32}},"69":{"start":{"line":362,"column":17},"end":{"line":362,"column":38}},"70":{"start":{"line":364,"column":17},"end":{"line":364,"column":45}},"71":{"start":{"line":368,"column":13},"end":{"line":370,"column":14}},"72":{"start":{"line":369,"column":17},"end":{"line":369,"column":47}},"73":{"start":{"line":373,"column":9},"end":{"line":373,"column":20}},"74":{"start":{"line":379,"column":5},"end":{"line":379,"column":28}},"75":{"start":{"line":384,"column":5},"end":{"line":436,"column":7}},"76":{"start":{"line":399,"column":13},"end":{"line":399,"column":48}},"77":{"start":{"line":402,"column":13},"end":{"line":402,"column":81}},"78":{"start":{"line":405,"column":13},"end":{"line":405,"column":116}},"79":{"start":{"line":408,"column":13},"end":{"line":408,"column":35}},"80":{"start":{"line":409,"column":13},"end":{"line":411,"column":14}},"81":{"start":{"line":410,"column":17},"end":{"line":410,"column":48}},"82":{"start":{"line":412,"column":13},"end":{"line":412,"column":73}},"83":{"start":{"line":415,"column":13},"end":{"line":415,"column":34}},"84":{"start":{"line":431,"column":13},"end":{"line":431,"column":78}},"85":{"start":{"line":434,"column":13},"end":{"line":434,"column":44}},"86":{"start":{"line":443,"column":5},"end":{"line":503,"column":8}},"87":{"start":{"line":457,"column":13},"end":{"line":457,"column":37}},"88":{"start":{"line":460,"column":13},"end":{"line":460,"column":32}},"89":{"start":{"line":461,"column":13},"end":{"line":461,"column":29}},"90":{"start":{"line":462,"column":13},"end":{"line":462,"column":33}},"91":{"start":{"line":465,"column":13},"end":{"line":472,"column":14}},"92":{"start":{"line":466,"column":17},"end":{"line":466,"column":56}},"93":{"start":{"line":468,"column":17},"end":{"line":468,"column":56}},"94":{"start":{"line":471,"column":17},"end":{"line":471,"column":41}},"95":{"start":{"line":473,"column":13},"end":{"line":473,"column":71}},"96":{"start":{"line":477,"column":13},"end":{"line":477,"column":52}},"97":{"start":{"line":482,"column":13},"end":{"line":482,"column":44}},"98":{"start":{"line":485,"column":13},"end":{"line":497,"column":14}},"99":{"start":{"line":487,"column":17},"end":{"line":487,"column":57}},"100":{"start":{"line":490,"column":17},"end":{"line":490,"column":69}},"101":{"start":{"line":493,"column":17},"end":{"line":493,"column":69}},"102":{"start":{"line":496,"column":17},"end":{"line":496,"column":53}},"103":{"start":{"line":499,"column":13},"end":{"line":499,"column":41}},"104":{"start":{"line":518,"column":5},"end":{"line":560,"column":8}},"105":{"start":{"line":539,"column":13},"end":{"line":539,"column":38}},"106":{"start":{"line":558,"column":13},"end":{"line":558,"column":66}},"107":{"start":{"line":565,"column":5},"end":{"line":565,"column":34}},"108":{"start":{"line":570,"column":5},"end":{"line":631,"column":7}},"109":{"start":{"line":586,"column":13},"end":{"line":586,"column":54}},"110":{"start":{"line":587,"column":13},"end":{"line":587,"column":42}},"111":{"start":{"line":590,"column":13},"end":{"line":594,"column":14}},"112":{"start":{"line":591,"column":17},"end":{"line":591,"column":108}},"113":{"start":{"line":593,"column":17},"end":{"line":593,"column":44}},"114":{"start":{"line":596,"column":13},"end":{"line":596,"column":47}},"115":{"start":{"line":614,"column":13},"end":{"line":614,"column":55}},"116":{"start":{"line":617,"column":13},"end":{"line":617,"column":52}},"117":{"start":{"line":620,"column":13},"end":{"line":627,"column":14}},"118":{"start":{"line":622,"column":17},"end":{"line":622,"column":74}},"119":{"start":{"line":625,"column":17},"end":{"line":625,"column":46}},"120":{"start":{"line":626,"column":17},"end":{"line":626,"column":43}},"121":{"start":{"line":629,"column":13},"end":{"line":629,"column":80}},"122":{"start":{"line":636,"column":5},"end":{"line":740,"column":8}},"123":{"start":{"line":666,"column":13},"end":{"line":666,"column":40}},"124":{"start":{"line":669,"column":13},"end":{"line":669,"column":62}},"125":{"start":{"line":670,"column":13},"end":{"line":670,"column":58}},"126":{"start":{"line":673,"column":13},"end":{"line":673,"column":43}},"127":{"start":{"line":676,"column":13},"end":{"line":685,"column":16}},"128":{"start":{"line":707,"column":13},"end":{"line":707,"column":40}},"129":{"start":{"line":710,"column":13},"end":{"line":710,"column":62}},"130":{"start":{"line":713,"column":13},"end":{"line":713,"column":94}},"131":{"start":{"line":715,"column":13},"end":{"line":715,"column":30}},"132":{"start":{"line":734,"column":13},"end":{"line":738,"column":14}},"133":{"start":{"line":735,"column":17},"end":{"line":735,"column":55}},"134":{"start":{"line":737,"column":17},"end":{"line":737,"column":35}},"135":{"start":{"line":745,"column":5},"end":{"line":745,"column":28}},"136":{"start":{"line":750,"column":5},"end":{"line":784,"column":7}},"137":{"start":{"line":770,"column":13},"end":{"line":772,"column":14}},"138":{"start":{"line":771,"column":17},"end":{"line":771,"column":47}},"139":{"start":{"line":775,"column":13},"end":{"line":775,"column":92}},"140":{"start":{"line":778,"column":13},"end":{"line":778,"column":77}},"141":{"start":{"line":779,"column":13},"end":{"line":779,"column":40}},"142":{"start":{"line":782,"column":13},"end":{"line":782,"column":74}},"143":{"start":{"line":790,"column":5},"end":{"line":871,"column":8}},"144":{"start":{"line":819,"column":13},"end":{"line":819,"column":40}},"145":{"start":{"line":822,"column":13},"end":{"line":822,"column":90}},"146":{"start":{"line":825,"column":13},"end":{"line":825,"column":39}},"147":{"start":{"line":828,"column":13},"end":{"line":828,"column":109}},"148":{"start":{"line":831,"column":13},"end":{"line":831,"column":45}},"149":{"start":{"line":833,"column":13},"end":{"line":833,"column":31}},"150":{"start":{"line":855,"column":13},"end":{"line":855,"column":40}},"151":{"start":{"line":858,"column":13},"end":{"line":858,"column":62}},"152":{"start":{"line":861,"column":13},"end":{"line":861,"column":107}},"153":{"start":{"line":864,"column":13},"end":{"line":864,"column":39}},"154":{"start":{"line":867,"column":13},"end":{"line":867,"column":111}},"155":{"start":{"line":869,"column":13},"end":{"line":869,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":19,"type":"binary-expr","locations":[{"start":{"line":19,"column":1},"end":{"line":19,"column":20}},{"start":{"line":19,"column":25},"end":{"line":872,"column":4}}]},"5":{"line":158,"type":"if","locations":[{"start":{"line":158,"column":13},"end":{"line":158,"column":13}},{"start":{"line":158,"column":13},"end":{"line":158,"column":13}}]},"6":{"line":191,"type":"if","locations":[{"start":{"line":191,"column":17},"end":{"line":191,"column":17}},{"start":{"line":191,"column":17},"end":{"line":191,"column":17}}]},"7":{"line":358,"type":"if","locations":[{"start":{"line":358,"column":13},"end":{"line":358,"column":13}},{"start":{"line":358,"column":13},"end":{"line":358,"column":13}}]},"8":{"line":465,"type":"if","locations":[{"start":{"line":465,"column":13},"end":{"line":465,"column":13}},{"start":{"line":465,"column":13},"end":{"line":465,"column":13}}]},"9":{"line":473,"type":"binary-expr","locations":[{"start":{"line":473,"column":55},"end":{"line":473,"column":57}},{"start":{"line":473,"column":61},"end":{"line":473,"column":69}}]},"10":{"line":485,"type":"if","locations":[{"start":{"line":485,"column":13},"end":{"line":485,"column":13}},{"start":{"line":485,"column":13},"end":{"line":485,"column":13}}]},"11":{"line":558,"type":"binary-expr","locations":[{"start":{"line":558,"column":21},"end":{"line":558,"column":30}},{"start":{"line":558,"column":34},"end":{"line":558,"column":48}}]},"12":{"line":590,"type":"if","locations":[{"start":{"line":590,"column":13},"end":{"line":590,"column":13}},{"start":{"line":590,"column":13},"end":{"line":590,"column":13}}]},"13":{"line":620,"type":"if","locations":[{"start":{"line":620,"column":13},"end":{"line":620,"column":13}},{"start":{"line":620,"column":13},"end":{"line":620,"column":13}}]},"14":{"line":620,"type":"binary-expr","locations":[{"start":{"line":620,"column":17},"end":{"line":620,"column":49}},{"start":{"line":620,"column":53},"end":{"line":620,"column":85}}]},"15":{"line":734,"type":"if","locations":[{"start":{"line":734,"column":13},"end":{"line":734,"column":13}},{"start":{"line":734,"column":13},"end":{"line":734,"column":13}}]},"16":{"line":770,"type":"if","locations":[{"start":{"line":770,"column":13},"end":{"line":770,"column":13}},{"start":{"line":770,"column":13},"end":{"line":770,"column":13}}]}},"code":[";(function (root, factory) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Cipher core components.","\t */","\tCryptoJS.lib.Cipher || (function (undefined) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var Base = C_lib.Base;","\t    var WordArray = C_lib.WordArray;","\t    var BufferedBlockAlgorithm = C_lib.BufferedBlockAlgorithm;","\t    var C_enc = C.enc;","\t    var Utf8 = C_enc.Utf8;","\t    var Base64 = C_enc.Base64;","\t    var C_algo = C.algo;","\t    var EvpKDF = C_algo.EvpKDF;","","\t    /**","\t     * Abstract base cipher template.","\t     *","\t     * @property {number} keySize This cipher's key size. Default: 4 (128 bits)","\t     * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)","\t     * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.","\t     * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.","\t     */","\t    var Cipher = C_lib.Cipher = BufferedBlockAlgorithm.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {WordArray} iv The IV to use for this operation.","\t         */","\t        cfg: Base.extend(),","","\t        /**","\t         * Creates this cipher in encryption mode.","\t         *","\t         * @param {WordArray} key The key.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {Cipher} A cipher instance.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });","\t         */","\t        createEncryptor: function (key, cfg) {","\t            return this.create(this._ENC_XFORM_MODE, key, cfg);","\t        },","","\t        /**","\t         * Creates this cipher in decryption mode.","\t         *","\t         * @param {WordArray} key The key.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {Cipher} A cipher instance.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });","\t         */","\t        createDecryptor: function (key, cfg) {","\t            return this.create(this._DEC_XFORM_MODE, key, cfg);","\t        },","","\t        /**","\t         * Initializes a newly created cipher.","\t         *","\t         * @param {number} xformMode Either the encryption or decryption transormation mode constant.","\t         * @param {WordArray} key The key.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @example","\t         *","\t         *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });","\t         */","\t        init: function (xformMode, key, cfg) {","\t            // Apply config defaults","\t            this.cfg = this.cfg.extend(cfg);","","\t            // Store transform mode and key","\t            this._xformMode = xformMode;","\t            this._key = key;","","\t            // Set initial values","\t            this.reset();","\t        },","","\t        /**","\t         * Resets this cipher to its initial state.","\t         *","\t         * @example","\t         *","\t         *     cipher.reset();","\t         */","\t        reset: function () {","\t            // Reset data buffer","\t            BufferedBlockAlgorithm.reset.call(this);","","\t            // Perform concrete-cipher logic","\t            this._doReset();","\t        },","","\t        /**","\t         * Adds data to be encrypted or decrypted.","\t         *","\t         * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.","\t         *","\t         * @return {WordArray} The data after processing.","\t         *","\t         * @example","\t         *","\t         *     var encrypted = cipher.process('data');","\t         *     var encrypted = cipher.process(wordArray);","\t         */","\t        process: function (dataUpdate) {","\t            // Append","\t            this._append(dataUpdate);","","\t            // Process available blocks","\t            return this._process();","\t        },","","\t        /**","\t         * Finalizes the encryption or decryption process.","\t         * Note that the finalize operation is effectively a destructive, read-once operation.","\t         *","\t         * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.","\t         *","\t         * @return {WordArray} The data after final processing.","\t         *","\t         * @example","\t         *","\t         *     var encrypted = cipher.finalize();","\t         *     var encrypted = cipher.finalize('data');","\t         *     var encrypted = cipher.finalize(wordArray);","\t         */","\t        finalize: function (dataUpdate) {","\t            // Final data update","\t            if (dataUpdate) {","\t                this._append(dataUpdate);","\t            }","","\t            // Perform concrete-cipher logic","\t            var finalProcessedData = this._doFinalize();","","\t            return finalProcessedData;","\t        },","","\t        keySize: 128/32,","","\t        ivSize: 128/32,","","\t        _ENC_XFORM_MODE: 1,","","\t        _DEC_XFORM_MODE: 2,","","\t        /**","\t         * Creates shortcut functions to a cipher's object interface.","\t         *","\t         * @param {Cipher} cipher The cipher to create a helper for.","\t         *","\t         * @return {Object} An object with encrypt and decrypt shortcut functions.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);","\t         */","\t        _createHelper: (function () {","\t            function selectCipherStrategy(key) {","\t                if (typeof key == 'string') {","\t                    return PasswordBasedCipher;","\t                } else {","\t                    return SerializableCipher;","\t                }","\t            }","","\t            return function (cipher) {","\t                return {","\t                    encrypt: function (message, key, cfg) {","\t                        return selectCipherStrategy(key).encrypt(cipher, message, key, cfg);","\t                    },","","\t                    decrypt: function (ciphertext, key, cfg) {","\t                        return selectCipherStrategy(key).decrypt(cipher, ciphertext, key, cfg);","\t                    }","\t                };","\t            };","\t        }())","\t    });","","\t    /**","\t     * Abstract base stream cipher template.","\t     *","\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 1 (32 bits)","\t     */","\t    var StreamCipher = C_lib.StreamCipher = Cipher.extend({","\t        _doFinalize: function () {","\t            // Process partial blocks","\t            var finalProcessedBlocks = this._process(!!'flush');","","\t            return finalProcessedBlocks;","\t        },","","\t        blockSize: 1","\t    });","","\t    /**","\t     * Mode namespace.","\t     */","\t    var C_mode = C.mode = {};","","\t    /**","\t     * Abstract base block cipher mode template.","\t     */","\t    var BlockCipherMode = C_lib.BlockCipherMode = Base.extend({","\t        /**","\t         * Creates this mode for encryption.","\t         *","\t         * @param {Cipher} cipher A block cipher instance.","\t         * @param {Array} iv The IV words.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);","\t         */","\t        createEncryptor: function (cipher, iv) {","\t            return this.Encryptor.create(cipher, iv);","\t        },","","\t        /**","\t         * Creates this mode for decryption.","\t         *","\t         * @param {Cipher} cipher A block cipher instance.","\t         * @param {Array} iv The IV words.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);","\t         */","\t        createDecryptor: function (cipher, iv) {","\t            return this.Decryptor.create(cipher, iv);","\t        },","","\t        /**","\t         * Initializes a newly created mode.","\t         *","\t         * @param {Cipher} cipher A block cipher instance.","\t         * @param {Array} iv The IV words.","\t         *","\t         * @example","\t         *","\t         *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);","\t         */","\t        init: function (cipher, iv) {","\t            this._cipher = cipher;","\t            this._iv = iv;","\t        }","\t    });","","\t    /**","\t     * Cipher Block Chaining mode.","\t     */","\t    var CBC = C_mode.CBC = (function () {","\t        /**","\t         * Abstract base CBC mode.","\t         */","\t        var CBC = BlockCipherMode.extend();","","\t        /**","\t         * CBC encryptor.","\t         */","\t        CBC.Encryptor = CBC.extend({","\t            /**","\t             * Processes the data block at offset.","\t             *","\t             * @param {Array} words The data words to operate on.","\t             * @param {number} offset The offset where the block starts.","\t             *","\t             * @example","\t             *","\t             *     mode.processBlock(data.words, offset);","\t             */","\t            processBlock: function (words, offset) {","\t                // Shortcuts","\t                var cipher = this._cipher;","\t                var blockSize = cipher.blockSize;","","\t                // XOR and encrypt","\t                xorBlock.call(this, words, offset, blockSize);","\t                cipher.encryptBlock(words, offset);","","\t                // Remember this block to use with next block","\t                this._prevBlock = words.slice(offset, offset + blockSize);","\t            }","\t        });","","\t        /**","\t         * CBC decryptor.","\t         */","\t        CBC.Decryptor = CBC.extend({","\t            /**","\t             * Processes the data block at offset.","\t             *","\t             * @param {Array} words The data words to operate on.","\t             * @param {number} offset The offset where the block starts.","\t             *","\t             * @example","\t             *","\t             *     mode.processBlock(data.words, offset);","\t             */","\t            processBlock: function (words, offset) {","\t                // Shortcuts","\t                var cipher = this._cipher;","\t                var blockSize = cipher.blockSize;","","\t                // Remember this block to use with next block","\t                var thisBlock = words.slice(offset, offset + blockSize);","","\t                // Decrypt and XOR","\t                cipher.decryptBlock(words, offset);","\t                xorBlock.call(this, words, offset, blockSize);","","\t                // This block becomes the previous block","\t                this._prevBlock = thisBlock;","\t            }","\t        });","","\t        function xorBlock(words, offset, blockSize) {","\t            // Shortcut","\t            var iv = this._iv;","","\t            // Choose mixing block","\t            if (iv) {","\t                var block = iv;","","\t                // Remove IV for subsequent blocks","\t                this._iv = undefined;","\t            } else {","\t                var block = this._prevBlock;","\t            }","","\t            // XOR blocks","\t            for (var i = 0; i < blockSize; i++) {","\t                words[offset + i] ^= block[i];","\t            }","\t        }","","\t        return CBC;","\t    }());","","\t    /**","\t     * Padding namespace.","\t     */","\t    var C_pad = C.pad = {};","","\t    /**","\t     * PKCS #5/7 padding strategy.","\t     */","\t    var Pkcs7 = C_pad.Pkcs7 = {","\t        /**","\t         * Pads data using the algorithm defined in PKCS #5/7.","\t         *","\t         * @param {WordArray} data The data to pad.","\t         * @param {number} blockSize The multiple that the data should be padded to.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);","\t         */","\t        pad: function (data, blockSize) {","\t            // Shortcut","\t            var blockSizeBytes = blockSize * 4;","","\t            // Count padding bytes","\t            var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;","","\t            // Create padding word","\t            var paddingWord = (nPaddingBytes << 24) | (nPaddingBytes << 16) | (nPaddingBytes << 8) | nPaddingBytes;","","\t            // Create padding","\t            var paddingWords = [];","\t            for (var i = 0; i < nPaddingBytes; i += 4) {","\t                paddingWords.push(paddingWord);","\t            }","\t            var padding = WordArray.create(paddingWords, nPaddingBytes);","","\t            // Add padding","\t            data.concat(padding);","\t        },","","\t        /**","\t         * Unpads data that had been padded using the algorithm defined in PKCS #5/7.","\t         *","\t         * @param {WordArray} data The data to unpad.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     CryptoJS.pad.Pkcs7.unpad(wordArray);","\t         */","\t        unpad: function (data) {","\t            // Get number of padding bytes from last byte","\t            var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;","","\t            // Remove padding","\t            data.sigBytes -= nPaddingBytes;","\t        }","\t    };","","\t    /**","\t     * Abstract base block cipher template.","\t     *","\t     * @property {number} blockSize The number of 32-bit words this cipher operates on. Default: 4 (128 bits)","\t     */","\t    var BlockCipher = C_lib.BlockCipher = Cipher.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {Mode} mode The block mode to use. Default: CBC","\t         * @property {Padding} padding The padding strategy to use. Default: Pkcs7","\t         */","\t        cfg: Cipher.cfg.extend({","\t            mode: CBC,","\t            padding: Pkcs7","\t        }),","","\t        reset: function () {","\t            // Reset cipher","\t            Cipher.reset.call(this);","","\t            // Shortcuts","\t            var cfg = this.cfg;","\t            var iv = cfg.iv;","\t            var mode = cfg.mode;","","\t            // Reset block mode","\t            if (this._xformMode == this._ENC_XFORM_MODE) {","\t                var modeCreator = mode.createEncryptor;","\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {","\t                var modeCreator = mode.createDecryptor;","","\t                // Keep at least one block in the buffer for unpadding","\t                this._minBufferSize = 1;","\t            }","\t            this._mode = modeCreator.call(mode, this, iv && iv.words);","\t        },","","\t        _doProcessBlock: function (words, offset) {","\t            this._mode.processBlock(words, offset);","\t        },","","\t        _doFinalize: function () {","\t            // Shortcut","\t            var padding = this.cfg.padding;","","\t            // Finalize","\t            if (this._xformMode == this._ENC_XFORM_MODE) {","\t                // Pad data","\t                padding.pad(this._data, this.blockSize);","","\t                // Process final blocks","\t                var finalProcessedBlocks = this._process(!!'flush');","\t            } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {","\t                // Process final blocks","\t                var finalProcessedBlocks = this._process(!!'flush');","","\t                // Unpad data","\t                padding.unpad(finalProcessedBlocks);","\t            }","","\t            return finalProcessedBlocks;","\t        },","","\t        blockSize: 128/32","\t    });","","\t    /**","\t     * A collection of cipher parameters.","\t     *","\t     * @property {WordArray} ciphertext The raw ciphertext.","\t     * @property {WordArray} key The key to this ciphertext.","\t     * @property {WordArray} iv The IV used in the ciphering operation.","\t     * @property {WordArray} salt The salt used with a key derivation function.","\t     * @property {Cipher} algorithm The cipher algorithm.","\t     * @property {Mode} mode The block mode used in the ciphering operation.","\t     * @property {Padding} padding The padding scheme used in the ciphering operation.","\t     * @property {number} blockSize The block size of the cipher.","\t     * @property {Format} formatter The default formatting strategy to convert this cipher params object to a string.","\t     */","\t    var CipherParams = C_lib.CipherParams = Base.extend({","\t        /**","\t         * Initializes a newly created cipher params object.","\t         *","\t         * @param {Object} cipherParams An object with any of the possible cipher parameters.","\t         *","\t         * @example","\t         *","\t         *     var cipherParams = CryptoJS.lib.CipherParams.create({","\t         *         ciphertext: ciphertextWordArray,","\t         *         key: keyWordArray,","\t         *         iv: ivWordArray,","\t         *         salt: saltWordArray,","\t         *         algorithm: CryptoJS.algo.AES,","\t         *         mode: CryptoJS.mode.CBC,","\t         *         padding: CryptoJS.pad.PKCS7,","\t         *         blockSize: 4,","\t         *         formatter: CryptoJS.format.OpenSSL","\t         *     });","\t         */","\t        init: function (cipherParams) {","\t            this.mixIn(cipherParams);","\t        },","","\t        /**","\t         * Converts this cipher params object to a string.","\t         *","\t         * @param {Format} formatter (Optional) The formatting strategy to use.","\t         *","\t         * @return {string} The stringified cipher params.","\t         *","\t         * @throws Error If neither the formatter nor the default formatter is set.","\t         *","\t         * @example","\t         *","\t         *     var string = cipherParams + '';","\t         *     var string = cipherParams.toString();","\t         *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);","\t         */","\t        toString: function (formatter) {","\t            return (formatter || this.formatter).stringify(this);","\t        }","\t    });","","\t    /**","\t     * Format namespace.","\t     */","\t    var C_format = C.format = {};","","\t    /**","\t     * OpenSSL formatting strategy.","\t     */","\t    var OpenSSLFormatter = C_format.OpenSSL = {","\t        /**","\t         * Converts a cipher params object to an OpenSSL-compatible string.","\t         *","\t         * @param {CipherParams} cipherParams The cipher params object.","\t         *","\t         * @return {string} The OpenSSL-compatible string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);","\t         */","\t        stringify: function (cipherParams) {","\t            // Shortcuts","\t            var ciphertext = cipherParams.ciphertext;","\t            var salt = cipherParams.salt;","","\t            // Format","\t            if (salt) {","\t                var wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);","\t            } else {","\t                var wordArray = ciphertext;","\t            }","","\t            return wordArray.toString(Base64);","\t        },","","\t        /**","\t         * Converts an OpenSSL-compatible string to a cipher params object.","\t         *","\t         * @param {string} openSSLStr The OpenSSL-compatible string.","\t         *","\t         * @return {CipherParams} The cipher params object.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);","\t         */","\t        parse: function (openSSLStr) {","\t            // Parse base64","\t            var ciphertext = Base64.parse(openSSLStr);","","\t            // Shortcut","\t            var ciphertextWords = ciphertext.words;","","\t            // Test for salt","\t            if (ciphertextWords[0] == 0x53616c74 && ciphertextWords[1] == 0x65645f5f) {","\t                // Extract salt","\t                var salt = WordArray.create(ciphertextWords.slice(2, 4));","","\t                // Remove salt from ciphertext","\t                ciphertextWords.splice(0, 4);","\t                ciphertext.sigBytes -= 16;","\t            }","","\t            return CipherParams.create({ ciphertext: ciphertext, salt: salt });","\t        }","\t    };","","\t    /**","\t     * A cipher wrapper that returns ciphertext as a serializable cipher params object.","\t     */","\t    var SerializableCipher = C_lib.SerializableCipher = Base.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL","\t         */","\t        cfg: Base.extend({","\t            format: OpenSSLFormatter","\t        }),","","\t        /**","\t         * Encrypts a message.","\t         *","\t         * @param {Cipher} cipher The cipher algorithm to use.","\t         * @param {WordArray|string} message The message to encrypt.","\t         * @param {WordArray} key The key.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {CipherParams} A cipher params object.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);","\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });","\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });","\t         */","\t        encrypt: function (cipher, message, key, cfg) {","\t            // Apply config defaults","\t            cfg = this.cfg.extend(cfg);","","\t            // Encrypt","\t            var encryptor = cipher.createEncryptor(key, cfg);","\t            var ciphertext = encryptor.finalize(message);","","\t            // Shortcut","\t            var cipherCfg = encryptor.cfg;","","\t            // Create and return serializable cipher params","\t            return CipherParams.create({","\t                ciphertext: ciphertext,","\t                key: key,","\t                iv: cipherCfg.iv,","\t                algorithm: cipher,","\t                mode: cipherCfg.mode,","\t                padding: cipherCfg.padding,","\t                blockSize: cipher.blockSize,","\t                formatter: cfg.format","\t            });","\t        },","","\t        /**","\t         * Decrypts serialized ciphertext.","\t         *","\t         * @param {Cipher} cipher The cipher algorithm to use.","\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.","\t         * @param {WordArray} key The key.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {WordArray} The plaintext.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });","\t         *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });","\t         */","\t        decrypt: function (cipher, ciphertext, key, cfg) {","\t            // Apply config defaults","\t            cfg = this.cfg.extend(cfg);","","\t            // Convert string to CipherParams","\t            ciphertext = this._parse(ciphertext, cfg.format);","","\t            // Decrypt","\t            var plaintext = cipher.createDecryptor(key, cfg).finalize(ciphertext.ciphertext);","","\t            return plaintext;","\t        },","","\t        /**","\t         * Converts serialized ciphertext to CipherParams,","\t         * else assumed CipherParams already and returns ciphertext unchanged.","\t         *","\t         * @param {CipherParams|string} ciphertext The ciphertext.","\t         * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.","\t         *","\t         * @return {CipherParams} The unserialized ciphertext.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);","\t         */","\t        _parse: function (ciphertext, format) {","\t            if (typeof ciphertext == 'string') {","\t                return format.parse(ciphertext, this);","\t            } else {","\t                return ciphertext;","\t            }","\t        }","\t    });","","\t    /**","\t     * Key derivation function namespace.","\t     */","\t    var C_kdf = C.kdf = {};","","\t    /**","\t     * OpenSSL key derivation function.","\t     */","\t    var OpenSSLKdf = C_kdf.OpenSSL = {","\t        /**","\t         * Derives a key and IV from a password.","\t         *","\t         * @param {string} password The password to derive from.","\t         * @param {number} keySize The size in words of the key to generate.","\t         * @param {number} ivSize The size in words of the IV to generate.","\t         * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.","\t         *","\t         * @return {CipherParams} A cipher params object with the key, IV, and salt.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);","\t         *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');","\t         */","\t        execute: function (password, keySize, ivSize, salt) {","\t            // Generate random salt","\t            if (!salt) {","\t                salt = WordArray.random(64/8);","\t            }","","\t            // Derive key and IV","\t            var key = EvpKDF.create({ keySize: keySize + ivSize }).compute(password, salt);","","\t            // Separate key and IV","\t            var iv = WordArray.create(key.words.slice(keySize), ivSize * 4);","\t            key.sigBytes = keySize * 4;","","\t            // Return params","\t            return CipherParams.create({ key: key, iv: iv, salt: salt });","\t        }","\t    };","","\t    /**","\t     * A serializable cipher wrapper that derives the key from a password,","\t     * and returns ciphertext as a serializable cipher params object.","\t     */","\t    var PasswordBasedCipher = C_lib.PasswordBasedCipher = SerializableCipher.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL","\t         */","\t        cfg: SerializableCipher.cfg.extend({","\t            kdf: OpenSSLKdf","\t        }),","","\t        /**","\t         * Encrypts a message using a password.","\t         *","\t         * @param {Cipher} cipher The cipher algorithm to use.","\t         * @param {WordArray|string} message The message to encrypt.","\t         * @param {string} password The password.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {CipherParams} A cipher params object.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');","\t         *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });","\t         */","\t        encrypt: function (cipher, message, password, cfg) {","\t            // Apply config defaults","\t            cfg = this.cfg.extend(cfg);","","\t            // Derive key and other params","\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);","","\t            // Add IV to config","\t            cfg.iv = derivedParams.iv;","","\t            // Encrypt","\t            var ciphertext = SerializableCipher.encrypt.call(this, cipher, message, derivedParams.key, cfg);","","\t            // Mix in derived params","\t            ciphertext.mixIn(derivedParams);","","\t            return ciphertext;","\t        },","","\t        /**","\t         * Decrypts serialized ciphertext using a password.","\t         *","\t         * @param {Cipher} cipher The cipher algorithm to use.","\t         * @param {CipherParams|string} ciphertext The ciphertext to decrypt.","\t         * @param {string} password The password.","\t         * @param {Object} cfg (Optional) The configuration options to use for this operation.","\t         *","\t         * @return {WordArray} The plaintext.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });","\t         *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });","\t         */","\t        decrypt: function (cipher, ciphertext, password, cfg) {","\t            // Apply config defaults","\t            cfg = this.cfg.extend(cfg);","","\t            // Convert string to CipherParams","\t            ciphertext = this._parse(ciphertext, cfg.format);","","\t            // Derive key and other params","\t            var derivedParams = cfg.kdf.execute(password, cipher.keySize, cipher.ivSize, ciphertext.salt);","","\t            // Add IV to config","\t            cfg.iv = derivedParams.iv;","","\t            // Decrypt","\t            var plaintext = SerializableCipher.decrypt.call(this, cipher, ciphertext, derivedParams.key, cfg);","","\t            return plaintext;","\t        }","\t    });","\t}());","","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"21":1,"22":1,"23":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"40":1,"63":0,"81":0,"97":0,"100":0,"101":0,"104":0,"116":0,"119":0,"136":0,"139":0,"158":0,"159":0,"163":0,"165":0,"190":1,"191":0,"192":0,"194":0,"198":1,"199":7,"201":0,"205":0,"217":1,"220":0,"222":0,"231":1,"236":1,"250":0,"266":0,"280":0,"281":0,"288":1,"292":1,"297":1,"310":0,"311":0,"314":0,"315":0,"318":0,"325":1,"338":0,"339":0,"342":0,"345":0,"346":0,"349":0,"353":1,"355":0,"358":0,"359":0,"362":0,"364":0,"368":0,"369":0,"373":1,"379":1,"384":1,"399":0,"402":0,"405":0,"408":0,"409":0,"410":0,"412":0,"415":0,"431":0,"434":0,"443":1,"457":0,"460":0,"461":0,"462":0,"465":0,"466":0,"468":0,"471":0,"473":0,"477":0,"482":0,"485":0,"487":0,"490":0,"493":0,"496":0,"499":0,"518":1,"539":0,"558":0,"565":1,"570":1,"586":0,"587":0,"590":0,"591":0,"593":0,"596":0,"614":0,"617":0,"620":0,"622":0,"625":0,"626":0,"629":0,"636":1,"666":0,"669":0,"670":0,"673":0,"676":0,"707":0,"710":0,"713":0,"715":0,"734":0,"735":0,"737":0,"745":1,"750":1,"770":0,"771":0,"775":0,"778":0,"779":0,"782":0,"790":1,"819":0,"822":0,"825":0,"828":0,"831":0,"833":0,"855":0,"858":0,"861":0,"864":0,"867":0,"869":0}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-cfb.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-cfb.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":1,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":34}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":48}}},"5":{"name":"(anonymous_5)","line":36,"loc":{"start":{"line":36,"column":23},"end":{"line":36,"column":48}}},"6":{"name":"generateKeystreamAndEncrypt","line":51,"loc":{"start":{"line":51,"column":5},"end":{"line":51,"column":76}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":78,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":73,"column":6}},"8":{"start":{"line":20,"column":5},"end":{"line":20,"column":53}},"9":{"start":{"line":22,"column":5},"end":{"line":33,"column":8}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":39}},"11":{"start":{"line":26,"column":13},"end":{"line":26,"column":46}},"12":{"start":{"line":28,"column":13},"end":{"line":28,"column":86}},"13":{"start":{"line":31,"column":13},"end":{"line":31,"column":71}},"14":{"start":{"line":35,"column":5},"end":{"line":49,"column":8}},"15":{"start":{"line":38,"column":13},"end":{"line":38,"column":39}},"16":{"start":{"line":39,"column":13},"end":{"line":39,"column":46}},"17":{"start":{"line":42,"column":13},"end":{"line":42,"column":69}},"18":{"start":{"line":44,"column":13},"end":{"line":44,"column":86}},"19":{"start":{"line":47,"column":13},"end":{"line":47,"column":41}},"20":{"start":{"line":51,"column":5},"end":{"line":70,"column":6}},"21":{"start":{"line":53,"column":9},"end":{"line":53,"column":27}},"22":{"start":{"line":56,"column":9},"end":{"line":63,"column":10}},"23":{"start":{"line":57,"column":13},"end":{"line":57,"column":41}},"24":{"start":{"line":60,"column":13},"end":{"line":60,"column":34}},"25":{"start":{"line":62,"column":13},"end":{"line":62,"column":45}},"26":{"start":{"line":64,"column":9},"end":{"line":64,"column":43}},"27":{"start":{"line":67,"column":9},"end":{"line":69,"column":10}},"28":{"start":{"line":68,"column":13},"end":{"line":68,"column":47}},"29":{"start":{"line":72,"column":5},"end":{"line":72,"column":16}},"30":{"start":{"line":76,"column":1},"end":{"line":76,"column":26}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":56,"type":"if","locations":[{"start":{"line":56,"column":9},"end":{"line":56,"column":9}},{"start":{"line":56,"column":9},"end":{"line":56,"column":9}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Cipher Feedback block mode.","\t */","\tCryptoJS.mode.CFB = (function () {","\t    var CFB = CryptoJS.lib.BlockCipherMode.extend();","","\t    CFB.Encryptor = CFB.extend({","\t        processBlock: function (words, offset) {","\t            // Shortcuts","\t            var cipher = this._cipher;","\t            var blockSize = cipher.blockSize;","","\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);","","\t            // Remember this block to use with next block","\t            this._prevBlock = words.slice(offset, offset + blockSize);","\t        }","\t    });","","\t    CFB.Decryptor = CFB.extend({","\t        processBlock: function (words, offset) {","\t            // Shortcuts","\t            var cipher = this._cipher;","\t            var blockSize = cipher.blockSize;","","\t            // Remember this block to use with next block","\t            var thisBlock = words.slice(offset, offset + blockSize);","","\t            generateKeystreamAndEncrypt.call(this, words, offset, blockSize, cipher);","","\t            // This block becomes the previous block","\t            this._prevBlock = thisBlock;","\t        }","\t    });","","\t    function generateKeystreamAndEncrypt(words, offset, blockSize, cipher) {","\t        // Shortcut","\t        var iv = this._iv;","","\t        // Generate keystream","\t        if (iv) {","\t            var keystream = iv.slice(0);","","\t            // Remove IV for subsequent blocks","\t            this._iv = undefined;","\t        } else {","\t            var keystream = this._prevBlock;","\t        }","\t        cipher.encryptBlock(keystream, 0);","","\t        // Encrypt","\t        for (var i = 0; i < blockSize; i++) {","\t            words[offset + i] ^= keystream[i];","\t        }","\t    }","","\t    return CFB;","\t}());","","","\treturn CryptoJS.mode.CFB;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"20":1,"22":1,"25":0,"26":0,"28":0,"31":0,"35":1,"38":0,"39":0,"42":0,"44":0,"47":0,"51":1,"53":0,"56":0,"57":0,"60":0,"62":0,"64":0,"67":0,"68":0,"72":1,"76":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ctr.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ctr.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":1,"23":1,"24":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":34}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":58,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":53,"column":6}},"8":{"start":{"line":20,"column":5},"end":{"line":20,"column":53}},"9":{"start":{"line":22,"column":5},"end":{"line":48,"column":8}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":38}},"11":{"start":{"line":26,"column":13},"end":{"line":26,"column":46}},"12":{"start":{"line":27,"column":13},"end":{"line":27,"column":31}},"13":{"start":{"line":28,"column":13},"end":{"line":28,"column":41}},"14":{"start":{"line":31,"column":13},"end":{"line":36,"column":14}},"15":{"start":{"line":32,"column":17},"end":{"line":32,"column":55}},"16":{"start":{"line":35,"column":17},"end":{"line":35,"column":38}},"17":{"start":{"line":37,"column":13},"end":{"line":37,"column":46}},"18":{"start":{"line":38,"column":13},"end":{"line":38,"column":47}},"19":{"start":{"line":41,"column":13},"end":{"line":41,"column":70}},"20":{"start":{"line":44,"column":13},"end":{"line":46,"column":14}},"21":{"start":{"line":45,"column":17},"end":{"line":45,"column":51}},"22":{"start":{"line":50,"column":5},"end":{"line":50,"column":31}},"23":{"start":{"line":52,"column":5},"end":{"line":52,"column":16}},"24":{"start":{"line":56,"column":1},"end":{"line":56,"column":26}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":13}},{"start":{"line":31,"column":13},"end":{"line":31,"column":13}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Counter block mode.","\t */","\tCryptoJS.mode.CTR = (function () {","\t    var CTR = CryptoJS.lib.BlockCipherMode.extend();","","\t    var Encryptor = CTR.Encryptor = CTR.extend({","\t        processBlock: function (words, offset) {","\t            // Shortcuts","\t            var cipher = this._cipher","\t            var blockSize = cipher.blockSize;","\t            var iv = this._iv;","\t            var counter = this._counter;","","\t            // Generate keystream","\t            if (iv) {","\t                counter = this._counter = iv.slice(0);","","\t                // Remove IV for subsequent blocks","\t                this._iv = undefined;","\t            }","\t            var keystream = counter.slice(0);","\t            cipher.encryptBlock(keystream, 0);","","\t            // Increment counter","\t            counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0","","\t            // Encrypt","\t            for (var i = 0; i < blockSize; i++) {","\t                words[offset + i] ^= keystream[i];","\t            }","\t        }","\t    });","","\t    CTR.Decryptor = Encryptor;","","\t    return CTR;","\t}());","","","\treturn CryptoJS.mode.CTR;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"20":1,"22":1,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"35":0,"37":0,"38":0,"41":0,"44":0,"45":0,"50":1,"52":1,"56":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ctr-gladman.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ctr-gladman.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":0,"31":0,"32":0,"33":1,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":1,"47":1,"48":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":21,"loc":{"start":{"line":21,"column":29},"end":{"line":21,"column":41}}},"4":{"name":"incWord","line":24,"loc":{"start":{"line":24,"column":2},"end":{"line":25,"column":2}}},"5":{"name":"incCounter","line":68,"loc":{"start":{"line":68,"column":2},"end":{"line":69,"column":2}}},"6":{"name":"(anonymous_6)","line":79,"loc":{"start":{"line":79,"column":23},"end":{"line":79,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":116,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":21,"column":1},"end":{"line":109,"column":6}},"8":{"start":{"line":22,"column":5},"end":{"line":22,"column":60}},"9":{"start":{"line":24,"column":2},"end":{"line":66,"column":3}},"10":{"start":{"line":26,"column":3},"end":{"line":64,"column":4}},"11":{"start":{"line":27,"column":3},"end":{"line":27,"column":30}},"12":{"start":{"line":28,"column":3},"end":{"line":28,"column":29}},"13":{"start":{"line":29,"column":3},"end":{"line":29,"column":24}},"14":{"start":{"line":31,"column":3},"end":{"line":54,"column":4}},"15":{"start":{"line":33,"column":3},"end":{"line":33,"column":10}},"16":{"start":{"line":34,"column":3},"end":{"line":49,"column":4}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":11}},"18":{"start":{"line":37,"column":4},"end":{"line":44,"column":5}},"19":{"start":{"line":39,"column":5},"end":{"line":39,"column":12}},"20":{"start":{"line":43,"column":5},"end":{"line":43,"column":10}},"21":{"start":{"line":48,"column":4},"end":{"line":48,"column":9}},"22":{"start":{"line":53,"column":3},"end":{"line":53,"column":8}},"23":{"start":{"line":56,"column":3},"end":{"line":56,"column":12}},"24":{"start":{"line":57,"column":3},"end":{"line":57,"column":22}},"25":{"start":{"line":58,"column":3},"end":{"line":58,"column":21}},"26":{"start":{"line":59,"column":3},"end":{"line":59,"column":14}},"27":{"start":{"line":63,"column":3},"end":{"line":63,"column":24}},"28":{"start":{"line":65,"column":3},"end":{"line":65,"column":15}},"29":{"start":{"line":68,"column":2},"end":{"line":76,"column":3}},"30":{"start":{"line":70,"column":3},"end":{"line":74,"column":4}},"31":{"start":{"line":73,"column":4},"end":{"line":73,"column":37}},"32":{"start":{"line":75,"column":3},"end":{"line":75,"column":18}},"33":{"start":{"line":78,"column":5},"end":{"line":104,"column":8}},"34":{"start":{"line":81,"column":13},"end":{"line":81,"column":38}},"35":{"start":{"line":82,"column":13},"end":{"line":82,"column":46}},"36":{"start":{"line":83,"column":13},"end":{"line":83,"column":31}},"37":{"start":{"line":84,"column":13},"end":{"line":84,"column":41}},"38":{"start":{"line":87,"column":13},"end":{"line":92,"column":14}},"39":{"start":{"line":88,"column":17},"end":{"line":88,"column":55}},"40":{"start":{"line":91,"column":17},"end":{"line":91,"column":38}},"41":{"start":{"line":94,"column":4},"end":{"line":94,"column":24}},"42":{"start":{"line":96,"column":4},"end":{"line":96,"column":37}},"43":{"start":{"line":97,"column":13},"end":{"line":97,"column":47}},"44":{"start":{"line":100,"column":13},"end":{"line":102,"column":14}},"45":{"start":{"line":101,"column":17},"end":{"line":101,"column":51}},"46":{"start":{"line":106,"column":5},"end":{"line":106,"column":38}},"47":{"start":{"line":108,"column":5},"end":{"line":108,"column":23}},"48":{"start":{"line":114,"column":1},"end":{"line":114,"column":33}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":26,"type":"if","locations":[{"start":{"line":26,"column":3},"end":{"line":26,"column":3}},{"start":{"line":26,"column":3},"end":{"line":26,"column":3}}]},"5":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":3},"end":{"line":31,"column":3}},{"start":{"line":31,"column":3},"end":{"line":31,"column":3}}]},"6":{"line":34,"type":"if","locations":[{"start":{"line":34,"column":3},"end":{"line":34,"column":3}},{"start":{"line":34,"column":3},"end":{"line":34,"column":3}}]},"7":{"line":37,"type":"if","locations":[{"start":{"line":37,"column":4},"end":{"line":37,"column":4}},{"start":{"line":37,"column":4},"end":{"line":37,"column":4}}]},"8":{"line":70,"type":"if","locations":[{"start":{"line":70,"column":3},"end":{"line":70,"column":3}},{"start":{"line":70,"column":3},"end":{"line":70,"column":3}}]},"9":{"line":87,"type":"if","locations":[{"start":{"line":87,"column":13},"end":{"line":87,"column":13}},{"start":{"line":87,"column":13},"end":{"line":87,"column":13}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/** @preserve","\t * Counter block mode compatible with  Dr Brian Gladman fileenc.c","\t * derived from CryptoJS.mode.CTR","\t * Jan Hruby jhruby.web@gmail.com","\t */","\tCryptoJS.mode.CTRGladman = (function () {","\t    var CTRGladman = CryptoJS.lib.BlockCipherMode.extend();","","\t\tfunction incWord(word)","\t\t{","\t\t\tif (((word >> 24) & 0xff) === 0xff) { //overflow","\t\t\tvar b1 = (word >> 16)&0xff;","\t\t\tvar b2 = (word >> 8)&0xff;","\t\t\tvar b3 = word & 0xff;","","\t\t\tif (b1 === 0xff) // overflow b1","\t\t\t{","\t\t\tb1 = 0;","\t\t\tif (b2 === 0xff)","\t\t\t{","\t\t\t\tb2 = 0;","\t\t\t\tif (b3 === 0xff)","\t\t\t\t{","\t\t\t\t\tb3 = 0;","\t\t\t\t}","\t\t\t\telse","\t\t\t\t{","\t\t\t\t\t++b3;","\t\t\t\t}","\t\t\t}","\t\t\telse","\t\t\t{","\t\t\t\t++b2;","\t\t\t}","\t\t\t}","\t\t\telse","\t\t\t{","\t\t\t++b1;","\t\t\t}","","\t\t\tword = 0;","\t\t\tword += (b1 << 16);","\t\t\tword += (b2 << 8);","\t\t\tword += b3;","\t\t\t}","\t\t\telse","\t\t\t{","\t\t\tword += (0x01 << 24);","\t\t\t}","\t\t\treturn word;","\t\t}","","\t\tfunction incCounter(counter)","\t\t{","\t\t\tif ((counter[0] = incWord(counter[0])) === 0)","\t\t\t{","\t\t\t\t// encr_data in fileenc.c from  Dr Brian Gladman's counts only with DWORD j < 8","\t\t\t\tcounter[1] = incWord(counter[1]);","\t\t\t}","\t\t\treturn counter;","\t\t}","","\t    var Encryptor = CTRGladman.Encryptor = CTRGladman.extend({","\t        processBlock: function (words, offset) {","\t            // Shortcuts","\t            var cipher = this._cipher","\t            var blockSize = cipher.blockSize;","\t            var iv = this._iv;","\t            var counter = this._counter;","","\t            // Generate keystream","\t            if (iv) {","\t                counter = this._counter = iv.slice(0);","","\t                // Remove IV for subsequent blocks","\t                this._iv = undefined;","\t            }","","\t\t\t\tincCounter(counter);","","\t\t\t\tvar keystream = counter.slice(0);","\t            cipher.encryptBlock(keystream, 0);","","\t            // Encrypt","\t            for (var i = 0; i < blockSize; i++) {","\t                words[offset + i] ^= keystream[i];","\t            }","\t        }","\t    });","","\t    CTRGladman.Decryptor = Encryptor;","","\t    return CTRGladman;","\t}());","","","","","\treturn CryptoJS.mode.CTRGladman;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"21":1,"22":1,"24":1,"26":0,"27":0,"28":0,"29":0,"31":0,"33":0,"34":0,"36":0,"37":0,"39":0,"43":0,"48":0,"53":0,"56":0,"57":0,"58":0,"59":0,"63":0,"65":0,"68":1,"70":0,"73":0,"75":0,"78":1,"81":0,"82":0,"83":0,"84":0,"87":0,"88":0,"91":0,"94":0,"96":0,"97":0,"100":0,"101":0,"106":1,"108":1,"114":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ofb.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ofb.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":1,"21":1,"22":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":34}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":54,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":49,"column":6}},"8":{"start":{"line":20,"column":5},"end":{"line":20,"column":53}},"9":{"start":{"line":22,"column":5},"end":{"line":44,"column":8}},"10":{"start":{"line":25,"column":13},"end":{"line":25,"column":38}},"11":{"start":{"line":26,"column":13},"end":{"line":26,"column":46}},"12":{"start":{"line":27,"column":13},"end":{"line":27,"column":31}},"13":{"start":{"line":28,"column":13},"end":{"line":28,"column":45}},"14":{"start":{"line":31,"column":13},"end":{"line":36,"column":14}},"15":{"start":{"line":32,"column":17},"end":{"line":32,"column":59}},"16":{"start":{"line":35,"column":17},"end":{"line":35,"column":38}},"17":{"start":{"line":37,"column":13},"end":{"line":37,"column":47}},"18":{"start":{"line":40,"column":13},"end":{"line":42,"column":14}},"19":{"start":{"line":41,"column":17},"end":{"line":41,"column":51}},"20":{"start":{"line":46,"column":5},"end":{"line":46,"column":31}},"21":{"start":{"line":48,"column":5},"end":{"line":48,"column":16}},"22":{"start":{"line":52,"column":1},"end":{"line":52,"column":26}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":31,"type":"if","locations":[{"start":{"line":31,"column":13},"end":{"line":31,"column":13}},{"start":{"line":31,"column":13},"end":{"line":31,"column":13}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Output Feedback block mode.","\t */","\tCryptoJS.mode.OFB = (function () {","\t    var OFB = CryptoJS.lib.BlockCipherMode.extend();","","\t    var Encryptor = OFB.Encryptor = OFB.extend({","\t        processBlock: function (words, offset) {","\t            // Shortcuts","\t            var cipher = this._cipher","\t            var blockSize = cipher.blockSize;","\t            var iv = this._iv;","\t            var keystream = this._keystream;","","\t            // Generate keystream","\t            if (iv) {","\t                keystream = this._keystream = iv.slice(0);","","\t                // Remove IV for subsequent blocks","\t                this._iv = undefined;","\t            }","\t            cipher.encryptBlock(keystream, 0);","","\t            // Encrypt","\t            for (var i = 0; i < blockSize; i++) {","\t                words[offset + i] ^= keystream[i];","\t            }","\t        }","\t    });","","\t    OFB.Decryptor = Encryptor;","","\t    return OFB;","\t}());","","","\treturn CryptoJS.mode.OFB;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"20":1,"22":1,"25":0,"26":0,"27":0,"28":0,"31":0,"32":0,"35":0,"37":0,"40":0,"41":0,"46":1,"48":1,"52":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ecb.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/mode-ecb.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":0,"11":1,"12":0,"13":1,"14":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":19,"loc":{"start":{"line":19,"column":22},"end":{"line":19,"column":34}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":48}}},"5":{"name":"(anonymous_5)","line":29,"loc":{"start":{"line":29,"column":23},"end":{"line":29,"column":48}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":40,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":35,"column":6}},"8":{"start":{"line":20,"column":5},"end":{"line":20,"column":53}},"9":{"start":{"line":22,"column":5},"end":{"line":26,"column":8}},"10":{"start":{"line":24,"column":13},"end":{"line":24,"column":54}},"11":{"start":{"line":28,"column":5},"end":{"line":32,"column":8}},"12":{"start":{"line":30,"column":13},"end":{"line":30,"column":54}},"13":{"start":{"line":34,"column":5},"end":{"line":34,"column":16}},"14":{"start":{"line":38,"column":1},"end":{"line":38,"column":26}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Electronic Codebook block mode.","\t */","\tCryptoJS.mode.ECB = (function () {","\t    var ECB = CryptoJS.lib.BlockCipherMode.extend();","","\t    ECB.Encryptor = ECB.extend({","\t        processBlock: function (words, offset) {","\t            this._cipher.encryptBlock(words, offset);","\t        }","\t    });","","\t    ECB.Decryptor = ECB.extend({","\t        processBlock: function (words, offset) {","\t            this._cipher.decryptBlock(words, offset);","\t        }","\t    });","","\t    return ECB;","\t}());","","","\treturn CryptoJS.mode.ECB;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"20":1,"22":1,"24":0,"28":1,"30":0,"34":1,"38":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-ansix923.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-ansix923.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":37}}},"4":{"name":"(anonymous_4)","line":37,"loc":{"start":{"line":37,"column":12},"end":{"line":37,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":49,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":44,"column":3}},"8":{"start":{"line":22,"column":9},"end":{"line":22,"column":42}},"9":{"start":{"line":23,"column":9},"end":{"line":23,"column":44}},"10":{"start":{"line":26,"column":9},"end":{"line":26,"column":76}},"11":{"start":{"line":29,"column":9},"end":{"line":29,"column":60}},"12":{"start":{"line":32,"column":9},"end":{"line":32,"column":22}},"13":{"start":{"line":33,"column":9},"end":{"line":33,"column":88}},"14":{"start":{"line":34,"column":9},"end":{"line":34,"column":40}},"15":{"start":{"line":39,"column":9},"end":{"line":39,"column":74}},"16":{"start":{"line":42,"column":9},"end":{"line":42,"column":40}},"17":{"start":{"line":47,"column":1},"end":{"line":47,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * ANSI X.923 padding strategy.","\t */","\tCryptoJS.pad.AnsiX923 = {","\t    pad: function (data, blockSize) {","\t        // Shortcuts","\t        var dataSigBytes = data.sigBytes;","\t        var blockSizeBytes = blockSize * 4;","","\t        // Count padding bytes","\t        var nPaddingBytes = blockSizeBytes - dataSigBytes % blockSizeBytes;","","\t        // Compute last byte position","\t        var lastBytePos = dataSigBytes + nPaddingBytes - 1;","","\t        // Pad","\t        data.clamp();","\t        data.words[lastBytePos >>> 2] |= nPaddingBytes << (24 - (lastBytePos % 4) * 8);","\t        data.sigBytes += nPaddingBytes;","\t    },","","\t    unpad: function (data) {","\t        // Get number of padding bytes from last byte","\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;","","\t        // Remove padding","\t        data.sigBytes -= nPaddingBytes;","\t    }","\t};","","","\treturn CryptoJS.pad.Ansix923;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"22":0,"23":0,"26":0,"29":0,"32":0,"33":0,"34":0,"39":0,"42":0,"47":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-iso10126.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-iso10126.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":37}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":12},"end":{"line":32,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":44,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":39,"column":3}},"8":{"start":{"line":22,"column":9},"end":{"line":22,"column":44}},"9":{"start":{"line":25,"column":9},"end":{"line":25,"column":77}},"10":{"start":{"line":28,"column":9},"end":{"line":29,"column":78}},"11":{"start":{"line":34,"column":9},"end":{"line":34,"column":74}},"12":{"start":{"line":37,"column":9},"end":{"line":37,"column":40}},"13":{"start":{"line":42,"column":1},"end":{"line":42,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * ISO 10126 padding strategy.","\t */","\tCryptoJS.pad.Iso10126 = {","\t    pad: function (data, blockSize) {","\t        // Shortcut","\t        var blockSizeBytes = blockSize * 4;","","\t        // Count padding bytes","\t        var nPaddingBytes = blockSizeBytes - data.sigBytes % blockSizeBytes;","","\t        // Pad","\t        data.concat(CryptoJS.lib.WordArray.random(nPaddingBytes - 1)).","\t             concat(CryptoJS.lib.WordArray.create([nPaddingBytes << 24], 1));","\t    },","","\t    unpad: function (data) {","\t        // Get number of padding bytes from last byte","\t        var nPaddingBytes = data.words[(data.sigBytes - 1) >>> 2] & 0xff;","","\t        // Remove padding","\t        data.sigBytes -= nPaddingBytes;","\t    }","\t};","","","\treturn CryptoJS.pad.Iso10126;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"22":0,"25":0,"28":0,"34":0,"37":0,"42":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-iso97971.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-iso97971.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":37}}},"4":{"name":"(anonymous_4)","line":28,"loc":{"start":{"line":28,"column":12},"end":{"line":28,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":40,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":35,"column":3}},"8":{"start":{"line":22,"column":9},"end":{"line":22,"column":69}},"9":{"start":{"line":25,"column":9},"end":{"line":25,"column":55}},"10":{"start":{"line":30,"column":9},"end":{"line":30,"column":46}},"11":{"start":{"line":33,"column":9},"end":{"line":33,"column":25}},"12":{"start":{"line":38,"column":1},"end":{"line":38,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * ISO/IEC 9797-1 Padding Method 2.","\t */","\tCryptoJS.pad.Iso97971 = {","\t    pad: function (data, blockSize) {","\t        // Add 0x80 byte","\t        data.concat(CryptoJS.lib.WordArray.create([0x80000000], 1));","","\t        // Zero pad the rest","\t        CryptoJS.pad.ZeroPadding.pad(data, blockSize);","\t    },","","\t    unpad: function (data) {","\t        // Remove zero padding","\t        CryptoJS.pad.ZeroPadding.unpad(data);","","\t        // Remove one more byte -- the 0x80 byte","\t        data.sigBytes--;","\t    }","\t};","","","\treturn CryptoJS.pad.Iso97971;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"22":0,"25":0,"30":0,"33":0,"38":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-zeropadding.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-zeropadding.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":37}}},"4":{"name":"(anonymous_4)","line":29,"loc":{"start":{"line":29,"column":12},"end":{"line":29,"column":28}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":45,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":40,"column":3}},"8":{"start":{"line":22,"column":9},"end":{"line":22,"column":44}},"9":{"start":{"line":25,"column":9},"end":{"line":25,"column":22}},"10":{"start":{"line":26,"column":9},"end":{"line":26,"column":96}},"11":{"start":{"line":31,"column":9},"end":{"line":31,"column":36}},"12":{"start":{"line":34,"column":9},"end":{"line":34,"column":35}},"13":{"start":{"line":35,"column":9},"end":{"line":37,"column":10}},"14":{"start":{"line":36,"column":13},"end":{"line":36,"column":17}},"15":{"start":{"line":38,"column":9},"end":{"line":38,"column":31}},"16":{"start":{"line":43,"column":1},"end":{"line":43,"column":33}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":26,"type":"binary-expr","locations":[{"start":{"line":26,"column":45},"end":{"line":26,"column":75}},{"start":{"line":26,"column":80},"end":{"line":26,"column":94}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * Zero padding strategy.","\t */","\tCryptoJS.pad.ZeroPadding = {","\t    pad: function (data, blockSize) {","\t        // Shortcut","\t        var blockSizeBytes = blockSize * 4;","","\t        // Pad","\t        data.clamp();","\t        data.sigBytes += blockSizeBytes - ((data.sigBytes % blockSizeBytes) || blockSizeBytes);","\t    },","","\t    unpad: function (data) {","\t        // Shortcut","\t        var dataWords = data.words;","","\t        // Unpad","\t        var i = data.sigBytes - 1;","\t        while (!((dataWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff)) {","\t            i--;","\t        }","\t        data.sigBytes = i + 1;","\t    }","\t};","","","\treturn CryptoJS.pad.ZeroPadding;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"22":0,"25":0,"26":0,"31":0,"34":0,"35":0,"36":0,"38":0,"43":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-nopadding.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/pad-nopadding.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":0,"4":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":20,"loc":{"start":{"line":20,"column":10},"end":{"line":20,"column":22}}},"4":{"name":"(anonymous_4)","line":23,"loc":{"start":{"line":23,"column":12},"end":{"line":23,"column":24}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":30,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":19,"column":1},"end":{"line":25,"column":3}},"8":{"start":{"line":28,"column":1},"end":{"line":28,"column":31}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t/**","\t * A noop padding strategy.","\t */","\tCryptoJS.pad.NoPadding = {","\t    pad: function () {","\t    },","","\t    unpad: function () {","\t    }","\t};","","","\treturn CryptoJS.pad.NoPadding;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"19":1,"28":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/format-hex.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/format-hex.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":0,"16":0,"17":0,"18":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":23}}},"4":{"name":"(anonymous_4)","line":39,"loc":{"start":{"line":39,"column":20},"end":{"line":39,"column":44}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":16},"end":{"line":56,"column":33}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":66,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":82}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":47}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":61,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":43}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":23}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":23,"column":5},"end":{"line":23,"column":29}},"14":{"start":{"line":25,"column":5},"end":{"line":60,"column":7}},"15":{"start":{"line":40,"column":13},"end":{"line":40,"column":58}},"16":{"start":{"line":57,"column":13},"end":{"line":57,"column":47}},"17":{"start":{"line":58,"column":13},"end":{"line":58,"column":68}},"18":{"start":{"line":64,"column":1},"end":{"line":64,"column":28}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function (undefined) {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var CipherParams = C_lib.CipherParams;","\t    var C_enc = C.enc;","\t    var Hex = C_enc.Hex;","\t    var C_format = C.format;","","\t    var HexFormatter = C_format.Hex = {","\t        /**","\t         * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.","\t         *","\t         * @param {CipherParams} cipherParams The cipher params object.","\t         *","\t         * @return {string} The hexadecimally encoded string.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);","\t         */","\t        stringify: function (cipherParams) {","\t            return cipherParams.ciphertext.toString(Hex);","\t        },","","\t        /**","\t         * Converts a hexadecimally encoded ciphertext string to a cipher params object.","\t         *","\t         * @param {string} input The hexadecimally encoded string.","\t         *","\t         * @return {CipherParams} The cipher params object.","\t         *","\t         * @static","\t         *","\t         * @example","\t         *","\t         *     var cipherParams = CryptoJS.format.Hex.parse(hexString);","\t         */","\t        parse: function (input) {","\t            var ciphertext = Hex.parse(input);","\t            return CipherParams.create({ ciphertext: ciphertext });","\t        }","\t    };","\t}());","","","\treturn CryptoJS.format.Hex;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"25":1,"40":0,"57":0,"58":0,"64":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/aes.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/aes.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":256,"26":128,"27":128,"28":1,"29":1,"30":1,"31":256,"32":256,"33":256,"34":256,"35":256,"36":256,"37":256,"38":256,"39":256,"40":256,"41":256,"42":256,"43":256,"44":256,"45":256,"46":256,"47":256,"48":256,"49":1,"50":255,"51":255,"52":1,"53":1,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"94":0,"95":0,"96":0,"97":0,"98":0,"99":0,"100":0,"101":0,"102":0,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":0,"111":0,"112":0,"113":1,"114":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[128,128],"5":[1,255],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0],"13":[0,0],"14":[0,0]},"f":{"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":6},"end":{"line":36,"column":18}}},"5":{"name":"(anonymous_5)","line":93,"loc":{"start":{"line":93,"column":19},"end":{"line":93,"column":31}}},"6":{"name":"(anonymous_6)","line":156,"loc":{"start":{"line":156,"column":23},"end":{"line":156,"column":44}}},"7":{"name":"(anonymous_7)","line":160,"loc":{"start":{"line":160,"column":23},"end":{"line":160,"column":44}}},"8":{"name":"(anonymous_8)","line":174,"loc":{"start":{"line":174,"column":24},"end":{"line":174,"column":108}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":232,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":146}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":84}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":227,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":41}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":25}},"12":{"start":{"line":24,"column":5},"end":{"line":24,"column":19}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":23}},"14":{"start":{"line":26,"column":5},"end":{"line":26,"column":24}},"15":{"start":{"line":27,"column":5},"end":{"line":27,"column":24}},"16":{"start":{"line":28,"column":5},"end":{"line":28,"column":24}},"17":{"start":{"line":29,"column":5},"end":{"line":29,"column":24}},"18":{"start":{"line":30,"column":5},"end":{"line":30,"column":28}},"19":{"start":{"line":31,"column":5},"end":{"line":31,"column":28}},"20":{"start":{"line":32,"column":5},"end":{"line":32,"column":28}},"21":{"start":{"line":33,"column":5},"end":{"line":33,"column":28}},"22":{"start":{"line":36,"column":5},"end":{"line":84,"column":10}},"23":{"start":{"line":38,"column":9},"end":{"line":38,"column":20}},"24":{"start":{"line":39,"column":9},"end":{"line":45,"column":10}},"25":{"start":{"line":40,"column":13},"end":{"line":44,"column":14}},"26":{"start":{"line":41,"column":17},"end":{"line":41,"column":31}},"27":{"start":{"line":43,"column":17},"end":{"line":43,"column":41}},"28":{"start":{"line":48,"column":9},"end":{"line":48,"column":19}},"29":{"start":{"line":49,"column":9},"end":{"line":49,"column":20}},"30":{"start":{"line":50,"column":9},"end":{"line":83,"column":10}},"31":{"start":{"line":52,"column":13},"end":{"line":52,"column":73}},"32":{"start":{"line":53,"column":13},"end":{"line":53,"column":50}},"33":{"start":{"line":54,"column":13},"end":{"line":54,"column":26}},"34":{"start":{"line":55,"column":13},"end":{"line":55,"column":30}},"35":{"start":{"line":58,"column":13},"end":{"line":58,"column":27}},"36":{"start":{"line":59,"column":13},"end":{"line":59,"column":28}},"37":{"start":{"line":60,"column":13},"end":{"line":60,"column":28}},"38":{"start":{"line":63,"column":13},"end":{"line":63,"column":56}},"39":{"start":{"line":64,"column":13},"end":{"line":64,"column":50}},"40":{"start":{"line":65,"column":13},"end":{"line":65,"column":51}},"41":{"start":{"line":66,"column":13},"end":{"line":66,"column":51}},"42":{"start":{"line":67,"column":13},"end":{"line":67,"column":30}},"43":{"start":{"line":70,"column":13},"end":{"line":70,"column":88}},"44":{"start":{"line":71,"column":13},"end":{"line":71,"column":55}},"45":{"start":{"line":72,"column":13},"end":{"line":72,"column":56}},"46":{"start":{"line":73,"column":13},"end":{"line":73,"column":56}},"47":{"start":{"line":74,"column":13},"end":{"line":74,"column":35}},"48":{"start":{"line":77,"column":13},"end":{"line":82,"column":14}},"49":{"start":{"line":78,"column":17},"end":{"line":78,"column":28}},"50":{"start":{"line":80,"column":17},"end":{"line":80,"column":43}},"51":{"start":{"line":81,"column":17},"end":{"line":81,"column":32}},"52":{"start":{"line":87,"column":5},"end":{"line":87,"column":83}},"53":{"start":{"line":92,"column":5},"end":{"line":216,"column":8}},"54":{"start":{"line":95,"column":13},"end":{"line":97,"column":14}},"55":{"start":{"line":96,"column":17},"end":{"line":96,"column":24}},"56":{"start":{"line":100,"column":13},"end":{"line":100,"column":55}},"57":{"start":{"line":101,"column":13},"end":{"line":101,"column":38}},"58":{"start":{"line":102,"column":13},"end":{"line":102,"column":44}},"59":{"start":{"line":105,"column":13},"end":{"line":105,"column":55}},"60":{"start":{"line":108,"column":13},"end":{"line":108,"column":44}},"61":{"start":{"line":111,"column":13},"end":{"line":111,"column":54}},"62":{"start":{"line":112,"column":13},"end":{"line":134,"column":14}},"63":{"start":{"line":113,"column":17},"end":{"line":133,"column":18}},"64":{"start":{"line":114,"column":21},"end":{"line":114,"column":58}},"65":{"start":{"line":116,"column":21},"end":{"line":116,"column":52}},"66":{"start":{"line":118,"column":21},"end":{"line":130,"column":22}},"67":{"start":{"line":120,"column":25},"end":{"line":120,"column":51}},"68":{"start":{"line":123,"column":25},"end":{"line":123,"column":135}},"69":{"start":{"line":126,"column":25},"end":{"line":126,"column":64}},"70":{"start":{"line":127,"column":28},"end":{"line":130,"column":22}},"71":{"start":{"line":129,"column":25},"end":{"line":129,"column":135}},"72":{"start":{"line":132,"column":21},"end":{"line":132,"column":75}},"73":{"start":{"line":137,"column":13},"end":{"line":137,"column":60}},"74":{"start":{"line":138,"column":13},"end":{"line":153,"column":14}},"75":{"start":{"line":139,"column":17},"end":{"line":139,"column":47}},"76":{"start":{"line":141,"column":17},"end":{"line":145,"column":18}},"77":{"start":{"line":142,"column":21},"end":{"line":142,"column":48}},"78":{"start":{"line":144,"column":21},"end":{"line":144,"column":52}},"79":{"start":{"line":147,"column":17},"end":{"line":152,"column":18}},"80":{"start":{"line":148,"column":21},"end":{"line":148,"column":50}},"81":{"start":{"line":150,"column":21},"end":{"line":151,"column":118}},"82":{"start":{"line":157,"column":13},"end":{"line":157,"column":112}},"83":{"start":{"line":162,"column":13},"end":{"line":162,"column":35}},"84":{"start":{"line":163,"column":13},"end":{"line":163,"column":43}},"85":{"start":{"line":164,"column":13},"end":{"line":164,"column":31}},"86":{"start":{"line":166,"column":13},"end":{"line":166,"column":135}},"87":{"start":{"line":169,"column":13},"end":{"line":169,"column":35}},"88":{"start":{"line":170,"column":13},"end":{"line":170,"column":43}},"89":{"start":{"line":171,"column":13},"end":{"line":171,"column":31}},"90":{"start":{"line":176,"column":13},"end":{"line":176,"column":41}},"91":{"start":{"line":179,"column":13},"end":{"line":179,"column":53}},"92":{"start":{"line":180,"column":13},"end":{"line":180,"column":53}},"93":{"start":{"line":181,"column":13},"end":{"line":181,"column":53}},"94":{"start":{"line":182,"column":13},"end":{"line":182,"column":53}},"95":{"start":{"line":185,"column":13},"end":{"line":185,"column":27}},"96":{"start":{"line":188,"column":13},"end":{"line":200,"column":14}},"97":{"start":{"line":190,"column":17},"end":{"line":190,"column":156}},"98":{"start":{"line":191,"column":17},"end":{"line":191,"column":156}},"99":{"start":{"line":192,"column":17},"end":{"line":192,"column":156}},"100":{"start":{"line":193,"column":17},"end":{"line":193,"column":156}},"101":{"start":{"line":196,"column":17},"end":{"line":196,"column":25}},"102":{"start":{"line":197,"column":17},"end":{"line":197,"column":25}},"103":{"start":{"line":198,"column":17},"end":{"line":198,"column":25}},"104":{"start":{"line":199,"column":17},"end":{"line":199,"column":25}},"105":{"start":{"line":203,"column":13},"end":{"line":203,"column":157}},"106":{"start":{"line":204,"column":13},"end":{"line":204,"column":157}},"107":{"start":{"line":205,"column":13},"end":{"line":205,"column":157}},"108":{"start":{"line":206,"column":13},"end":{"line":206,"column":157}},"109":{"start":{"line":209,"column":13},"end":{"line":209,"column":32}},"110":{"start":{"line":210,"column":13},"end":{"line":210,"column":32}},"111":{"start":{"line":211,"column":13},"end":{"line":211,"column":32}},"112":{"start":{"line":212,"column":13},"end":{"line":212,"column":32}},"113":{"start":{"line":226,"column":5},"end":{"line":226,"column":44}},"114":{"start":{"line":230,"column":1},"end":{"line":230,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":40,"type":"if","locations":[{"start":{"line":40,"column":13},"end":{"line":40,"column":13}},{"start":{"line":40,"column":13},"end":{"line":40,"column":13}}]},"5":{"line":77,"type":"if","locations":[{"start":{"line":77,"column":13},"end":{"line":77,"column":13}},{"start":{"line":77,"column":13},"end":{"line":77,"column":13}}]},"6":{"line":95,"type":"if","locations":[{"start":{"line":95,"column":13},"end":{"line":95,"column":13}},{"start":{"line":95,"column":13},"end":{"line":95,"column":13}}]},"7":{"line":95,"type":"binary-expr","locations":[{"start":{"line":95,"column":17},"end":{"line":95,"column":30}},{"start":{"line":95,"column":34},"end":{"line":95,"column":67}}]},"8":{"line":113,"type":"if","locations":[{"start":{"line":113,"column":17},"end":{"line":113,"column":17}},{"start":{"line":113,"column":17},"end":{"line":113,"column":17}}]},"9":{"line":118,"type":"if","locations":[{"start":{"line":118,"column":21},"end":{"line":118,"column":21}},{"start":{"line":118,"column":21},"end":{"line":118,"column":21}}]},"10":{"line":127,"type":"if","locations":[{"start":{"line":127,"column":28},"end":{"line":127,"column":28}},{"start":{"line":127,"column":28},"end":{"line":127,"column":28}}]},"11":{"line":127,"type":"binary-expr","locations":[{"start":{"line":127,"column":32},"end":{"line":127,"column":43}},{"start":{"line":127,"column":47},"end":{"line":127,"column":67}}]},"12":{"line":141,"type":"if","locations":[{"start":{"line":141,"column":17},"end":{"line":141,"column":17}},{"start":{"line":141,"column":17},"end":{"line":141,"column":17}}]},"13":{"line":147,"type":"if","locations":[{"start":{"line":147,"column":17},"end":{"line":147,"column":17}},{"start":{"line":147,"column":17},"end":{"line":147,"column":17}}]},"14":{"line":147,"type":"binary-expr","locations":[{"start":{"line":147,"column":21},"end":{"line":147,"column":33}},{"start":{"line":147,"column":37},"end":{"line":147,"column":47}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var BlockCipher = C_lib.BlockCipher;","\t    var C_algo = C.algo;","","\t    // Lookup tables","\t    var SBOX = [];","\t    var INV_SBOX = [];","\t    var SUB_MIX_0 = [];","\t    var SUB_MIX_1 = [];","\t    var SUB_MIX_2 = [];","\t    var SUB_MIX_3 = [];","\t    var INV_SUB_MIX_0 = [];","\t    var INV_SUB_MIX_1 = [];","\t    var INV_SUB_MIX_2 = [];","\t    var INV_SUB_MIX_3 = [];","","\t    // Compute lookup tables","\t    (function () {","\t        // Compute double table","\t        var d = [];","\t        for (var i = 0; i < 256; i++) {","\t            if (i < 128) {","\t                d[i] = i << 1;","\t            } else {","\t                d[i] = (i << 1) ^ 0x11b;","\t            }","\t        }","","\t        // Walk GF(2^8)","\t        var x = 0;","\t        var xi = 0;","\t        for (var i = 0; i < 256; i++) {","\t            // Compute sbox","\t            var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);","\t            sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;","\t            SBOX[x] = sx;","\t            INV_SBOX[sx] = x;","","\t            // Compute multiplication","\t            var x2 = d[x];","\t            var x4 = d[x2];","\t            var x8 = d[x4];","","\t            // Compute sub bytes, mix columns tables","\t            var t = (d[sx] * 0x101) ^ (sx * 0x1010100);","\t            SUB_MIX_0[x] = (t << 24) | (t >>> 8);","\t            SUB_MIX_1[x] = (t << 16) | (t >>> 16);","\t            SUB_MIX_2[x] = (t << 8)  | (t >>> 24);","\t            SUB_MIX_3[x] = t;","","\t            // Compute inv sub bytes, inv mix columns tables","\t            var t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);","\t            INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);","\t            INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);","\t            INV_SUB_MIX_2[sx] = (t << 8)  | (t >>> 24);","\t            INV_SUB_MIX_3[sx] = t;","","\t            // Compute next counter","\t            if (!x) {","\t                x = xi = 1;","\t            } else {","\t                x = x2 ^ d[d[d[x8 ^ x2]]];","\t                xi ^= d[d[xi]];","\t            }","\t        }","\t    }());","","\t    // Precomputed Rcon lookup","\t    var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];","","\t    /**","\t     * AES block cipher algorithm.","\t     */","\t    var AES = C_algo.AES = BlockCipher.extend({","\t        _doReset: function () {","\t            // Skip reset of nRounds has been set before and key did not change","\t            if (this._nRounds && this._keyPriorReset === this._key) {","\t                return;","\t            }","","\t            // Shortcuts","\t            var key = this._keyPriorReset = this._key;","\t            var keyWords = key.words;","\t            var keySize = key.sigBytes / 4;","","\t            // Compute number of rounds","\t            var nRounds = this._nRounds = keySize + 6;","","\t            // Compute number of key schedule rows","\t            var ksRows = (nRounds + 1) * 4;","","\t            // Compute key schedule","\t            var keySchedule = this._keySchedule = [];","\t            for (var ksRow = 0; ksRow < ksRows; ksRow++) {","\t                if (ksRow < keySize) {","\t                    keySchedule[ksRow] = keyWords[ksRow];","\t                } else {","\t                    var t = keySchedule[ksRow - 1];","","\t                    if (!(ksRow % keySize)) {","\t                        // Rot word","\t                        t = (t << 8) | (t >>> 24);","","\t                        // Sub word","\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];","","\t                        // Mix Rcon","\t                        t ^= RCON[(ksRow / keySize) | 0] << 24;","\t                    } else if (keySize > 6 && ksRow % keySize == 4) {","\t                        // Sub word","\t                        t = (SBOX[t >>> 24] << 24) | (SBOX[(t >>> 16) & 0xff] << 16) | (SBOX[(t >>> 8) & 0xff] << 8) | SBOX[t & 0xff];","\t                    }","","\t                    keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;","\t                }","\t            }","","\t            // Compute inv key schedule","\t            var invKeySchedule = this._invKeySchedule = [];","\t            for (var invKsRow = 0; invKsRow < ksRows; invKsRow++) {","\t                var ksRow = ksRows - invKsRow;","","\t                if (invKsRow % 4) {","\t                    var t = keySchedule[ksRow];","\t                } else {","\t                    var t = keySchedule[ksRow - 4];","\t                }","","\t                if (invKsRow < 4 || ksRow <= 4) {","\t                    invKeySchedule[invKsRow] = t;","\t                } else {","\t                    invKeySchedule[invKsRow] = INV_SUB_MIX_0[SBOX[t >>> 24]] ^ INV_SUB_MIX_1[SBOX[(t >>> 16) & 0xff]] ^","\t                                               INV_SUB_MIX_2[SBOX[(t >>> 8) & 0xff]] ^ INV_SUB_MIX_3[SBOX[t & 0xff]];","\t                }","\t            }","\t        },","","\t        encryptBlock: function (M, offset) {","\t            this._doCryptBlock(M, offset, this._keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX);","\t        },","","\t        decryptBlock: function (M, offset) {","\t            // Swap 2nd and 4th rows","\t            var t = M[offset + 1];","\t            M[offset + 1] = M[offset + 3];","\t            M[offset + 3] = t;","","\t            this._doCryptBlock(M, offset, this._invKeySchedule, INV_SUB_MIX_0, INV_SUB_MIX_1, INV_SUB_MIX_2, INV_SUB_MIX_3, INV_SBOX);","","\t            // Inv swap 2nd and 4th rows","\t            var t = M[offset + 1];","\t            M[offset + 1] = M[offset + 3];","\t            M[offset + 3] = t;","\t        },","","\t        _doCryptBlock: function (M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {","\t            // Shortcut","\t            var nRounds = this._nRounds;","","\t            // Get input, add round key","\t            var s0 = M[offset]     ^ keySchedule[0];","\t            var s1 = M[offset + 1] ^ keySchedule[1];","\t            var s2 = M[offset + 2] ^ keySchedule[2];","\t            var s3 = M[offset + 3] ^ keySchedule[3];","","\t            // Key schedule row counter","\t            var ksRow = 4;","","\t            // Rounds","\t            for (var round = 1; round < nRounds; round++) {","\t                // Shift rows, sub bytes, mix columns, add round key","\t                var t0 = SUB_MIX_0[s0 >>> 24] ^ SUB_MIX_1[(s1 >>> 16) & 0xff] ^ SUB_MIX_2[(s2 >>> 8) & 0xff] ^ SUB_MIX_3[s3 & 0xff] ^ keySchedule[ksRow++];","\t                var t1 = SUB_MIX_0[s1 >>> 24] ^ SUB_MIX_1[(s2 >>> 16) & 0xff] ^ SUB_MIX_2[(s3 >>> 8) & 0xff] ^ SUB_MIX_3[s0 & 0xff] ^ keySchedule[ksRow++];","\t                var t2 = SUB_MIX_0[s2 >>> 24] ^ SUB_MIX_1[(s3 >>> 16) & 0xff] ^ SUB_MIX_2[(s0 >>> 8) & 0xff] ^ SUB_MIX_3[s1 & 0xff] ^ keySchedule[ksRow++];","\t                var t3 = SUB_MIX_0[s3 >>> 24] ^ SUB_MIX_1[(s0 >>> 16) & 0xff] ^ SUB_MIX_2[(s1 >>> 8) & 0xff] ^ SUB_MIX_3[s2 & 0xff] ^ keySchedule[ksRow++];","","\t                // Update state","\t                s0 = t0;","\t                s1 = t1;","\t                s2 = t2;","\t                s3 = t3;","\t            }","","\t            // Shift rows, sub bytes, add round key","\t            var t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++];","\t            var t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++];","\t            var t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++];","\t            var t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++];","","\t            // Set output","\t            M[offset]     = t0;","\t            M[offset + 1] = t1;","\t            M[offset + 2] = t2;","\t            M[offset + 3] = t3;","\t        },","","\t        keySize: 256/32","\t    });","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);","\t     */","\t    C.AES = BlockCipher._createHelper(AES);","\t}());","","","\treturn CryptoJS.AES;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"24":1,"25":1,"26":1,"27":1,"28":1,"29":1,"30":1,"31":1,"32":1,"33":1,"36":1,"38":1,"39":1,"40":256,"41":128,"43":128,"48":1,"49":1,"50":1,"52":256,"53":256,"54":256,"55":256,"58":256,"59":256,"60":256,"63":256,"64":256,"65":256,"66":256,"67":256,"70":256,"71":256,"72":256,"73":256,"74":256,"77":256,"78":1,"80":255,"81":255,"87":1,"92":1,"95":0,"96":0,"100":0,"101":0,"102":0,"105":0,"108":0,"111":0,"112":0,"113":0,"114":0,"116":0,"118":0,"120":0,"123":0,"126":0,"127":0,"129":0,"132":0,"137":0,"138":0,"139":0,"141":0,"142":0,"144":0,"147":0,"148":0,"150":0,"157":0,"162":0,"163":0,"164":0,"166":0,"169":0,"170":0,"171":0,"176":0,"179":0,"180":0,"181":0,"182":0,"185":0,"188":0,"190":0,"191":0,"192":0,"193":0,"196":0,"197":0,"198":0,"199":0,"203":0,"204":0,"205":0,"206":0,"209":0,"210":0,"211":0,"212":0,"226":1,"230":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/tripledes.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/tripledes.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":1,"68":0,"69":0,"70":0,"71":1,"72":0,"73":0,"74":0,"75":1,"76":1,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":1,"89":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":592,"loc":{"start":{"line":592,"column":19},"end":{"line":592,"column":31}}},"5":{"name":"(anonymous_5)","line":639,"loc":{"start":{"line":639,"column":23},"end":{"line":639,"column":44}}},"6":{"name":"(anonymous_6)","line":643,"loc":{"start":{"line":643,"column":23},"end":{"line":643,"column":44}}},"7":{"name":"(anonymous_7)","line":647,"loc":{"start":{"line":647,"column":24},"end":{"line":647,"column":54}}},"8":{"name":"exchangeLR","line":700,"loc":{"start":{"line":700,"column":5},"end":{"line":700,"column":39}}},"9":{"name":"exchangeRL","line":706,"loc":{"start":{"line":706,"column":5},"end":{"line":706,"column":39}}},"10":{"name":"(anonymous_10)","line":726,"loc":{"start":{"line":726,"column":19},"end":{"line":726,"column":31}}},"11":{"name":"(anonymous_11)","line":737,"loc":{"start":{"line":737,"column":23},"end":{"line":737,"column":44}}},"12":{"name":"(anonymous_12)","line":743,"loc":{"start":{"line":743,"column":23},"end":{"line":743,"column":44}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":770,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":146}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":84}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":765,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":37}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":41}},"12":{"start":{"line":22,"column":5},"end":{"line":22,"column":25}},"13":{"start":{"line":25,"column":5},"end":{"line":33,"column":7}},"14":{"start":{"line":36,"column":5},"end":{"line":45,"column":7}},"15":{"start":{"line":48,"column":5},"end":{"line":48,"column":87}},"16":{"start":{"line":51,"column":5},"end":{"line":580,"column":7}},"17":{"start":{"line":583,"column":5},"end":{"line":586,"column":7}},"18":{"start":{"line":591,"column":5},"end":{"line":697,"column":8}},"19":{"start":{"line":594,"column":13},"end":{"line":594,"column":33}},"20":{"start":{"line":595,"column":13},"end":{"line":595,"column":38}},"21":{"start":{"line":598,"column":13},"end":{"line":598,"column":30}},"22":{"start":{"line":599,"column":13},"end":{"line":602,"column":14}},"23":{"start":{"line":600,"column":17},"end":{"line":600,"column":44}},"24":{"start":{"line":601,"column":17},"end":{"line":601,"column":88}},"25":{"start":{"line":605,"column":13},"end":{"line":605,"column":46}},"26":{"start":{"line":606,"column":13},"end":{"line":630,"column":14}},"27":{"start":{"line":608,"column":17},"end":{"line":608,"column":52}},"28":{"start":{"line":611,"column":17},"end":{"line":611,"column":52}},"29":{"start":{"line":614,"column":17},"end":{"line":620,"column":18}},"30":{"start":{"line":616,"column":21},"end":{"line":616,"column":100}},"31":{"start":{"line":619,"column":21},"end":{"line":619,"column":118}},"32":{"start":{"line":625,"column":17},"end":{"line":625,"column":67}},"33":{"start":{"line":626,"column":17},"end":{"line":628,"column":18}},"34":{"start":{"line":627,"column":21},"end":{"line":627,"column":65}},"35":{"start":{"line":629,"column":17},"end":{"line":629,"column":67}},"36":{"start":{"line":633,"column":13},"end":{"line":633,"column":52}},"37":{"start":{"line":634,"column":13},"end":{"line":636,"column":14}},"38":{"start":{"line":635,"column":17},"end":{"line":635,"column":49}},"39":{"start":{"line":640,"column":13},"end":{"line":640,"column":58}},"40":{"start":{"line":644,"column":13},"end":{"line":644,"column":61}},"41":{"start":{"line":649,"column":13},"end":{"line":649,"column":38}},"42":{"start":{"line":650,"column":13},"end":{"line":650,"column":42}},"43":{"start":{"line":653,"column":13},"end":{"line":653,"column":51}},"44":{"start":{"line":654,"column":13},"end":{"line":654,"column":51}},"45":{"start":{"line":655,"column":13},"end":{"line":655,"column":51}},"46":{"start":{"line":656,"column":13},"end":{"line":656,"column":51}},"47":{"start":{"line":657,"column":13},"end":{"line":657,"column":51}},"48":{"start":{"line":660,"column":13},"end":{"line":673,"column":14}},"49":{"start":{"line":662,"column":17},"end":{"line":662,"column":45}},"50":{"start":{"line":663,"column":17},"end":{"line":663,"column":43}},"51":{"start":{"line":664,"column":17},"end":{"line":664,"column":43}},"52":{"start":{"line":667,"column":17},"end":{"line":667,"column":27}},"53":{"start":{"line":668,"column":17},"end":{"line":670,"column":18}},"54":{"start":{"line":669,"column":21},"end":{"line":669,"column":81}},"55":{"start":{"line":671,"column":17},"end":{"line":671,"column":39}},"56":{"start":{"line":672,"column":17},"end":{"line":672,"column":43}},"57":{"start":{"line":676,"column":13},"end":{"line":676,"column":34}},"58":{"start":{"line":677,"column":13},"end":{"line":677,"column":41}},"59":{"start":{"line":678,"column":13},"end":{"line":678,"column":30}},"60":{"start":{"line":681,"column":13},"end":{"line":681,"column":51}},"61":{"start":{"line":682,"column":13},"end":{"line":682,"column":51}},"62":{"start":{"line":683,"column":13},"end":{"line":683,"column":51}},"63":{"start":{"line":684,"column":13},"end":{"line":684,"column":51}},"64":{"start":{"line":685,"column":13},"end":{"line":685,"column":51}},"65":{"start":{"line":688,"column":13},"end":{"line":688,"column":38}},"66":{"start":{"line":689,"column":13},"end":{"line":689,"column":42}},"67":{"start":{"line":700,"column":5},"end":{"line":704,"column":6}},"68":{"start":{"line":701,"column":9},"end":{"line":701,"column":67}},"69":{"start":{"line":702,"column":9},"end":{"line":702,"column":27}},"70":{"start":{"line":703,"column":9},"end":{"line":703,"column":37}},"71":{"start":{"line":706,"column":5},"end":{"line":710,"column":6}},"72":{"start":{"line":707,"column":9},"end":{"line":707,"column":67}},"73":{"start":{"line":708,"column":9},"end":{"line":708,"column":27}},"74":{"start":{"line":709,"column":9},"end":{"line":709,"column":37}},"75":{"start":{"line":720,"column":5},"end":{"line":720,"column":44}},"76":{"start":{"line":725,"column":5},"end":{"line":754,"column":8}},"77":{"start":{"line":728,"column":13},"end":{"line":728,"column":33}},"78":{"start":{"line":729,"column":13},"end":{"line":729,"column":38}},"79":{"start":{"line":732,"column":13},"end":{"line":732,"column":86}},"80":{"start":{"line":733,"column":13},"end":{"line":733,"column":86}},"81":{"start":{"line":734,"column":13},"end":{"line":734,"column":86}},"82":{"start":{"line":738,"column":13},"end":{"line":738,"column":48}},"83":{"start":{"line":739,"column":13},"end":{"line":739,"column":48}},"84":{"start":{"line":740,"column":13},"end":{"line":740,"column":48}},"85":{"start":{"line":744,"column":13},"end":{"line":744,"column":48}},"86":{"start":{"line":745,"column":13},"end":{"line":745,"column":48}},"87":{"start":{"line":746,"column":13},"end":{"line":746,"column":48}},"88":{"start":{"line":764,"column":5},"end":{"line":764,"column":56}},"89":{"start":{"line":768,"column":1},"end":{"line":768,"column":27}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var WordArray = C_lib.WordArray;","\t    var BlockCipher = C_lib.BlockCipher;","\t    var C_algo = C.algo;","","\t    // Permuted Choice 1 constants","\t    var PC1 = [","\t        57, 49, 41, 33, 25, 17, 9,  1,","\t        58, 50, 42, 34, 26, 18, 10, 2,","\t        59, 51, 43, 35, 27, 19, 11, 3,","\t        60, 52, 44, 36, 63, 55, 47, 39,","\t        31, 23, 15, 7,  62, 54, 46, 38,","\t        30, 22, 14, 6,  61, 53, 45, 37,","\t        29, 21, 13, 5,  28, 20, 12, 4","\t    ];","","\t    // Permuted Choice 2 constants","\t    var PC2 = [","\t        14, 17, 11, 24, 1,  5,","\t        3,  28, 15, 6,  21, 10,","\t        23, 19, 12, 4,  26, 8,","\t        16, 7,  27, 20, 13, 2,","\t        41, 52, 31, 37, 47, 55,","\t        30, 40, 51, 45, 33, 48,","\t        44, 49, 39, 56, 34, 53,","\t        46, 42, 50, 36, 29, 32","\t    ];","","\t    // Cumulative bit shift constants","\t    var BIT_SHIFTS = [1,  2,  4,  6,  8,  10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28];","","\t    // SBOXes and round permutation constants","\t    var SBOX_P = [","\t        {","\t            0x0: 0x808200,","\t            0x10000000: 0x8000,","\t            0x20000000: 0x808002,","\t            0x30000000: 0x2,","\t            0x40000000: 0x200,","\t            0x50000000: 0x808202,","\t            0x60000000: 0x800202,","\t            0x70000000: 0x800000,","\t            0x80000000: 0x202,","\t            0x90000000: 0x800200,","\t            0xa0000000: 0x8200,","\t            0xb0000000: 0x808000,","\t            0xc0000000: 0x8002,","\t            0xd0000000: 0x800002,","\t            0xe0000000: 0x0,","\t            0xf0000000: 0x8202,","\t            0x8000000: 0x0,","\t            0x18000000: 0x808202,","\t            0x28000000: 0x8202,","\t            0x38000000: 0x8000,","\t            0x48000000: 0x808200,","\t            0x58000000: 0x200,","\t            0x68000000: 0x808002,","\t            0x78000000: 0x2,","\t            0x88000000: 0x800200,","\t            0x98000000: 0x8200,","\t            0xa8000000: 0x808000,","\t            0xb8000000: 0x800202,","\t            0xc8000000: 0x800002,","\t            0xd8000000: 0x8002,","\t            0xe8000000: 0x202,","\t            0xf8000000: 0x800000,","\t            0x1: 0x8000,","\t            0x10000001: 0x2,","\t            0x20000001: 0x808200,","\t            0x30000001: 0x800000,","\t            0x40000001: 0x808002,","\t            0x50000001: 0x8200,","\t            0x60000001: 0x200,","\t            0x70000001: 0x800202,","\t            0x80000001: 0x808202,","\t            0x90000001: 0x808000,","\t            0xa0000001: 0x800002,","\t            0xb0000001: 0x8202,","\t            0xc0000001: 0x202,","\t            0xd0000001: 0x800200,","\t            0xe0000001: 0x8002,","\t            0xf0000001: 0x0,","\t            0x8000001: 0x808202,","\t            0x18000001: 0x808000,","\t            0x28000001: 0x800000,","\t            0x38000001: 0x200,","\t            0x48000001: 0x8000,","\t            0x58000001: 0x800002,","\t            0x68000001: 0x2,","\t            0x78000001: 0x8202,","\t            0x88000001: 0x8002,","\t            0x98000001: 0x800202,","\t            0xa8000001: 0x202,","\t            0xb8000001: 0x808200,","\t            0xc8000001: 0x800200,","\t            0xd8000001: 0x0,","\t            0xe8000001: 0x8200,","\t            0xf8000001: 0x808002","\t        },","\t        {","\t            0x0: 0x40084010,","\t            0x1000000: 0x4000,","\t            0x2000000: 0x80000,","\t            0x3000000: 0x40080010,","\t            0x4000000: 0x40000010,","\t            0x5000000: 0x40084000,","\t            0x6000000: 0x40004000,","\t            0x7000000: 0x10,","\t            0x8000000: 0x84000,","\t            0x9000000: 0x40004010,","\t            0xa000000: 0x40000000,","\t            0xb000000: 0x84010,","\t            0xc000000: 0x80010,","\t            0xd000000: 0x0,","\t            0xe000000: 0x4010,","\t            0xf000000: 0x40080000,","\t            0x800000: 0x40004000,","\t            0x1800000: 0x84010,","\t            0x2800000: 0x10,","\t            0x3800000: 0x40004010,","\t            0x4800000: 0x40084010,","\t            0x5800000: 0x40000000,","\t            0x6800000: 0x80000,","\t            0x7800000: 0x40080010,","\t            0x8800000: 0x80010,","\t            0x9800000: 0x0,","\t            0xa800000: 0x4000,","\t            0xb800000: 0x40080000,","\t            0xc800000: 0x40000010,","\t            0xd800000: 0x84000,","\t            0xe800000: 0x40084000,","\t            0xf800000: 0x4010,","\t            0x10000000: 0x0,","\t            0x11000000: 0x40080010,","\t            0x12000000: 0x40004010,","\t            0x13000000: 0x40084000,","\t            0x14000000: 0x40080000,","\t            0x15000000: 0x10,","\t            0x16000000: 0x84010,","\t            0x17000000: 0x4000,","\t            0x18000000: 0x4010,","\t            0x19000000: 0x80000,","\t            0x1a000000: 0x80010,","\t            0x1b000000: 0x40000010,","\t            0x1c000000: 0x84000,","\t            0x1d000000: 0x40004000,","\t            0x1e000000: 0x40000000,","\t            0x1f000000: 0x40084010,","\t            0x10800000: 0x84010,","\t            0x11800000: 0x80000,","\t            0x12800000: 0x40080000,","\t            0x13800000: 0x4000,","\t            0x14800000: 0x40004000,","\t            0x15800000: 0x40084010,","\t            0x16800000: 0x10,","\t            0x17800000: 0x40000000,","\t            0x18800000: 0x40084000,","\t            0x19800000: 0x40000010,","\t            0x1a800000: 0x40004010,","\t            0x1b800000: 0x80010,","\t            0x1c800000: 0x0,","\t            0x1d800000: 0x4010,","\t            0x1e800000: 0x40080010,","\t            0x1f800000: 0x84000","\t        },","\t        {","\t            0x0: 0x104,","\t            0x100000: 0x0,","\t            0x200000: 0x4000100,","\t            0x300000: 0x10104,","\t            0x400000: 0x10004,","\t            0x500000: 0x4000004,","\t            0x600000: 0x4010104,","\t            0x700000: 0x4010000,","\t            0x800000: 0x4000000,","\t            0x900000: 0x4010100,","\t            0xa00000: 0x10100,","\t            0xb00000: 0x4010004,","\t            0xc00000: 0x4000104,","\t            0xd00000: 0x10000,","\t            0xe00000: 0x4,","\t            0xf00000: 0x100,","\t            0x80000: 0x4010100,","\t            0x180000: 0x4010004,","\t            0x280000: 0x0,","\t            0x380000: 0x4000100,","\t            0x480000: 0x4000004,","\t            0x580000: 0x10000,","\t            0x680000: 0x10004,","\t            0x780000: 0x104,","\t            0x880000: 0x4,","\t            0x980000: 0x100,","\t            0xa80000: 0x4010000,","\t            0xb80000: 0x10104,","\t            0xc80000: 0x10100,","\t            0xd80000: 0x4000104,","\t            0xe80000: 0x4010104,","\t            0xf80000: 0x4000000,","\t            0x1000000: 0x4010100,","\t            0x1100000: 0x10004,","\t            0x1200000: 0x10000,","\t            0x1300000: 0x4000100,","\t            0x1400000: 0x100,","\t            0x1500000: 0x4010104,","\t            0x1600000: 0x4000004,","\t            0x1700000: 0x0,","\t            0x1800000: 0x4000104,","\t            0x1900000: 0x4000000,","\t            0x1a00000: 0x4,","\t            0x1b00000: 0x10100,","\t            0x1c00000: 0x4010000,","\t            0x1d00000: 0x104,","\t            0x1e00000: 0x10104,","\t            0x1f00000: 0x4010004,","\t            0x1080000: 0x4000000,","\t            0x1180000: 0x104,","\t            0x1280000: 0x4010100,","\t            0x1380000: 0x0,","\t            0x1480000: 0x10004,","\t            0x1580000: 0x4000100,","\t            0x1680000: 0x100,","\t            0x1780000: 0x4010004,","\t            0x1880000: 0x10000,","\t            0x1980000: 0x4010104,","\t            0x1a80000: 0x10104,","\t            0x1b80000: 0x4000004,","\t            0x1c80000: 0x4000104,","\t            0x1d80000: 0x4010000,","\t            0x1e80000: 0x4,","\t            0x1f80000: 0x10100","\t        },","\t        {","\t            0x0: 0x80401000,","\t            0x10000: 0x80001040,","\t            0x20000: 0x401040,","\t            0x30000: 0x80400000,","\t            0x40000: 0x0,","\t            0x50000: 0x401000,","\t            0x60000: 0x80000040,","\t            0x70000: 0x400040,","\t            0x80000: 0x80000000,","\t            0x90000: 0x400000,","\t            0xa0000: 0x40,","\t            0xb0000: 0x80001000,","\t            0xc0000: 0x80400040,","\t            0xd0000: 0x1040,","\t            0xe0000: 0x1000,","\t            0xf0000: 0x80401040,","\t            0x8000: 0x80001040,","\t            0x18000: 0x40,","\t            0x28000: 0x80400040,","\t            0x38000: 0x80001000,","\t            0x48000: 0x401000,","\t            0x58000: 0x80401040,","\t            0x68000: 0x0,","\t            0x78000: 0x80400000,","\t            0x88000: 0x1000,","\t            0x98000: 0x80401000,","\t            0xa8000: 0x400000,","\t            0xb8000: 0x1040,","\t            0xc8000: 0x80000000,","\t            0xd8000: 0x400040,","\t            0xe8000: 0x401040,","\t            0xf8000: 0x80000040,","\t            0x100000: 0x400040,","\t            0x110000: 0x401000,","\t            0x120000: 0x80000040,","\t            0x130000: 0x0,","\t            0x140000: 0x1040,","\t            0x150000: 0x80400040,","\t            0x160000: 0x80401000,","\t            0x170000: 0x80001040,","\t            0x180000: 0x80401040,","\t            0x190000: 0x80000000,","\t            0x1a0000: 0x80400000,","\t            0x1b0000: 0x401040,","\t            0x1c0000: 0x80001000,","\t            0x1d0000: 0x400000,","\t            0x1e0000: 0x40,","\t            0x1f0000: 0x1000,","\t            0x108000: 0x80400000,","\t            0x118000: 0x80401040,","\t            0x128000: 0x0,","\t            0x138000: 0x401000,","\t            0x148000: 0x400040,","\t            0x158000: 0x80000000,","\t            0x168000: 0x80001040,","\t            0x178000: 0x40,","\t            0x188000: 0x80000040,","\t            0x198000: 0x1000,","\t            0x1a8000: 0x80001000,","\t            0x1b8000: 0x80400040,","\t            0x1c8000: 0x1040,","\t            0x1d8000: 0x80401000,","\t            0x1e8000: 0x400000,","\t            0x1f8000: 0x401040","\t        },","\t        {","\t            0x0: 0x80,","\t            0x1000: 0x1040000,","\t            0x2000: 0x40000,","\t            0x3000: 0x20000000,","\t            0x4000: 0x20040080,","\t            0x5000: 0x1000080,","\t            0x6000: 0x21000080,","\t            0x7000: 0x40080,","\t            0x8000: 0x1000000,","\t            0x9000: 0x20040000,","\t            0xa000: 0x20000080,","\t            0xb000: 0x21040080,","\t            0xc000: 0x21040000,","\t            0xd000: 0x0,","\t            0xe000: 0x1040080,","\t            0xf000: 0x21000000,","\t            0x800: 0x1040080,","\t            0x1800: 0x21000080,","\t            0x2800: 0x80,","\t            0x3800: 0x1040000,","\t            0x4800: 0x40000,","\t            0x5800: 0x20040080,","\t            0x6800: 0x21040000,","\t            0x7800: 0x20000000,","\t            0x8800: 0x20040000,","\t            0x9800: 0x0,","\t            0xa800: 0x21040080,","\t            0xb800: 0x1000080,","\t            0xc800: 0x20000080,","\t            0xd800: 0x21000000,","\t            0xe800: 0x1000000,","\t            0xf800: 0x40080,","\t            0x10000: 0x40000,","\t            0x11000: 0x80,","\t            0x12000: 0x20000000,","\t            0x13000: 0x21000080,","\t            0x14000: 0x1000080,","\t            0x15000: 0x21040000,","\t            0x16000: 0x20040080,","\t            0x17000: 0x1000000,","\t            0x18000: 0x21040080,","\t            0x19000: 0x21000000,","\t            0x1a000: 0x1040000,","\t            0x1b000: 0x20040000,","\t            0x1c000: 0x40080,","\t            0x1d000: 0x20000080,","\t            0x1e000: 0x0,","\t            0x1f000: 0x1040080,","\t            0x10800: 0x21000080,","\t            0x11800: 0x1000000,","\t            0x12800: 0x1040000,","\t            0x13800: 0x20040080,","\t            0x14800: 0x20000000,","\t            0x15800: 0x1040080,","\t            0x16800: 0x80,","\t            0x17800: 0x21040000,","\t            0x18800: 0x40080,","\t            0x19800: 0x21040080,","\t            0x1a800: 0x0,","\t            0x1b800: 0x21000000,","\t            0x1c800: 0x1000080,","\t            0x1d800: 0x40000,","\t            0x1e800: 0x20040000,","\t            0x1f800: 0x20000080","\t        },","\t        {","\t            0x0: 0x10000008,","\t            0x100: 0x2000,","\t            0x200: 0x10200000,","\t            0x300: 0x10202008,","\t            0x400: 0x10002000,","\t            0x500: 0x200000,","\t            0x600: 0x200008,","\t            0x700: 0x10000000,","\t            0x800: 0x0,","\t            0x900: 0x10002008,","\t            0xa00: 0x202000,","\t            0xb00: 0x8,","\t            0xc00: 0x10200008,","\t            0xd00: 0x202008,","\t            0xe00: 0x2008,","\t            0xf00: 0x10202000,","\t            0x80: 0x10200000,","\t            0x180: 0x10202008,","\t            0x280: 0x8,","\t            0x380: 0x200000,","\t            0x480: 0x202008,","\t            0x580: 0x10000008,","\t            0x680: 0x10002000,","\t            0x780: 0x2008,","\t            0x880: 0x200008,","\t            0x980: 0x2000,","\t            0xa80: 0x10002008,","\t            0xb80: 0x10200008,","\t            0xc80: 0x0,","\t            0xd80: 0x10202000,","\t            0xe80: 0x202000,","\t            0xf80: 0x10000000,","\t            0x1000: 0x10002000,","\t            0x1100: 0x10200008,","\t            0x1200: 0x10202008,","\t            0x1300: 0x2008,","\t            0x1400: 0x200000,","\t            0x1500: 0x10000000,","\t            0x1600: 0x10000008,","\t            0x1700: 0x202000,","\t            0x1800: 0x202008,","\t            0x1900: 0x0,","\t            0x1a00: 0x8,","\t            0x1b00: 0x10200000,","\t            0x1c00: 0x2000,","\t            0x1d00: 0x10002008,","\t            0x1e00: 0x10202000,","\t            0x1f00: 0x200008,","\t            0x1080: 0x8,","\t            0x1180: 0x202000,","\t            0x1280: 0x200000,","\t            0x1380: 0x10000008,","\t            0x1480: 0x10002000,","\t            0x1580: 0x2008,","\t            0x1680: 0x10202008,","\t            0x1780: 0x10200000,","\t            0x1880: 0x10202000,","\t            0x1980: 0x10200008,","\t            0x1a80: 0x2000,","\t            0x1b80: 0x202008,","\t            0x1c80: 0x200008,","\t            0x1d80: 0x0,","\t            0x1e80: 0x10000000,","\t            0x1f80: 0x10002008","\t        },","\t        {","\t            0x0: 0x100000,","\t            0x10: 0x2000401,","\t            0x20: 0x400,","\t            0x30: 0x100401,","\t            0x40: 0x2100401,","\t            0x50: 0x0,","\t            0x60: 0x1,","\t            0x70: 0x2100001,","\t            0x80: 0x2000400,","\t            0x90: 0x100001,","\t            0xa0: 0x2000001,","\t            0xb0: 0x2100400,","\t            0xc0: 0x2100000,","\t            0xd0: 0x401,","\t            0xe0: 0x100400,","\t            0xf0: 0x2000000,","\t            0x8: 0x2100001,","\t            0x18: 0x0,","\t            0x28: 0x2000401,","\t            0x38: 0x2100400,","\t            0x48: 0x100000,","\t            0x58: 0x2000001,","\t            0x68: 0x2000000,","\t            0x78: 0x401,","\t            0x88: 0x100401,","\t            0x98: 0x2000400,","\t            0xa8: 0x2100000,","\t            0xb8: 0x100001,","\t            0xc8: 0x400,","\t            0xd8: 0x2100401,","\t            0xe8: 0x1,","\t            0xf8: 0x100400,","\t            0x100: 0x2000000,","\t            0x110: 0x100000,","\t            0x120: 0x2000401,","\t            0x130: 0x2100001,","\t            0x140: 0x100001,","\t            0x150: 0x2000400,","\t            0x160: 0x2100400,","\t            0x170: 0x100401,","\t            0x180: 0x401,","\t            0x190: 0x2100401,","\t            0x1a0: 0x100400,","\t            0x1b0: 0x1,","\t            0x1c0: 0x0,","\t            0x1d0: 0x2100000,","\t            0x1e0: 0x2000001,","\t            0x1f0: 0x400,","\t            0x108: 0x100400,","\t            0x118: 0x2000401,","\t            0x128: 0x2100001,","\t            0x138: 0x1,","\t            0x148: 0x2000000,","\t            0x158: 0x100000,","\t            0x168: 0x401,","\t            0x178: 0x2100400,","\t            0x188: 0x2000001,","\t            0x198: 0x2100000,","\t            0x1a8: 0x0,","\t            0x1b8: 0x2100401,","\t            0x1c8: 0x100401,","\t            0x1d8: 0x400,","\t            0x1e8: 0x2000400,","\t            0x1f8: 0x100001","\t        },","\t        {","\t            0x0: 0x8000820,","\t            0x1: 0x20000,","\t            0x2: 0x8000000,","\t            0x3: 0x20,","\t            0x4: 0x20020,","\t            0x5: 0x8020820,","\t            0x6: 0x8020800,","\t            0x7: 0x800,","\t            0x8: 0x8020000,","\t            0x9: 0x8000800,","\t            0xa: 0x20800,","\t            0xb: 0x8020020,","\t            0xc: 0x820,","\t            0xd: 0x0,","\t            0xe: 0x8000020,","\t            0xf: 0x20820,","\t            0x80000000: 0x800,","\t            0x80000001: 0x8020820,","\t            0x80000002: 0x8000820,","\t            0x80000003: 0x8000000,","\t            0x80000004: 0x8020000,","\t            0x80000005: 0x20800,","\t            0x80000006: 0x20820,","\t            0x80000007: 0x20,","\t            0x80000008: 0x8000020,","\t            0x80000009: 0x820,","\t            0x8000000a: 0x20020,","\t            0x8000000b: 0x8020800,","\t            0x8000000c: 0x0,","\t            0x8000000d: 0x8020020,","\t            0x8000000e: 0x8000800,","\t            0x8000000f: 0x20000,","\t            0x10: 0x20820,","\t            0x11: 0x8020800,","\t            0x12: 0x20,","\t            0x13: 0x800,","\t            0x14: 0x8000800,","\t            0x15: 0x8000020,","\t            0x16: 0x8020020,","\t            0x17: 0x20000,","\t            0x18: 0x0,","\t            0x19: 0x20020,","\t            0x1a: 0x8020000,","\t            0x1b: 0x8000820,","\t            0x1c: 0x8020820,","\t            0x1d: 0x20800,","\t            0x1e: 0x820,","\t            0x1f: 0x8000000,","\t            0x80000010: 0x20000,","\t            0x80000011: 0x800,","\t            0x80000012: 0x8020020,","\t            0x80000013: 0x20820,","\t            0x80000014: 0x20,","\t            0x80000015: 0x8020000,","\t            0x80000016: 0x8000000,","\t            0x80000017: 0x8000820,","\t            0x80000018: 0x8020820,","\t            0x80000019: 0x8000020,","\t            0x8000001a: 0x8000800,","\t            0x8000001b: 0x0,","\t            0x8000001c: 0x20800,","\t            0x8000001d: 0x820,","\t            0x8000001e: 0x20020,","\t            0x8000001f: 0x8020800","\t        }","\t    ];","","\t    // Masks that select the SBOX input","\t    var SBOX_MASK = [","\t        0xf8000001, 0x1f800000, 0x01f80000, 0x001f8000,","\t        0x0001f800, 0x00001f80, 0x000001f8, 0x8000001f","\t    ];","","\t    /**","\t     * DES block cipher algorithm.","\t     */","\t    var DES = C_algo.DES = BlockCipher.extend({","\t        _doReset: function () {","\t            // Shortcuts","\t            var key = this._key;","\t            var keyWords = key.words;","","\t            // Select 56 bits according to PC1","\t            var keyBits = [];","\t            for (var i = 0; i < 56; i++) {","\t                var keyBitPos = PC1[i] - 1;","\t                keyBits[i] = (keyWords[keyBitPos >>> 5] >>> (31 - keyBitPos % 32)) & 1;","\t            }","","\t            // Assemble 16 subkeys","\t            var subKeys = this._subKeys = [];","\t            for (var nSubKey = 0; nSubKey < 16; nSubKey++) {","\t                // Create subkey","\t                var subKey = subKeys[nSubKey] = [];","","\t                // Shortcut","\t                var bitShift = BIT_SHIFTS[nSubKey];","","\t                // Select 48 bits according to PC2","\t                for (var i = 0; i < 24; i++) {","\t                    // Select from the left 28 key bits","\t                    subKey[(i / 6) | 0] |= keyBits[((PC2[i] - 1) + bitShift) % 28] << (31 - i % 6);","","\t                    // Select from the right 28 key bits","\t                    subKey[4 + ((i / 6) | 0)] |= keyBits[28 + (((PC2[i + 24] - 1) + bitShift) % 28)] << (31 - i % 6);","\t                }","","\t                // Since each subkey is applied to an expanded 32-bit input,","\t                // the subkey can be broken into 8 values scaled to 32-bits,","\t                // which allows the key to be used without expansion","\t                subKey[0] = (subKey[0] << 1) | (subKey[0] >>> 31);","\t                for (var i = 1; i < 7; i++) {","\t                    subKey[i] = subKey[i] >>> ((i - 1) * 4 + 3);","\t                }","\t                subKey[7] = (subKey[7] << 5) | (subKey[7] >>> 27);","\t            }","","\t            // Compute inverse subkeys","\t            var invSubKeys = this._invSubKeys = [];","\t            for (var i = 0; i < 16; i++) {","\t                invSubKeys[i] = subKeys[15 - i];","\t            }","\t        },","","\t        encryptBlock: function (M, offset) {","\t            this._doCryptBlock(M, offset, this._subKeys);","\t        },","","\t        decryptBlock: function (M, offset) {","\t            this._doCryptBlock(M, offset, this._invSubKeys);","\t        },","","\t        _doCryptBlock: function (M, offset, subKeys) {","\t            // Get input","\t            this._lBlock = M[offset];","\t            this._rBlock = M[offset + 1];","","\t            // Initial permutation","\t            exchangeLR.call(this, 4,  0x0f0f0f0f);","\t            exchangeLR.call(this, 16, 0x0000ffff);","\t            exchangeRL.call(this, 2,  0x33333333);","\t            exchangeRL.call(this, 8,  0x00ff00ff);","\t            exchangeLR.call(this, 1,  0x55555555);","","\t            // Rounds","\t            for (var round = 0; round < 16; round++) {","\t                // Shortcuts","\t                var subKey = subKeys[round];","\t                var lBlock = this._lBlock;","\t                var rBlock = this._rBlock;","","\t                // Feistel function","\t                var f = 0;","\t                for (var i = 0; i < 8; i++) {","\t                    f |= SBOX_P[i][((rBlock ^ subKey[i]) & SBOX_MASK[i]) >>> 0];","\t                }","\t                this._lBlock = rBlock;","\t                this._rBlock = lBlock ^ f;","\t            }","","\t            // Undo swap from last round","\t            var t = this._lBlock;","\t            this._lBlock = this._rBlock;","\t            this._rBlock = t;","","\t            // Final permutation","\t            exchangeLR.call(this, 1,  0x55555555);","\t            exchangeRL.call(this, 8,  0x00ff00ff);","\t            exchangeRL.call(this, 2,  0x33333333);","\t            exchangeLR.call(this, 16, 0x0000ffff);","\t            exchangeLR.call(this, 4,  0x0f0f0f0f);","","\t            // Set output","\t            M[offset] = this._lBlock;","\t            M[offset + 1] = this._rBlock;","\t        },","","\t        keySize: 64/32,","","\t        ivSize: 64/32,","","\t        blockSize: 64/32","\t    });","","\t    // Swap bits across the left and right words","\t    function exchangeLR(offset, mask) {","\t        var t = ((this._lBlock >>> offset) ^ this._rBlock) & mask;","\t        this._rBlock ^= t;","\t        this._lBlock ^= t << offset;","\t    }","","\t    function exchangeRL(offset, mask) {","\t        var t = ((this._rBlock >>> offset) ^ this._lBlock) & mask;","\t        this._lBlock ^= t;","\t        this._rBlock ^= t << offset;","\t    }","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.DES.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.DES.decrypt(ciphertext, key, cfg);","\t     */","\t    C.DES = BlockCipher._createHelper(DES);","","\t    /**","\t     * Triple-DES block cipher algorithm.","\t     */","\t    var TripleDES = C_algo.TripleDES = BlockCipher.extend({","\t        _doReset: function () {","\t            // Shortcuts","\t            var key = this._key;","\t            var keyWords = key.words;","","\t            // Create DES instances","\t            this._des1 = DES.createEncryptor(WordArray.create(keyWords.slice(0, 2)));","\t            this._des2 = DES.createEncryptor(WordArray.create(keyWords.slice(2, 4)));","\t            this._des3 = DES.createEncryptor(WordArray.create(keyWords.slice(4, 6)));","\t        },","","\t        encryptBlock: function (M, offset) {","\t            this._des1.encryptBlock(M, offset);","\t            this._des2.decryptBlock(M, offset);","\t            this._des3.encryptBlock(M, offset);","\t        },","","\t        decryptBlock: function (M, offset) {","\t            this._des3.decryptBlock(M, offset);","\t            this._des2.encryptBlock(M, offset);","\t            this._des1.decryptBlock(M, offset);","\t        },","","\t        keySize: 192/32,","","\t        ivSize: 64/32,","","\t        blockSize: 64/32","\t    });","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.TripleDES.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.TripleDES.decrypt(ciphertext, key, cfg);","\t     */","\t    C.TripleDES = BlockCipher._createHelper(TripleDES);","\t}());","","","\treturn CryptoJS.TripleDES;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"22":1,"25":1,"36":1,"48":1,"51":1,"583":1,"591":1,"594":0,"595":0,"598":0,"599":0,"600":0,"601":0,"605":0,"606":0,"608":0,"611":0,"614":0,"616":0,"619":0,"625":0,"626":0,"627":0,"629":0,"633":0,"634":0,"635":0,"640":0,"644":0,"649":0,"650":0,"653":0,"654":0,"655":0,"656":0,"657":0,"660":0,"662":0,"663":0,"664":0,"667":0,"668":0,"669":0,"671":0,"672":0,"676":0,"677":0,"678":0,"681":0,"682":0,"683":0,"684":0,"685":0,"688":0,"689":0,"700":1,"701":0,"702":0,"703":0,"706":1,"707":0,"708":0,"709":0,"720":1,"725":1,"728":0,"729":0,"732":0,"733":0,"734":0,"738":0,"739":0,"740":0,"744":0,"745":0,"746":0,"764":1,"768":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rc4.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rc4.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":1,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":1,"44":1,"45":0,"46":0,"47":0,"48":1,"49":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":27,"loc":{"start":{"line":27,"column":19},"end":{"line":27,"column":31}}},"5":{"name":"(anonymous_5)","line":56,"loc":{"start":{"line":56,"column":26},"end":{"line":56,"column":47}}},"6":{"name":"generateKeystreamWord","line":65,"loc":{"start":{"line":65,"column":5},"end":{"line":65,"column":38}}},"7":{"name":"(anonymous_7)","line":115,"loc":{"start":{"line":115,"column":19},"end":{"line":115,"column":31}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":139,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":146}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":84}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":134,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":43}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":25}},"12":{"start":{"line":26,"column":5},"end":{"line":63,"column":8}},"13":{"start":{"line":29,"column":13},"end":{"line":29,"column":33}},"14":{"start":{"line":30,"column":13},"end":{"line":30,"column":38}},"15":{"start":{"line":31,"column":13},"end":{"line":31,"column":44}},"16":{"start":{"line":34,"column":13},"end":{"line":34,"column":34}},"17":{"start":{"line":35,"column":13},"end":{"line":37,"column":14}},"18":{"start":{"line":36,"column":17},"end":{"line":36,"column":26}},"19":{"start":{"line":40,"column":13},"end":{"line":50,"column":14}},"20":{"start":{"line":41,"column":17},"end":{"line":41,"column":52}},"21":{"start":{"line":42,"column":17},"end":{"line":42,"column":103}},"22":{"start":{"line":44,"column":17},"end":{"line":44,"column":48}},"23":{"start":{"line":47,"column":17},"end":{"line":47,"column":30}},"24":{"start":{"line":48,"column":17},"end":{"line":48,"column":29}},"25":{"start":{"line":49,"column":17},"end":{"line":49,"column":26}},"26":{"start":{"line":53,"column":13},"end":{"line":53,"column":35}},"27":{"start":{"line":57,"column":13},"end":{"line":57,"column":59}},"28":{"start":{"line":65,"column":5},"end":{"line":90,"column":6}},"29":{"start":{"line":67,"column":9},"end":{"line":67,"column":25}},"30":{"start":{"line":68,"column":9},"end":{"line":68,"column":25}},"31":{"start":{"line":69,"column":9},"end":{"line":69,"column":25}},"32":{"start":{"line":72,"column":9},"end":{"line":72,"column":31}},"33":{"start":{"line":73,"column":9},"end":{"line":83,"column":10}},"34":{"start":{"line":74,"column":13},"end":{"line":74,"column":31}},"35":{"start":{"line":75,"column":13},"end":{"line":75,"column":34}},"36":{"start":{"line":78,"column":13},"end":{"line":78,"column":26}},"37":{"start":{"line":79,"column":13},"end":{"line":79,"column":25}},"38":{"start":{"line":80,"column":13},"end":{"line":80,"column":22}},"39":{"start":{"line":82,"column":13},"end":{"line":82,"column":69}},"40":{"start":{"line":86,"column":9},"end":{"line":86,"column":21}},"41":{"start":{"line":87,"column":9},"end":{"line":87,"column":21}},"42":{"start":{"line":89,"column":9},"end":{"line":89,"column":30}},"43":{"start":{"line":100,"column":5},"end":{"line":100,"column":45}},"44":{"start":{"line":105,"column":5},"end":{"line":123,"column":8}},"45":{"start":{"line":116,"column":13},"end":{"line":116,"column":37}},"46":{"start":{"line":119,"column":13},"end":{"line":121,"column":14}},"47":{"start":{"line":120,"column":17},"end":{"line":120,"column":50}},"48":{"start":{"line":133,"column":5},"end":{"line":133,"column":53}},"49":{"start":{"line":137,"column":1},"end":{"line":137,"column":21}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var StreamCipher = C_lib.StreamCipher;","\t    var C_algo = C.algo;","","\t    /**","\t     * RC4 stream cipher algorithm.","\t     */","\t    var RC4 = C_algo.RC4 = StreamCipher.extend({","\t        _doReset: function () {","\t            // Shortcuts","\t            var key = this._key;","\t            var keyWords = key.words;","\t            var keySigBytes = key.sigBytes;","","\t            // Init sbox","\t            var S = this._S = [];","\t            for (var i = 0; i < 256; i++) {","\t                S[i] = i;","\t            }","","\t            // Key setup","\t            for (var i = 0, j = 0; i < 256; i++) {","\t                var keyByteIndex = i % keySigBytes;","\t                var keyByte = (keyWords[keyByteIndex >>> 2] >>> (24 - (keyByteIndex % 4) * 8)) & 0xff;","","\t                j = (j + S[i] + keyByte) % 256;","","\t                // Swap","\t                var t = S[i];","\t                S[i] = S[j];","\t                S[j] = t;","\t            }","","\t            // Counters","\t            this._i = this._j = 0;","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            M[offset] ^= generateKeystreamWord.call(this);","\t        },","","\t        keySize: 256/32,","","\t        ivSize: 0","\t    });","","\t    function generateKeystreamWord() {","\t        // Shortcuts","\t        var S = this._S;","\t        var i = this._i;","\t        var j = this._j;","","\t        // Generate keystream word","\t        var keystreamWord = 0;","\t        for (var n = 0; n < 4; n++) {","\t            i = (i + 1) % 256;","\t            j = (j + S[i]) % 256;","","\t            // Swap","\t            var t = S[i];","\t            S[i] = S[j];","\t            S[j] = t;","","\t            keystreamWord |= S[(S[i] + S[j]) % 256] << (24 - n * 8);","\t        }","","\t        // Update counters","\t        this._i = i;","\t        this._j = j;","","\t        return keystreamWord;","\t    }","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.RC4.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.RC4.decrypt(ciphertext, key, cfg);","\t     */","\t    C.RC4 = StreamCipher._createHelper(RC4);","","\t    /**","\t     * Modified RC4 stream cipher algorithm.","\t     */","\t    var RC4Drop = C_algo.RC4Drop = RC4.extend({","\t        /**","\t         * Configuration options.","\t         *","\t         * @property {number} drop The number of keystream words to drop. Default 192","\t         */","\t        cfg: RC4.cfg.extend({","\t            drop: 192","\t        }),","","\t        _doReset: function () {","\t            RC4._doReset.call(this);","","\t            // Drop","\t            for (var i = this.cfg.drop; i > 0; i--) {","\t                generateKeystreamWord.call(this);","\t            }","\t        }","\t    });","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.RC4Drop.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.RC4Drop.decrypt(ciphertext, key, cfg);","\t     */","\t    C.RC4Drop = StreamCipher._createHelper(RC4Drop);","\t}());","","","\treturn CryptoJS.RC4;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"26":1,"29":0,"30":0,"31":0,"34":0,"35":0,"36":0,"40":0,"41":0,"42":0,"44":0,"47":0,"48":0,"49":0,"53":0,"57":0,"65":1,"67":0,"68":0,"69":0,"72":0,"73":0,"74":0,"75":0,"78":0,"79":0,"80":0,"82":0,"86":0,"87":0,"89":0,"100":1,"105":1,"116":0,"119":0,"120":0,"133":1,"137":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rabbit.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rabbit.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":1,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1,"84":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":32,"loc":{"start":{"line":32,"column":19},"end":{"line":32,"column":31}}},"5":{"name":"(anonymous_5)","line":102,"loc":{"start":{"line":102,"column":26},"end":{"line":102,"column":47}}},"6":{"name":"nextState","line":130,"loc":{"start":{"line":130,"column":5},"end":{"line":130,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":192,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":146}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":84}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":187,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":43}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":25}},"12":{"start":{"line":24,"column":5},"end":{"line":24,"column":17}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":17}},"14":{"start":{"line":26,"column":5},"end":{"line":26,"column":17}},"15":{"start":{"line":31,"column":5},"end":{"line":128,"column":8}},"16":{"start":{"line":34,"column":13},"end":{"line":34,"column":37}},"17":{"start":{"line":35,"column":13},"end":{"line":35,"column":34}},"18":{"start":{"line":38,"column":13},"end":{"line":41,"column":14}},"19":{"start":{"line":39,"column":17},"end":{"line":40,"column":70}},"20":{"start":{"line":44,"column":13},"end":{"line":49,"column":15}},"21":{"start":{"line":52,"column":13},"end":{"line":57,"column":15}},"22":{"start":{"line":60,"column":13},"end":{"line":60,"column":25}},"23":{"start":{"line":63,"column":13},"end":{"line":65,"column":14}},"24":{"start":{"line":64,"column":17},"end":{"line":64,"column":38}},"25":{"start":{"line":68,"column":13},"end":{"line":70,"column":14}},"26":{"start":{"line":69,"column":17},"end":{"line":69,"column":40}},"27":{"start":{"line":73,"column":13},"end":{"line":99,"column":14}},"28":{"start":{"line":75,"column":17},"end":{"line":75,"column":35}},"29":{"start":{"line":76,"column":17},"end":{"line":76,"column":34}},"30":{"start":{"line":77,"column":17},"end":{"line":77,"column":34}},"31":{"start":{"line":80,"column":17},"end":{"line":80,"column":118}},"32":{"start":{"line":81,"column":17},"end":{"line":81,"column":118}},"33":{"start":{"line":82,"column":17},"end":{"line":82,"column":58}},"34":{"start":{"line":83,"column":17},"end":{"line":83,"column":58}},"35":{"start":{"line":86,"column":17},"end":{"line":86,"column":28}},"36":{"start":{"line":87,"column":17},"end":{"line":87,"column":28}},"37":{"start":{"line":88,"column":17},"end":{"line":88,"column":28}},"38":{"start":{"line":89,"column":17},"end":{"line":89,"column":28}},"39":{"start":{"line":90,"column":17},"end":{"line":90,"column":28}},"40":{"start":{"line":91,"column":17},"end":{"line":91,"column":28}},"41":{"start":{"line":92,"column":17},"end":{"line":92,"column":28}},"42":{"start":{"line":93,"column":17},"end":{"line":93,"column":28}},"43":{"start":{"line":96,"column":17},"end":{"line":98,"column":18}},"44":{"start":{"line":97,"column":21},"end":{"line":97,"column":42}},"45":{"start":{"line":104,"column":13},"end":{"line":104,"column":29}},"46":{"start":{"line":107,"column":13},"end":{"line":107,"column":34}},"47":{"start":{"line":110,"column":13},"end":{"line":110,"column":56}},"48":{"start":{"line":111,"column":13},"end":{"line":111,"column":56}},"49":{"start":{"line":112,"column":13},"end":{"line":112,"column":56}},"50":{"start":{"line":113,"column":13},"end":{"line":113,"column":56}},"51":{"start":{"line":115,"column":13},"end":{"line":122,"column":14}},"52":{"start":{"line":117,"column":17},"end":{"line":118,"column":70}},"53":{"start":{"line":121,"column":17},"end":{"line":121,"column":39}},"54":{"start":{"line":130,"column":5},"end":{"line":176,"column":6}},"55":{"start":{"line":132,"column":9},"end":{"line":132,"column":25}},"56":{"start":{"line":133,"column":9},"end":{"line":133,"column":25}},"57":{"start":{"line":136,"column":9},"end":{"line":138,"column":10}},"58":{"start":{"line":137,"column":13},"end":{"line":137,"column":26}},"59":{"start":{"line":141,"column":9},"end":{"line":141,"column":50}},"60":{"start":{"line":142,"column":9},"end":{"line":142,"column":81}},"61":{"start":{"line":143,"column":9},"end":{"line":143,"column":81}},"62":{"start":{"line":144,"column":9},"end":{"line":144,"column":81}},"63":{"start":{"line":145,"column":9},"end":{"line":145,"column":81}},"64":{"start":{"line":146,"column":9},"end":{"line":146,"column":81}},"65":{"start":{"line":147,"column":9},"end":{"line":147,"column":81}},"66":{"start":{"line":148,"column":9},"end":{"line":148,"column":81}},"67":{"start":{"line":149,"column":9},"end":{"line":149,"column":56}},"68":{"start":{"line":152,"column":9},"end":{"line":165,"column":10}},"69":{"start":{"line":153,"column":13},"end":{"line":153,"column":34}},"70":{"start":{"line":156,"column":13},"end":{"line":156,"column":34}},"71":{"start":{"line":157,"column":13},"end":{"line":157,"column":32}},"72":{"start":{"line":160,"column":13},"end":{"line":160,"column":72}},"73":{"start":{"line":161,"column":13},"end":{"line":161,"column":86}},"74":{"start":{"line":164,"column":13},"end":{"line":164,"column":28}},"75":{"start":{"line":168,"column":9},"end":{"line":168,"column":93}},"76":{"start":{"line":169,"column":9},"end":{"line":169,"column":67}},"77":{"start":{"line":170,"column":9},"end":{"line":170,"column":93}},"78":{"start":{"line":171,"column":9},"end":{"line":171,"column":67}},"79":{"start":{"line":172,"column":9},"end":{"line":172,"column":93}},"80":{"start":{"line":173,"column":9},"end":{"line":173,"column":67}},"81":{"start":{"line":174,"column":9},"end":{"line":174,"column":93}},"82":{"start":{"line":175,"column":9},"end":{"line":175,"column":67}},"83":{"start":{"line":186,"column":5},"end":{"line":186,"column":51}},"84":{"start":{"line":190,"column":1},"end":{"line":190,"column":24}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":73,"type":"if","locations":[{"start":{"line":73,"column":13},"end":{"line":73,"column":13}},{"start":{"line":73,"column":13},"end":{"line":73,"column":13}}]},"5":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":69},"end":{"line":142,"column":70}},{"start":{"line":142,"column":73},"end":{"line":142,"column":74}}]},"6":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":69},"end":{"line":143,"column":70}},{"start":{"line":143,"column":73},"end":{"line":143,"column":74}}]},"7":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":69},"end":{"line":144,"column":70}},{"start":{"line":144,"column":73},"end":{"line":144,"column":74}}]},"8":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":69},"end":{"line":145,"column":70}},{"start":{"line":145,"column":73},"end":{"line":145,"column":74}}]},"9":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":69},"end":{"line":146,"column":70}},{"start":{"line":146,"column":73},"end":{"line":146,"column":74}}]},"10":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":69},"end":{"line":147,"column":70}},{"start":{"line":147,"column":73},"end":{"line":147,"column":74}}]},"11":{"line":148,"type":"cond-expr","locations":[{"start":{"line":148,"column":69},"end":{"line":148,"column":70}},{"start":{"line":148,"column":73},"end":{"line":148,"column":74}}]},"12":{"line":149,"type":"cond-expr","locations":[{"start":{"line":149,"column":50},"end":{"line":149,"column":51}},{"start":{"line":149,"column":54},"end":{"line":149,"column":55}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var StreamCipher = C_lib.StreamCipher;","\t    var C_algo = C.algo;","","\t    // Reusable objects","\t    var S  = [];","\t    var C_ = [];","\t    var G  = [];","","\t    /**","\t     * Rabbit stream cipher algorithm","\t     */","\t    var Rabbit = C_algo.Rabbit = StreamCipher.extend({","\t        _doReset: function () {","\t            // Shortcuts","\t            var K = this._key.words;","\t            var iv = this.cfg.iv;","","\t            // Swap endian","\t            for (var i = 0; i < 4; i++) {","\t                K[i] = (((K[i] << 8)  | (K[i] >>> 24)) & 0x00ff00ff) |","\t                       (((K[i] << 24) | (K[i] >>> 8))  & 0xff00ff00);","\t            }","","\t            // Generate initial state values","\t            var X = this._X = [","\t                K[0], (K[3] << 16) | (K[2] >>> 16),","\t                K[1], (K[0] << 16) | (K[3] >>> 16),","\t                K[2], (K[1] << 16) | (K[0] >>> 16),","\t                K[3], (K[2] << 16) | (K[1] >>> 16)","\t            ];","","\t            // Generate initial counter values","\t            var C = this._C = [","\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),","\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),","\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),","\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)","\t            ];","","\t            // Carry bit","\t            this._b = 0;","","\t            // Iterate the system four times","\t            for (var i = 0; i < 4; i++) {","\t                nextState.call(this);","\t            }","","\t            // Modify the counters","\t            for (var i = 0; i < 8; i++) {","\t                C[i] ^= X[(i + 4) & 7];","\t            }","","\t            // IV setup","\t            if (iv) {","\t                // Shortcuts","\t                var IV = iv.words;","\t                var IV_0 = IV[0];","\t                var IV_1 = IV[1];","","\t                // Generate four subvectors","\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);","\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);","\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);","\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);","","\t                // Modify counter values","\t                C[0] ^= i0;","\t                C[1] ^= i1;","\t                C[2] ^= i2;","\t                C[3] ^= i3;","\t                C[4] ^= i0;","\t                C[5] ^= i1;","\t                C[6] ^= i2;","\t                C[7] ^= i3;","","\t                // Iterate the system four times","\t                for (var i = 0; i < 4; i++) {","\t                    nextState.call(this);","\t                }","\t            }","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcut","\t            var X = this._X;","","\t            // Iterate the system","\t            nextState.call(this);","","\t            // Generate four keystream words","\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);","\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);","\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);","\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);","","\t            for (var i = 0; i < 4; i++) {","\t                // Swap endian","\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |","\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);","","\t                // Encrypt","\t                M[offset + i] ^= S[i];","\t            }","\t        },","","\t        blockSize: 128/32,","","\t        ivSize: 64/32","\t    });","","\t    function nextState() {","\t        // Shortcuts","\t        var X = this._X;","\t        var C = this._C;","","\t        // Save old counter values","\t        for (var i = 0; i < 8; i++) {","\t            C_[i] = C[i];","\t        }","","\t        // Calculate new counter values","\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;","\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;","\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;","\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;","\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;","\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;","\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;","\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;","\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;","","\t        // Calculate the g-values","\t        for (var i = 0; i < 8; i++) {","\t            var gx = X[i] + C[i];","","\t            // Construct high and low argument for squaring","\t            var ga = gx & 0xffff;","\t            var gb = gx >>> 16;","","\t            // Calculate high and low result of squaring","\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;","\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);","","\t            // High XOR low","\t            G[i] = gh ^ gl;","\t        }","","\t        // Calculate new state values","\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;","\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;","\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;","\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;","\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;","\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;","\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;","\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;","\t    }","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.Rabbit.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.Rabbit.decrypt(ciphertext, key, cfg);","\t     */","\t    C.Rabbit = StreamCipher._createHelper(Rabbit);","\t}());","","","\treturn CryptoJS.Rabbit;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"24":1,"25":1,"26":1,"31":1,"34":0,"35":0,"38":0,"39":0,"44":0,"52":0,"60":0,"63":0,"64":0,"68":0,"69":0,"73":0,"75":0,"76":0,"77":0,"80":0,"81":0,"82":0,"83":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"92":0,"93":0,"96":0,"97":0,"104":0,"107":0,"110":0,"111":0,"112":0,"113":0,"115":0,"117":0,"121":0,"130":1,"132":0,"133":0,"136":0,"137":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"148":0,"149":0,"152":0,"153":0,"156":0,"157":0,"160":0,"161":0,"164":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"174":0,"175":0,"186":1,"190":1}},"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rabbit-legacy.js":{"path":"/home/travis/build/npmtest/node-npmtest-crypto-js/crypto-js/rabbit-legacy.js","s":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":1,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":1,"82":1},"b":{"1":[1,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[0,0],"10":[0,0],"11":[0,0],"12":[0,0]},"f":{"1":1,"2":1,"3":1,"4":0,"5":0,"6":0},"fnMap":{"1":{"name":"(anonymous_1)","line":1,"loc":{"start":{"line":1,"column":2},"end":{"line":1,"column":34}}},"2":{"name":"(anonymous_2)","line":14,"loc":{"start":{"line":14,"column":8},"end":{"line":14,"column":28}}},"3":{"name":"(anonymous_3)","line":16,"loc":{"start":{"line":16,"column":2},"end":{"line":16,"column":14}}},"4":{"name":"(anonymous_4)","line":36,"loc":{"start":{"line":36,"column":19},"end":{"line":36,"column":31}}},"5":{"name":"(anonymous_5)","line":100,"loc":{"start":{"line":100,"column":26},"end":{"line":100,"column":47}}},"6":{"name":"nextState","line":128,"loc":{"start":{"line":128,"column":5},"end":{"line":128,"column":26}}}},"statementMap":{"1":{"start":{"line":1,"column":1},"end":{"line":190,"column":4}},"2":{"start":{"line":2,"column":1},"end":{"line":13,"column":2}},"3":{"start":{"line":4,"column":2},"end":{"line":4,"column":146}},"4":{"start":{"line":6,"column":6},"end":{"line":13,"column":2}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":84}},"6":{"start":{"line":12,"column":2},"end":{"line":12,"column":25}},"7":{"start":{"line":16,"column":1},"end":{"line":185,"column":6}},"8":{"start":{"line":18,"column":5},"end":{"line":18,"column":22}},"9":{"start":{"line":19,"column":5},"end":{"line":19,"column":23}},"10":{"start":{"line":20,"column":5},"end":{"line":20,"column":43}},"11":{"start":{"line":21,"column":5},"end":{"line":21,"column":25}},"12":{"start":{"line":24,"column":5},"end":{"line":24,"column":17}},"13":{"start":{"line":25,"column":5},"end":{"line":25,"column":17}},"14":{"start":{"line":26,"column":5},"end":{"line":26,"column":17}},"15":{"start":{"line":35,"column":5},"end":{"line":126,"column":8}},"16":{"start":{"line":38,"column":13},"end":{"line":38,"column":37}},"17":{"start":{"line":39,"column":13},"end":{"line":39,"column":34}},"18":{"start":{"line":42,"column":13},"end":{"line":47,"column":15}},"19":{"start":{"line":50,"column":13},"end":{"line":55,"column":15}},"20":{"start":{"line":58,"column":13},"end":{"line":58,"column":25}},"21":{"start":{"line":61,"column":13},"end":{"line":63,"column":14}},"22":{"start":{"line":62,"column":17},"end":{"line":62,"column":38}},"23":{"start":{"line":66,"column":13},"end":{"line":68,"column":14}},"24":{"start":{"line":67,"column":17},"end":{"line":67,"column":40}},"25":{"start":{"line":71,"column":13},"end":{"line":97,"column":14}},"26":{"start":{"line":73,"column":17},"end":{"line":73,"column":35}},"27":{"start":{"line":74,"column":17},"end":{"line":74,"column":34}},"28":{"start":{"line":75,"column":17},"end":{"line":75,"column":34}},"29":{"start":{"line":78,"column":17},"end":{"line":78,"column":118}},"30":{"start":{"line":79,"column":17},"end":{"line":79,"column":118}},"31":{"start":{"line":80,"column":17},"end":{"line":80,"column":58}},"32":{"start":{"line":81,"column":17},"end":{"line":81,"column":58}},"33":{"start":{"line":84,"column":17},"end":{"line":84,"column":28}},"34":{"start":{"line":85,"column":17},"end":{"line":85,"column":28}},"35":{"start":{"line":86,"column":17},"end":{"line":86,"column":28}},"36":{"start":{"line":87,"column":17},"end":{"line":87,"column":28}},"37":{"start":{"line":88,"column":17},"end":{"line":88,"column":28}},"38":{"start":{"line":89,"column":17},"end":{"line":89,"column":28}},"39":{"start":{"line":90,"column":17},"end":{"line":90,"column":28}},"40":{"start":{"line":91,"column":17},"end":{"line":91,"column":28}},"41":{"start":{"line":94,"column":17},"end":{"line":96,"column":18}},"42":{"start":{"line":95,"column":21},"end":{"line":95,"column":42}},"43":{"start":{"line":102,"column":13},"end":{"line":102,"column":29}},"44":{"start":{"line":105,"column":13},"end":{"line":105,"column":34}},"45":{"start":{"line":108,"column":13},"end":{"line":108,"column":56}},"46":{"start":{"line":109,"column":13},"end":{"line":109,"column":56}},"47":{"start":{"line":110,"column":13},"end":{"line":110,"column":56}},"48":{"start":{"line":111,"column":13},"end":{"line":111,"column":56}},"49":{"start":{"line":113,"column":13},"end":{"line":120,"column":14}},"50":{"start":{"line":115,"column":17},"end":{"line":116,"column":70}},"51":{"start":{"line":119,"column":17},"end":{"line":119,"column":39}},"52":{"start":{"line":128,"column":5},"end":{"line":174,"column":6}},"53":{"start":{"line":130,"column":9},"end":{"line":130,"column":25}},"54":{"start":{"line":131,"column":9},"end":{"line":131,"column":25}},"55":{"start":{"line":134,"column":9},"end":{"line":136,"column":10}},"56":{"start":{"line":135,"column":13},"end":{"line":135,"column":26}},"57":{"start":{"line":139,"column":9},"end":{"line":139,"column":50}},"58":{"start":{"line":140,"column":9},"end":{"line":140,"column":81}},"59":{"start":{"line":141,"column":9},"end":{"line":141,"column":81}},"60":{"start":{"line":142,"column":9},"end":{"line":142,"column":81}},"61":{"start":{"line":143,"column":9},"end":{"line":143,"column":81}},"62":{"start":{"line":144,"column":9},"end":{"line":144,"column":81}},"63":{"start":{"line":145,"column":9},"end":{"line":145,"column":81}},"64":{"start":{"line":146,"column":9},"end":{"line":146,"column":81}},"65":{"start":{"line":147,"column":9},"end":{"line":147,"column":56}},"66":{"start":{"line":150,"column":9},"end":{"line":163,"column":10}},"67":{"start":{"line":151,"column":13},"end":{"line":151,"column":34}},"68":{"start":{"line":154,"column":13},"end":{"line":154,"column":34}},"69":{"start":{"line":155,"column":13},"end":{"line":155,"column":32}},"70":{"start":{"line":158,"column":13},"end":{"line":158,"column":72}},"71":{"start":{"line":159,"column":13},"end":{"line":159,"column":86}},"72":{"start":{"line":162,"column":13},"end":{"line":162,"column":28}},"73":{"start":{"line":166,"column":9},"end":{"line":166,"column":93}},"74":{"start":{"line":167,"column":9},"end":{"line":167,"column":67}},"75":{"start":{"line":168,"column":9},"end":{"line":168,"column":93}},"76":{"start":{"line":169,"column":9},"end":{"line":169,"column":67}},"77":{"start":{"line":170,"column":9},"end":{"line":170,"column":93}},"78":{"start":{"line":171,"column":9},"end":{"line":171,"column":67}},"79":{"start":{"line":172,"column":9},"end":{"line":172,"column":93}},"80":{"start":{"line":173,"column":9},"end":{"line":173,"column":67}},"81":{"start":{"line":184,"column":5},"end":{"line":184,"column":63}},"82":{"start":{"line":188,"column":1},"end":{"line":188,"column":30}}},"branchMap":{"1":{"line":2,"type":"if","locations":[{"start":{"line":2,"column":1},"end":{"line":2,"column":1}},{"start":{"line":2,"column":1},"end":{"line":2,"column":1}}]},"2":{"line":6,"type":"if","locations":[{"start":{"line":6,"column":6},"end":{"line":6,"column":6}},{"start":{"line":6,"column":6},"end":{"line":6,"column":6}}]},"3":{"line":6,"type":"binary-expr","locations":[{"start":{"line":6,"column":10},"end":{"line":6,"column":38}},{"start":{"line":6,"column":42},"end":{"line":6,"column":52}}]},"4":{"line":71,"type":"if","locations":[{"start":{"line":71,"column":13},"end":{"line":71,"column":13}},{"start":{"line":71,"column":13},"end":{"line":71,"column":13}}]},"5":{"line":140,"type":"cond-expr","locations":[{"start":{"line":140,"column":69},"end":{"line":140,"column":70}},{"start":{"line":140,"column":73},"end":{"line":140,"column":74}}]},"6":{"line":141,"type":"cond-expr","locations":[{"start":{"line":141,"column":69},"end":{"line":141,"column":70}},{"start":{"line":141,"column":73},"end":{"line":141,"column":74}}]},"7":{"line":142,"type":"cond-expr","locations":[{"start":{"line":142,"column":69},"end":{"line":142,"column":70}},{"start":{"line":142,"column":73},"end":{"line":142,"column":74}}]},"8":{"line":143,"type":"cond-expr","locations":[{"start":{"line":143,"column":69},"end":{"line":143,"column":70}},{"start":{"line":143,"column":73},"end":{"line":143,"column":74}}]},"9":{"line":144,"type":"cond-expr","locations":[{"start":{"line":144,"column":69},"end":{"line":144,"column":70}},{"start":{"line":144,"column":73},"end":{"line":144,"column":74}}]},"10":{"line":145,"type":"cond-expr","locations":[{"start":{"line":145,"column":69},"end":{"line":145,"column":70}},{"start":{"line":145,"column":73},"end":{"line":145,"column":74}}]},"11":{"line":146,"type":"cond-expr","locations":[{"start":{"line":146,"column":69},"end":{"line":146,"column":70}},{"start":{"line":146,"column":73},"end":{"line":146,"column":74}}]},"12":{"line":147,"type":"cond-expr","locations":[{"start":{"line":147,"column":50},"end":{"line":147,"column":51}},{"start":{"line":147,"column":54},"end":{"line":147,"column":55}}]}},"code":[";(function (root, factory, undef) {","\tif (typeof exports === \"object\") {","\t\t// CommonJS","\t\tmodule.exports = exports = factory(require(\"./core\"), require(\"./enc-base64\"), require(\"./md5\"), require(\"./evpkdf\"), require(\"./cipher-core\"));","\t}","\telse if (typeof define === \"function\" && define.amd) {","\t\t// AMD","\t\tdefine([\"./core\", \"./enc-base64\", \"./md5\", \"./evpkdf\", \"./cipher-core\"], factory);","\t}","\telse {","\t\t// Global (browser)","\t\tfactory(root.CryptoJS);","\t}","}(this, function (CryptoJS) {","","\t(function () {","\t    // Shortcuts","\t    var C = CryptoJS;","\t    var C_lib = C.lib;","\t    var StreamCipher = C_lib.StreamCipher;","\t    var C_algo = C.algo;","","\t    // Reusable objects","\t    var S  = [];","\t    var C_ = [];","\t    var G  = [];","","\t    /**","\t     * Rabbit stream cipher algorithm.","\t     *","\t     * This is a legacy version that neglected to convert the key to little-endian.","\t     * This error doesn't affect the cipher's security,","\t     * but it does affect its compatibility with other implementations.","\t     */","\t    var RabbitLegacy = C_algo.RabbitLegacy = StreamCipher.extend({","\t        _doReset: function () {","\t            // Shortcuts","\t            var K = this._key.words;","\t            var iv = this.cfg.iv;","","\t            // Generate initial state values","\t            var X = this._X = [","\t                K[0], (K[3] << 16) | (K[2] >>> 16),","\t                K[1], (K[0] << 16) | (K[3] >>> 16),","\t                K[2], (K[1] << 16) | (K[0] >>> 16),","\t                K[3], (K[2] << 16) | (K[1] >>> 16)","\t            ];","","\t            // Generate initial counter values","\t            var C = this._C = [","\t                (K[2] << 16) | (K[2] >>> 16), (K[0] & 0xffff0000) | (K[1] & 0x0000ffff),","\t                (K[3] << 16) | (K[3] >>> 16), (K[1] & 0xffff0000) | (K[2] & 0x0000ffff),","\t                (K[0] << 16) | (K[0] >>> 16), (K[2] & 0xffff0000) | (K[3] & 0x0000ffff),","\t                (K[1] << 16) | (K[1] >>> 16), (K[3] & 0xffff0000) | (K[0] & 0x0000ffff)","\t            ];","","\t            // Carry bit","\t            this._b = 0;","","\t            // Iterate the system four times","\t            for (var i = 0; i < 4; i++) {","\t                nextState.call(this);","\t            }","","\t            // Modify the counters","\t            for (var i = 0; i < 8; i++) {","\t                C[i] ^= X[(i + 4) & 7];","\t            }","","\t            // IV setup","\t            if (iv) {","\t                // Shortcuts","\t                var IV = iv.words;","\t                var IV_0 = IV[0];","\t                var IV_1 = IV[1];","","\t                // Generate four subvectors","\t                var i0 = (((IV_0 << 8) | (IV_0 >>> 24)) & 0x00ff00ff) | (((IV_0 << 24) | (IV_0 >>> 8)) & 0xff00ff00);","\t                var i2 = (((IV_1 << 8) | (IV_1 >>> 24)) & 0x00ff00ff) | (((IV_1 << 24) | (IV_1 >>> 8)) & 0xff00ff00);","\t                var i1 = (i0 >>> 16) | (i2 & 0xffff0000);","\t                var i3 = (i2 << 16)  | (i0 & 0x0000ffff);","","\t                // Modify counter values","\t                C[0] ^= i0;","\t                C[1] ^= i1;","\t                C[2] ^= i2;","\t                C[3] ^= i3;","\t                C[4] ^= i0;","\t                C[5] ^= i1;","\t                C[6] ^= i2;","\t                C[7] ^= i3;","","\t                // Iterate the system four times","\t                for (var i = 0; i < 4; i++) {","\t                    nextState.call(this);","\t                }","\t            }","\t        },","","\t        _doProcessBlock: function (M, offset) {","\t            // Shortcut","\t            var X = this._X;","","\t            // Iterate the system","\t            nextState.call(this);","","\t            // Generate four keystream words","\t            S[0] = X[0] ^ (X[5] >>> 16) ^ (X[3] << 16);","\t            S[1] = X[2] ^ (X[7] >>> 16) ^ (X[5] << 16);","\t            S[2] = X[4] ^ (X[1] >>> 16) ^ (X[7] << 16);","\t            S[3] = X[6] ^ (X[3] >>> 16) ^ (X[1] << 16);","","\t            for (var i = 0; i < 4; i++) {","\t                // Swap endian","\t                S[i] = (((S[i] << 8)  | (S[i] >>> 24)) & 0x00ff00ff) |","\t                       (((S[i] << 24) | (S[i] >>> 8))  & 0xff00ff00);","","\t                // Encrypt","\t                M[offset + i] ^= S[i];","\t            }","\t        },","","\t        blockSize: 128/32,","","\t        ivSize: 64/32","\t    });","","\t    function nextState() {","\t        // Shortcuts","\t        var X = this._X;","\t        var C = this._C;","","\t        // Save old counter values","\t        for (var i = 0; i < 8; i++) {","\t            C_[i] = C[i];","\t        }","","\t        // Calculate new counter values","\t        C[0] = (C[0] + 0x4d34d34d + this._b) | 0;","\t        C[1] = (C[1] + 0xd34d34d3 + ((C[0] >>> 0) < (C_[0] >>> 0) ? 1 : 0)) | 0;","\t        C[2] = (C[2] + 0x34d34d34 + ((C[1] >>> 0) < (C_[1] >>> 0) ? 1 : 0)) | 0;","\t        C[3] = (C[3] + 0x4d34d34d + ((C[2] >>> 0) < (C_[2] >>> 0) ? 1 : 0)) | 0;","\t        C[4] = (C[4] + 0xd34d34d3 + ((C[3] >>> 0) < (C_[3] >>> 0) ? 1 : 0)) | 0;","\t        C[5] = (C[5] + 0x34d34d34 + ((C[4] >>> 0) < (C_[4] >>> 0) ? 1 : 0)) | 0;","\t        C[6] = (C[6] + 0x4d34d34d + ((C[5] >>> 0) < (C_[5] >>> 0) ? 1 : 0)) | 0;","\t        C[7] = (C[7] + 0xd34d34d3 + ((C[6] >>> 0) < (C_[6] >>> 0) ? 1 : 0)) | 0;","\t        this._b = (C[7] >>> 0) < (C_[7] >>> 0) ? 1 : 0;","","\t        // Calculate the g-values","\t        for (var i = 0; i < 8; i++) {","\t            var gx = X[i] + C[i];","","\t            // Construct high and low argument for squaring","\t            var ga = gx & 0xffff;","\t            var gb = gx >>> 16;","","\t            // Calculate high and low result of squaring","\t            var gh = ((((ga * ga) >>> 17) + ga * gb) >>> 15) + gb * gb;","\t            var gl = (((gx & 0xffff0000) * gx) | 0) + (((gx & 0x0000ffff) * gx) | 0);","","\t            // High XOR low","\t            G[i] = gh ^ gl;","\t        }","","\t        // Calculate new state values","\t        X[0] = (G[0] + ((G[7] << 16) | (G[7] >>> 16)) + ((G[6] << 16) | (G[6] >>> 16))) | 0;","\t        X[1] = (G[1] + ((G[0] << 8)  | (G[0] >>> 24)) + G[7]) | 0;","\t        X[2] = (G[2] + ((G[1] << 16) | (G[1] >>> 16)) + ((G[0] << 16) | (G[0] >>> 16))) | 0;","\t        X[3] = (G[3] + ((G[2] << 8)  | (G[2] >>> 24)) + G[1]) | 0;","\t        X[4] = (G[4] + ((G[3] << 16) | (G[3] >>> 16)) + ((G[2] << 16) | (G[2] >>> 16))) | 0;","\t        X[5] = (G[5] + ((G[4] << 8)  | (G[4] >>> 24)) + G[3]) | 0;","\t        X[6] = (G[6] + ((G[5] << 16) | (G[5] >>> 16)) + ((G[4] << 16) | (G[4] >>> 16))) | 0;","\t        X[7] = (G[7] + ((G[6] << 8)  | (G[6] >>> 24)) + G[5]) | 0;","\t    }","","\t    /**","\t     * Shortcut functions to the cipher's object interface.","\t     *","\t     * @example","\t     *","\t     *     var ciphertext = CryptoJS.RabbitLegacy.encrypt(message, key, cfg);","\t     *     var plaintext  = CryptoJS.RabbitLegacy.decrypt(ciphertext, key, cfg);","\t     */","\t    C.RabbitLegacy = StreamCipher._createHelper(RabbitLegacy);","\t}());","","","\treturn CryptoJS.RabbitLegacy;","","}));"],"l":{"1":1,"2":1,"4":1,"6":0,"8":0,"12":0,"16":1,"18":1,"19":1,"20":1,"21":1,"24":1,"25":1,"26":1,"35":1,"38":0,"39":0,"42":0,"50":0,"58":0,"61":0,"62":0,"66":0,"67":0,"71":0,"73":0,"74":0,"75":0,"78":0,"79":0,"80":0,"81":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":0,"90":0,"91":0,"94":0,"95":0,"102":0,"105":0,"108":0,"109":0,"110":0,"111":0,"113":0,"115":0,"119":0,"128":1,"130":0,"131":0,"134":0,"135":0,"139":0,"140":0,"141":0,"142":0,"143":0,"144":0,"145":0,"146":0,"147":0,"150":0,"151":0,"154":0,"155":0,"158":0,"159":0,"162":0,"166":0,"167":0,"168":0,"169":0,"170":0,"171":0,"172":0,"173":0,"184":1,"188":1}}}